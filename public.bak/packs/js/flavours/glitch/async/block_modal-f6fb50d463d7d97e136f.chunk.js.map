{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/ui/components/block_modal.jsx"],"names":["BlockModal","connect","makeMapStateToProps","getAccount","makeGetAccount","state","account","getIn","dispatch","onConfirm","blockAccount","get","onBlockAndReport","initReport","onClose","closeModal","_dec","_class","injectIntl","React","PureComponent","constructor","arguments","handleClick","this","props","handleSecondary","handleCancel","setRef","c","button","componentDidMount","focus","render","_jsx","className","FormattedMessage","id","defaultMessage","values","name","Button","onClick","createElement","ref"],"mappings":"mOAoCE,IAIIA,EAFUC,mBA3BYC,KAC1B,MAAMC,EAAaC,cAMnB,OAJwBC,IAAK,CAC3BC,QAASH,EAAWE,EAAOA,EAAME,MAAM,CAAC,SAAU,MAAO,qBAMlCC,IAClB,CACLC,UAAUH,GACRE,EAASE,YAAaJ,EAAQK,IAAI,SAGpCC,iBAAiBN,GACfE,EAASE,YAAaJ,EAAQK,IAAI,QAClCH,EAASK,YAAWP,KAGtBQ,UACEN,EAASO,mBAKiDC,CAAAC,EAC/DC,YAAUD,EADI,cAEUE,IAAMC,cAAcC,cAAA,SAAAC,WAAA,KAc3CC,YAAc,KACZC,KAAKC,MAAMX,UACXU,KAAKC,MAAMhB,UAAUe,KAAKC,MAAMnB,UAChC,KAEFoB,gBAAkB,KAChBF,KAAKC,MAAMX,UACXU,KAAKC,MAAMb,iBAAiBY,KAAKC,MAAMnB,UACvC,KAEFqB,aAAe,KACbH,KAAKC,MAAMX,WACX,KAEFc,OAAUC,IACRL,KAAKM,OAASD,GAnBhBE,oBACEP,KAAKM,OAAOE,QAqBdC,SACE,MAAM,QAAE3B,GAAYkB,KAAKC,MAEzB,OACES,YAAA,OAAKC,UAAU,sCAA+B,EAC5CD,YAAA,OAAKC,UAAU,+BAAwB,EACrCD,YAAA,cACEA,YAACE,IAAgB,CACfC,GAAG,8BACHC,eAAe,yCACfC,OAAQ,CAAEC,KAAMN,YAAA,mBAAQ,IAAE5B,EAAQK,IAAI,cAK5CuB,YAAA,OAAKC,UAAU,gCAAyB,EACtCD,YAACO,IAAM,CAACC,QAASlB,KAAKG,aAAcQ,UAAU,mCAA4B,EACxED,YAACE,IAAgB,CAACC,GAAG,4BAA4BC,eAAe,YAElEJ,YAACO,IAAM,CAACC,QAASlB,KAAKE,gBAAiBS,UAAU,6CAAsC,EACrFD,YAACE,IAAgB,CAACC,GAAG,uCAAuCC,eAAe,oBAE7EnB,IAAAwB,cAACF,IAAM,CAACC,QAASlB,KAAKD,YAAaqB,IAAKpB,KAAKI,QAC3CM,YAACE,IAAgB,CAACC,GAAG,8BAA8BC,eAAe,iBAO7ErB","file":"js/flavours/glitch/async/block_modal-f6fb50d463d7d97e136f.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { makeGetAccount } from '../../../selectors';\nimport Button from '../../../components/button';\nimport { closeModal } from '../../../actions/modal';\nimport { blockAccount } from '../../../actions/accounts';\nimport { initReport } from '../../../actions/reports';\n\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = state => ({\n    account: getAccount(state, state.getIn(['blocks', 'new', 'account_id'])),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onConfirm(account) {\n      dispatch(blockAccount(account.get('id')));\n    },\n\n    onBlockAndReport(account) {\n      dispatch(blockAccount(account.get('id')));\n      dispatch(initReport(account));\n    },\n\n    onClose() {\n      dispatch(closeModal());\n    },\n  };\n};\n\nexport default @connect(makeMapStateToProps, mapDispatchToProps)\n@injectIntl\nclass BlockModal extends React.PureComponent {\n\n  static propTypes = {\n    account: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onBlockAndReport: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleClick = () => {\n    this.props.onClose();\n    this.props.onConfirm(this.props.account);\n  };\n\n  handleSecondary = () => {\n    this.props.onClose();\n    this.props.onBlockAndReport(this.props.account);\n  };\n\n  handleCancel = () => {\n    this.props.onClose();\n  };\n\n  setRef = (c) => {\n    this.button = c;\n  };\n\n  render () {\n    const { account } = this.props;\n\n    return (\n      <div className='modal-root__modal block-modal'>\n        <div className='block-modal__container'>\n          <p>\n            <FormattedMessage\n              id='confirmations.block.message'\n              defaultMessage='Are you sure you want to block {name}?'\n              values={{ name: <strong>@{account.get('acct')}</strong> }}\n            />\n          </p>\n        </div>\n\n        <div className='block-modal__action-bar'>\n          <Button onClick={this.handleCancel} className='block-modal__cancel-button'>\n            <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n          </Button>\n          <Button onClick={this.handleSecondary} className='confirmation-modal__secondary-button'>\n            <FormattedMessage id='confirmations.block.block_and_report' defaultMessage='Block & Report' />\n          </Button>\n          <Button onClick={this.handleClick} ref={this.setRef}>\n            <FormattedMessage id='confirmations.block.confirm' defaultMessage='Block' />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":""}