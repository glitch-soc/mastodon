{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/components/edited_timestamp/containers/dropdown_menu_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/components/edited_timestamp/index.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/status/components/detailed_status.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/status/components/action_bar.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/status/index.jsx"],"names":["connect","mapStateToProps","state","_ref","statusId","openDropdownId","getIn","openedViaKeyboard","items","loading","mapDispatchToProps","dispatch","_ref2","onOpen","id","onItemClick","keyboard","fetchHistory","openDropdownMenu","onClose","closeDropdownMenu","DropdownMenu","EditedTimestamp","index","openModal","_dec","_class","React","PureComponent","constructor","arguments","handleItemClick","item","i","this","props","renderHeader","_jsx","FormattedMessage","defaultMessage","values","count","size","renderItem","onClick","onKeyPress","formattedDate","RelativeTimestamp","timestamp","get","short","formattedName","InlineAccount","accountId","label","name","date","className","render","scrollable","Date","toLocaleString","undefined","hourCycle","month","day","hour","minute","Icon","DetailedStatus","ImmutablePureComponent","height","handleAccountClick","e","button","ctrlKey","altKey","metaKey","context","router","preventDefault","history","location","mastodonBackSteps","push","status","stopPropagation","parseClick","destination","handleOpenVideo","options","onOpenVideo","setRef","c","node","_measureHeight","handleChildUpdate","handleModalLink","href","target","nodeName","parentNode","window","open","handleTranslate","onTranslate","heightJustChanged","measureHeight","scheduleIdleTask","setState","Math","ceil","scrollHeight","onHeightChange","componentDidUpdate","prevProps","prevState","expanded","onToggleHidden","settings","pictureInPicture","intl","outerStyle","boxSizing","compact","applicationLink","reblogLink","reblogIcon","favouriteLink","edited","contentMedia","contentMediaIcons","extraMedia","extraMediaIcons","media","mediaIcons","PictureInPicturePlaceholder","some","AttachmentList","attachment","Audio","src","alt","lang","duration","poster","backgroundColor","foregroundColor","accentColor","sensitive","visible","showMedia","blurhash","onToggleVisibility","onToggleMediaVisibility","Video","preview","frameRate","inline","letterbox","fullwidth","preventPlayback","autoplay","MediaGallery","standalone","hidden","onOpenMedia","Card","card","PollContainer","pollId","Fragment","rel","visibilityLink","VisibilityIcon","visibility","includes","Link","to","AnimatedNumber","value","style","createElement","ref","classNames","Avatar","account","DisplayName","localDomain","domain","StatusContent","collapsed","onExpandedToggle","onUpdate","tagLinks","rewriteMentions","zoomEmojisOnHover","disabled","StatusReactions","reactions","addReaction","onReactionAdd","removeReaction","onReactionRemove","canReact","identity","signedIn","year","contextTypes","PropTypes","object","propTypes","ImmutablePropTypes","map","isRequired","func","bool","string","contains","inUse","available","messages","defineMessages","delete","redraft","edit","direct","mention","reply","reblog","reblog_private","cancel_reblog_private","cannot_reblog","favourite","react","bookmark","more","mute","muteConversation","unmuteConversation","block","report","share","pin","unpin","embed","admin_account","admin_status","admin_domain","copy","openOriginalPage","ActionBar","injectIntl","_class2","handleReplyClick","onReply","handleReblogClick","onReblog","handleFavouriteClick","onFavourite","handleEmojiPick","data","native","replace","imageUrl","handleBookmarkClick","onBookmark","handleDeleteClick","onDelete","handleRedraftClick","handleEditClick","onEdit","handleDirectClick","onDirect","handleMentionClick","onMention","handleMuteClick","onMute","handleConversationMuteClick","onMuteConversation","handleBlockClick","onBlock","handleReport","onReport","handlePinClick","onPin","handleShare","navigator","text","url","handleEmbed","onEmbed","handleCopy","clipboard","writeText","handleNoOp","permissions","publicStatus","pinnableStatus","mutingConversation","writtenByMe","me","isRemote","menu","formatMessage","action","PERMISSION_MANAGE_USERS","accountAdminLink","statusAdminLink","PERMISSION_MANAGE_FEDERATION","split","filter","r","maxReactions","reactButton","IconButton","title","icon","shareButton","reblogPrivate","reblogTitle","active","animate","EmojiPickerDropdown","onPickEmoji","DropdownMenuContainer","direction","deleteConfirm","deleteMessage","redraftConfirm","redraftMessage","revealAll","hideAll","detailedStatus","replyConfirm","replyMessage","tootHeading","Status","makeMapStateToProps","getStatus","makeGetStatus","getPictureInPicture","makeGetPictureInPicture","getAncestorsIds","createSelector","_","inReplyTos","ancestorsIds","Immutable","List","withMutations","mutable","unshift","getDescendantsIds","contextReplies","statuses","descendantsIds","ids","length","pop","replies","reverse","forEach","insertAt","findIndex","idx","splice","params","isLoading","askReplyConfirmation","trim","emojiMap","makeCustomEmojiMap","_this","fullscreen","isExpanded","threadExpanded","loadedStatusId","revealBehindCW","handleToggleHidden","revealStatus","hideStatus","setExpansion","handleToggleMediaVisibility","handleModalFavourite","unfavourite","shiftKey","favouriteModal","type","handleReactionAdd","handleReactionRemove","handlePin","message","confirm","onDoNotAsk","changeLocalSetting","onConfirm","replyCompose","handleModalReblog","privacy","unreblog","initBoostModal","missingMediaDescription","boostModal","unbookmark","withRedraft","deleteModal","deleteStatus","editStatus","directCompose","mentionCompose","handleOpenMedia","handleHotkeyOpenMedia","startTime","initMuteModal","unmuteStatus","muteStatus","handleToggleAll","statusIds","concat","toJS","undoStatusTranslation","translateStatus","initBlockModal","initReport","handleHotkeyToggleSensitive","handleHotkeyMoveUp","handleMoveUp","handleHotkeyMoveDown","handleMoveDown","handleHotkeyReply","handleHotkeyFavourite","handleHotkeyBoost","handleHotkeyBookmark","handleHotkeyMention","handleHotkeyOpenProfile","_selectChild","indexOf","handleHeaderClick","column","scrollTop","setColumnRef","onFullScreenChange","isFullscreen","componentDidMount","attachFullscreenListener","fetchStatus","element","querySelectorAll","requestAnimationFrame","scrollIntoView","static","update","updated","defaultMediaVisibility","autoUnfoldCW","align_top","container","offsetTop","clientHeight","offsetHeight","focus","renderChildren","list","StatusContainer","onMoveUp","onMoveDown","contextType","componentWillUnmount","detachFullscreenListener","ancestors","descendants","multiColumn","Column","LoadingIndicator","ColumnBackButton","MissingIndicator","isLocal","isIndexable","handlers","moveUp","moveDown","boost","openProfile","toggleSpoiler","toggleSensitive","openMedia","bindToDocument","ColumnHeader","showBackButton","extraButton","ScrollContainer","scrollKey","HotKeys","tabIndex","textForScreenReader","Helmet","displayName","username","prefix","str","num","slice","truncate","titleFromStatus","content"],"mappings":"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","file":"js/flavours/glitch/async/status-3086674425c285a43581.chunk.js","sourcesContent":["import { connect } from 'react-redux';\nimport { openDropdownMenu, closeDropdownMenu } from 'flavours/glitch/actions/dropdown_menu';\nimport { fetchHistory } from 'flavours/glitch/actions/history';\nimport DropdownMenu from 'flavours/glitch/components/dropdown_menu';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  openDropdownId: state.getIn(['dropdown_menu', 'openId']),\n  openedViaKeyboard: state.getIn(['dropdown_menu', 'keyboard']),\n  items: state.getIn(['history', statusId, 'items']),\n  loading: state.getIn(['history', statusId, 'loading']),\n});\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onOpen (id, onItemClick, keyboard) {\n    dispatch(fetchHistory(statusId));\n    dispatch(openDropdownMenu(id, keyboard));\n  },\n\n  onClose (id) {\n    dispatch(closeDropdownMenu(id));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DropdownMenu);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport Icon from 'flavours/glitch/components/icon';\nimport DropdownMenu from './containers/dropdown_menu_container';\nimport { connect } from 'react-redux';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport RelativeTimestamp from 'flavours/glitch/components/relative_timestamp';\nimport InlineAccount from 'flavours/glitch/components/inline_account';\n\nconst mapDispatchToProps = (dispatch, { statusId }) => ({\n\n  onItemClick (index) {\n    dispatch(openModal('COMPARE_HISTORY', { index, statusId }));\n  },\n\n});\n\nexport default @connect(null, mapDispatchToProps)\nclass EditedTimestamp extends React.PureComponent {\n\n  static propTypes = {\n    statusId: PropTypes.string.isRequired,\n    timestamp: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n    onItemClick: PropTypes.func.isRequired,\n  };\n\n  handleItemClick = (item, i) => {\n    const { onItemClick } = this.props;\n    onItemClick(i);\n  };\n\n  renderHeader = items => {\n    return (\n      <FormattedMessage id='status.edited_x_times' defaultMessage='Edited {count, plural, one {{count} time} other {{count} times}}' values={{ count: items.size - 1 }} />\n    );\n  };\n\n  renderItem = (item, index, { onClick, onKeyPress }) => {\n    const formattedDate = <RelativeTimestamp timestamp={item.get('created_at')} short={false} />;\n    const formattedName = <InlineAccount accountId={item.get('account')} />;\n\n    const label = item.get('original') ? (\n      <FormattedMessage id='status.history.created' defaultMessage='{name} created {date}' values={{ name: formattedName, date: formattedDate }} />\n    ) : (\n      <FormattedMessage id='status.history.edited' defaultMessage='{name} edited {date}' values={{ name: formattedName, date: formattedDate }} />\n    );\n\n    return (\n      <li className='dropdown-menu__item edited-timestamp__history__item' key={item.get('created_at')}>\n        <button data-index={index} onClick={onClick} onKeyPress={onKeyPress}>{label}</button>\n      </li>\n    );\n  };\n\n  render () {\n    const { timestamp, statusId } = this.props;\n\n    return (\n      <DropdownMenu statusId={statusId} renderItem={this.renderItem} scrollable renderHeader={this.renderHeader} onItemClick={this.handleItemClick}>\n        <button className='dropdown-menu__text-button'>\n          <FormattedMessage id='status.edited' defaultMessage='Edited {date}' values={{ date: new Date(timestamp).toLocaleString(undefined, { hourCycle: 'h23', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' }) }} /> <Icon id='caret-down' />\n        </button>\n      </DropdownMenu>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport Avatar from 'flavours/glitch/components/avatar';\nimport DisplayName from 'flavours/glitch/components/display_name';\nimport StatusContent from 'flavours/glitch/components/status_content';\nimport MediaGallery from 'flavours/glitch/components/media_gallery';\nimport AttachmentList from 'flavours/glitch/components/attachment_list';\nimport { Link } from 'react-router-dom';\nimport Card from './card';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Video from 'flavours/glitch/features/video';\nimport Audio from 'flavours/glitch/features/audio';\nimport VisibilityIcon from 'flavours/glitch/components/status_visibility_icon';\nimport scheduleIdleTask from '../../ui/util/schedule_idle_task';\nimport classNames from 'classnames';\nimport PollContainer from 'flavours/glitch/containers/poll_container';\nimport Icon from 'flavours/glitch/components/icon';\nimport AnimatedNumber from 'flavours/glitch/components/animated_number';\nimport PictureInPicturePlaceholder from 'flavours/glitch/components/picture_in_picture_placeholder';\nimport EditedTimestamp from 'flavours/glitch/components/edited_timestamp';\nimport StatusReactions from 'flavours/glitch/components/status_reactions';\n\nexport default class DetailedStatus extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    settings: ImmutablePropTypes.map.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n    onOpenVideo: PropTypes.func.isRequired,\n    onToggleHidden: PropTypes.func,\n    onTranslate: PropTypes.func.isRequired,\n    expanded: PropTypes.bool,\n    measureHeight: PropTypes.bool,\n    onHeightChange: PropTypes.func,\n    domain: PropTypes.string.isRequired,\n    compact: PropTypes.bool,\n    showMedia: PropTypes.bool,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n    onToggleMediaVisibility: PropTypes.func,\n    onReactionAdd: PropTypes.func.isRequired,\n    onReactionRemove: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    height: null,\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      let state = { ...this.context.router.history.location.state };\n      state.mastodonBackSteps = (state.mastodonBackSteps || 0) + 1;\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`, state);\n    }\n\n    e.stopPropagation();\n  };\n\n  parseClick = (e, destination) => {\n    if (e.button === 0 && !(e.ctrlKey || e.altKey || e.metaKey) && this.context.router) {\n      e.preventDefault();\n      let state = { ...this.context.router.history.location.state };\n      state.mastodonBackSteps = (state.mastodonBackSteps || 0) + 1;\n      this.context.router.history.push(destination, state);\n    }\n\n    e.stopPropagation();\n  };\n\n  handleOpenVideo = (options) => {\n    this.props.onOpenVideo(this.props.status.getIn(['media_attachments', 0]), options);\n  };\n\n  _measureHeight (heightJustChanged) {\n    if (this.props.measureHeight && this.node) {\n      scheduleIdleTask(() => this.node && this.setState({ height: Math.ceil(this.node.scrollHeight) + 1 }));\n\n      if (this.props.onHeightChange && heightJustChanged) {\n        this.props.onHeightChange();\n      }\n    }\n  }\n\n  setRef = c => {\n    this.node = c;\n    this._measureHeight();\n  };\n\n  componentDidUpdate (prevProps, prevState) {\n    this._measureHeight(prevState.height !== this.state.height);\n  }\n\n  handleChildUpdate = () => {\n    this._measureHeight();\n  };\n\n  handleModalLink = e => {\n    e.preventDefault();\n\n    let href;\n\n    if (e.target.nodeName !== 'A') {\n      href = e.target.parentNode.href;\n    } else {\n      href = e.target.href;\n    }\n\n    window.open(href, 'mastodon-intent', 'width=445,height=600,resizable=no,menubar=no,status=no,scrollbars=yes');\n  };\n\n  handleTranslate = () => {\n    const { onTranslate, status } = this.props;\n    onTranslate(status);\n  };\n\n  render () {\n    const status = (this.props.status && this.props.status.get('reblog')) ? this.props.status.get('reblog') : this.props.status;\n    const { expanded, onToggleHidden, settings, pictureInPicture, intl } = this.props;\n    const outerStyle = { boxSizing: 'border-box' };\n    const { compact } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    let applicationLink = '';\n    let reblogLink = '';\n    let reblogIcon = 'retweet';\n    let favouriteLink = '';\n    let edited = '';\n\n    //  Depending on user settings, some media are considered as parts of the\n    //  contents (affected by CW) while other will be displayed outside of the\n    //  CW.\n    let contentMedia = [];\n    let contentMediaIcons = [];\n    let extraMedia = [];\n    let extraMediaIcons = [];\n    let media = contentMedia;\n    let mediaIcons = contentMediaIcons;\n\n    if (settings.getIn(['content_warnings', 'media_outside'])) {\n      media = extraMedia;\n      mediaIcons = extraMediaIcons;\n    }\n\n    if (this.props.measureHeight) {\n      outerStyle.height = `${this.state.height}px`;\n    }\n\n    if (pictureInPicture.get('inUse')) {\n      media.push(<PictureInPicturePlaceholder />);\n      mediaIcons.push('video-camera');\n    } else if (status.get('media_attachments').size > 0) {\n      if (status.get('media_attachments').some(item => item.get('type') === 'unknown')) {\n        media.push(<AttachmentList media={status.get('media_attachments')} />);\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'audio') {\n        const attachment = status.getIn(['media_attachments', 0]);\n\n        media.push(\n          <Audio\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            duration={attachment.getIn(['meta', 'original', 'duration'], 0)}\n            poster={attachment.get('preview_url') || status.getIn(['account', 'avatar_static'])}\n            backgroundColor={attachment.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={attachment.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={attachment.getIn(['meta', 'colors', 'accent'])}\n            sensitive={status.get('sensitive')}\n            visible={this.props.showMedia}\n            blurhash={attachment.get('blurhash')}\n            height={150}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('music');\n      } else if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        const attachment = status.getIn(['media_attachments', 0]);\n        media.push(\n          <Video\n            preview={attachment.get('preview_url')}\n            frameRate={attachment.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={attachment.get('blurhash')}\n            src={attachment.get('url')}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            inline\n            sensitive={status.get('sensitive')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            preventPlayback={!expanded}\n            onOpenVideo={this.handleOpenVideo}\n            autoplay\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('video-camera');\n      } else {\n        media.push(\n          <MediaGallery\n            standalone\n            sensitive={status.get('sensitive')}\n            media={status.get('media_attachments')}\n            lang={status.get('language')}\n            letterbox={settings.getIn(['media', 'letterbox'])}\n            fullwidth={settings.getIn(['media', 'fullwidth'])}\n            hidden={!expanded}\n            onOpenMedia={this.props.onOpenMedia}\n            visible={this.props.showMedia}\n            onToggleVisibility={this.props.onToggleMediaVisibility}\n          />,\n        );\n        mediaIcons.push('picture-o');\n      }\n    } else if (status.get('card')) {\n      media.push(<Card sensitive={status.get('sensitive')} onOpenMedia={this.props.onOpenMedia} card={status.get('card')} />);\n      mediaIcons.push('link');\n    }\n\n    if (status.get('poll')) {\n      contentMedia.push(<PollContainer pollId={status.get('poll')} lang={status.get('language')} />);\n      contentMediaIcons.push('tasks');\n    }\n\n    if (status.get('application')) {\n      applicationLink = <React.Fragment> · <a className='detailed-status__application' href={status.getIn(['application', 'website'])} target='_blank' rel='noopener noreferrer'>{status.getIn(['application', 'name'])}</a></React.Fragment>;\n    }\n\n    const visibilityLink = <React.Fragment> · <VisibilityIcon visibility={status.get('visibility')} /></React.Fragment>;\n\n    if (status.get('visibility') === 'direct') {\n      reblogIcon = 'envelope';\n    } else if (status.get('visibility') === 'private') {\n      reblogIcon = 'lock';\n    }\n\n    if (!['unlisted', 'public'].includes(status.get('visibility'))) {\n      reblogLink = null;\n    } else if (this.context.router) {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/reblogs`} className='detailed-status__link'>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </Link>\n        </React.Fragment>\n      );\n    } else {\n      reblogLink = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <a href={`/interact/${status.get('id')}?type=reblog`} className='detailed-status__link' onClick={this.handleModalLink}>\n            <Icon id={reblogIcon} />\n            <span className='detailed-status__reblogs'>\n              <AnimatedNumber value={status.get('reblogs_count')} />\n            </span>\n          </a>\n        </React.Fragment>\n      );\n    }\n\n    if (this.context.router) {\n      favouriteLink = (\n        <Link to={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}/favourites`} className='detailed-status__link'>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </Link>\n      );\n    } else {\n      favouriteLink = (\n        <a href={`/interact/${status.get('id')}?type=favourite`} className='detailed-status__link' onClick={this.handleModalLink}>\n          <Icon id='star' />\n          <span className='detailed-status__favorites'>\n            <AnimatedNumber value={status.get('favourites_count')} />\n          </span>\n        </a>\n      );\n    }\n\n    if (status.get('edited_at')) {\n      edited = (\n        <React.Fragment>\n          <React.Fragment> · </React.Fragment>\n          <EditedTimestamp statusId={status.get('id')} timestamp={status.get('edited_at')} />\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <div style={outerStyle}>\n        <div ref={this.setRef} className={classNames('detailed-status', `detailed-status-${status.get('visibility')}`, { compact })} data-status-by={status.getIn(['account', 'acct'])}>\n          <a href={status.getIn(['account', 'url'])} onClick={this.handleAccountClick} className='detailed-status__display-name'>\n            <div className='detailed-status__display-avatar'><Avatar account={status.get('account')} size={48} /></div>\n            <DisplayName account={status.get('account')} localDomain={this.props.domain} />\n          </a>\n\n          <StatusContent\n            status={status}\n            media={contentMedia}\n            extraMedia={extraMedia}\n            mediaIcons={contentMediaIcons}\n            expanded={expanded}\n            collapsed={false}\n            onExpandedToggle={onToggleHidden}\n            onTranslate={this.handleTranslate}\n            parseClick={this.parseClick}\n            onUpdate={this.handleChildUpdate}\n            tagLinks={settings.get('tag_misleading_links')}\n            rewriteMentions={settings.get('rewrite_mentions')}\n            zoomEmojisOnHover={settings.get('zoom_emojis_on_hover')}\n            disabled\n          />\n\n          <StatusReactions\n            statusId={status.get('id')}\n            reactions={status.get('reactions')}\n            addReaction={this.props.onReactionAdd}\n            removeReaction={this.props.onReactionRemove}\n            canReact={this.context.identity.signedIn}\n          />\n\n          <div className='detailed-status__meta'>\n            <a className='detailed-status__datetime' href={status.get('url')} target='_blank' rel='noopener noreferrer'>\n              {new Date(status.get('created_at')).toLocaleString(undefined, { hourCycle: 'h23', year: 'numeric', month: 'short', day: '2-digit', hour: '2-digit', minute: '2-digit' })}\n            </a>{edited}{visibilityLink}{applicationLink}{reblogLink} · {favouriteLink}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from 'flavours/glitch/components/icon_button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport DropdownMenuContainer from 'flavours/glitch/containers/dropdown_menu_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { me, maxReactions } from 'flavours/glitch/initial_state';\nimport { accountAdminLink, statusAdminLink } from 'flavours/glitch/utils/backend_links';\nimport classNames from 'classnames';\nimport { PERMISSION_MANAGE_USERS, PERMISSION_MANAGE_FEDERATION } from 'flavours/glitch/permissions';\nimport EmojiPickerDropdown from '../../compose/containers/emoji_picker_dropdown_container';\n\nconst messages = defineMessages({\n  delete: { id: 'status.delete', defaultMessage: 'Delete' },\n  redraft: { id: 'status.redraft', defaultMessage: 'Delete & re-draft' },\n  edit: { id: 'status.edit', defaultMessage: 'Edit' },\n  direct: { id: 'status.direct', defaultMessage: 'Direct message @{name}' },\n  mention: { id: 'status.mention', defaultMessage: 'Mention @{name}' },\n  reply: { id: 'status.reply', defaultMessage: 'Reply' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  reblog_private: { id: 'status.reblog_private', defaultMessage: 'Boost with original visibility' },\n  cancel_reblog_private: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  cannot_reblog: { id: 'status.cannot_reblog', defaultMessage: 'This post cannot be boosted' },\n  favourite: { id: 'status.favourite', defaultMessage: 'Favourite' },\n  react: { id: 'status.react', defaultMessage: 'React' },\n  bookmark: { id: 'status.bookmark', defaultMessage: 'Bookmark' },\n  more: { id: 'status.more', defaultMessage: 'More' },\n  mute: { id: 'status.mute', defaultMessage: 'Mute @{name}' },\n  muteConversation: { id: 'status.mute_conversation', defaultMessage: 'Mute conversation' },\n  unmuteConversation: { id: 'status.unmute_conversation', defaultMessage: 'Unmute conversation' },\n  block: { id: 'status.block', defaultMessage: 'Block @{name}' },\n  report: { id: 'status.report', defaultMessage: 'Report @{name}' },\n  share: { id: 'status.share', defaultMessage: 'Share' },\n  pin: { id: 'status.pin', defaultMessage: 'Pin on profile' },\n  unpin: { id: 'status.unpin', defaultMessage: 'Unpin from profile' },\n  embed: { id: 'status.embed', defaultMessage: 'Embed' },\n  admin_account: { id: 'status.admin_account', defaultMessage: 'Open moderation interface for @{name}' },\n  admin_status: { id: 'status.admin_status', defaultMessage: 'Open this status in the moderation interface' },\n  admin_domain: { id: 'status.admin_domain', defaultMessage: 'Open moderation interface for {domain}' },\n  copy: { id: 'status.copy', defaultMessage: 'Copy link to status' },\n  openOriginalPage: { id: 'account.open_original_page', defaultMessage: 'Open original page' },\n});\n\nexport default @injectIntl\nclass ActionBar extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    onReply: PropTypes.func.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onFavourite: PropTypes.func.isRequired,\n    onReactionAdd: PropTypes.func.isRequired,\n    onBookmark: PropTypes.func.isRequired,\n    onMute: PropTypes.func,\n    onMuteConversation: PropTypes.func,\n    onBlock: PropTypes.func,\n    onDelete: PropTypes.func.isRequired,\n    onEdit: PropTypes.func.isRequired,\n    onDirect: PropTypes.func.isRequired,\n    onMention: PropTypes.func.isRequired,\n    onReport: PropTypes.func,\n    onPin: PropTypes.func,\n    onEmbed: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleReplyClick = () => {\n    this.props.onReply(this.props.status);\n  };\n\n  handleReblogClick = (e) => {\n    this.props.onReblog(this.props.status, e);\n  };\n\n  handleFavouriteClick = (e) => {\n    this.props.onFavourite(this.props.status, e);\n  };\n\n  handleEmojiPick = data => {\n    this.props.onReactionAdd(this.props.status.get('id'), data.native.replace(/:/g, ''), data.imageUrl);\n  }\n\n  handleBookmarkClick = (e) => {\n    this.props.onBookmark(this.props.status, e);\n  };\n\n  handleDeleteClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history);\n  };\n\n  handleRedraftClick = () => {\n    this.props.onDelete(this.props.status, this.context.router.history, true);\n  };\n\n  handleEditClick = () => {\n    this.props.onEdit(this.props.status, this.context.router.history);\n  };\n\n  handleDirectClick = () => {\n    this.props.onDirect(this.props.status.get('account'), this.context.router.history);\n  };\n\n  handleMentionClick = () => {\n    this.props.onMention(this.props.status.get('account'), this.context.router.history);\n  };\n\n  handleMuteClick = () => {\n    this.props.onMute(this.props.status.get('account'));\n  };\n\n  handleConversationMuteClick = () => {\n    this.props.onMuteConversation(this.props.status);\n  };\n\n  handleBlockClick = () => {\n    this.props.onBlock(this.props.status);\n  };\n\n  handleReport = () => {\n    this.props.onReport(this.props.status);\n  };\n\n  handlePinClick = () => {\n    this.props.onPin(this.props.status);\n  };\n\n  handleShare = () => {\n    navigator.share({\n      text: this.props.status.get('search_index'),\n      url: this.props.status.get('url'),\n    });\n  };\n\n  handleEmbed = () => {\n    this.props.onEmbed(this.props.status);\n  };\n\n  handleCopy = () => {\n    const url = this.props.status.get('url');\n    navigator.clipboard.writeText(url);\n  };\n\n  handleNoOp = () => {} // hack for reaction add button\n\n  render () {\n    const { status, intl } = this.props;\n    const { signedIn, permissions } = this.context.identity;\n\n    const publicStatus       = ['public', 'unlisted'].includes(status.get('visibility'));\n    const pinnableStatus     = ['public', 'unlisted', 'private'].includes(status.get('visibility'));\n    const mutingConversation = status.get('muted');\n    const writtenByMe        = status.getIn(['account', 'id']) === me;\n    const isRemote           = status.getIn(['account', 'username']) !== status.getIn(['account', 'acct']);\n\n    let menu = [];\n\n    if (publicStatus) {\n      if (isRemote) {\n        menu.push({ text: intl.formatMessage(messages.openOriginalPage), href: status.get('url') });\n      }\n\n      menu.push({ text: intl.formatMessage(messages.copy), action: this.handleCopy });\n      menu.push({ text: intl.formatMessage(messages.embed), action: this.handleEmbed });\n      menu.push(null);\n    }\n\n    if (writtenByMe) {\n      if (pinnableStatus) {\n        menu.push({ text: intl.formatMessage(status.get('pinned') ? messages.unpin : messages.pin), action: this.handlePinClick });\n        menu.push(null);\n      }\n\n      menu.push({ text: intl.formatMessage(mutingConversation ? messages.unmuteConversation : messages.muteConversation), action: this.handleConversationMuteClick });\n      menu.push(null);\n      menu.push({ text: intl.formatMessage(messages.edit), action: this.handleEditClick });\n      menu.push({ text: intl.formatMessage(messages.delete), action: this.handleDeleteClick });\n      menu.push({ text: intl.formatMessage(messages.redraft), action: this.handleRedraftClick });\n    } else {\n      menu.push({ text: intl.formatMessage(messages.mention, { name: status.getIn(['account', 'username']) }), action: this.handleMentionClick });\n      menu.push({ text: intl.formatMessage(messages.direct, { name: status.getIn(['account', 'username']) }), action: this.handleDirectClick });\n      menu.push(null);\n      menu.push({ text: intl.formatMessage(messages.mute, { name: status.getIn(['account', 'username']) }), action: this.handleMuteClick });\n      menu.push({ text: intl.formatMessage(messages.block, { name: status.getIn(['account', 'username']) }), action: this.handleBlockClick });\n      menu.push({ text: intl.formatMessage(messages.report, { name: status.getIn(['account', 'username']) }), action: this.handleReport });\n      if (((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS && (accountAdminLink || statusAdminLink)) || (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION)) {\n        menu.push(null);\n        if ((permissions & PERMISSION_MANAGE_USERS) === PERMISSION_MANAGE_USERS) {\n          if (accountAdminLink !== undefined) {\n            menu.push({ text: intl.formatMessage(messages.admin_account, { name: status.getIn(['account', 'username']) }), href: accountAdminLink(status.getIn(['account', 'id'])) });\n          }\n          if (statusAdminLink !== undefined) {\n            menu.push({ text: intl.formatMessage(messages.admin_status), href: statusAdminLink(status.getIn(['account', 'id']), status.get('id')) });\n          }\n        }\n        if (isRemote && (permissions & PERMISSION_MANAGE_FEDERATION) === PERMISSION_MANAGE_FEDERATION) {\n          const domain = status.getIn(['account', 'acct']).split('@')[1];\n          menu.push({ text: intl.formatMessage(messages.admin_domain, { domain: domain }), href: `/admin/instances/${domain}` });\n        }\n      }\n    }\n\n    const canReact = signedIn && status.get('reactions').filter(r => r.get('count') > 0 && r.get('me')).size < maxReactions;\n    const reactButton = (\n      <IconButton\n        className='plus-icon'\n        onClick={this.handleNoOp} // EmojiPickerDropdown handles that\n        title={intl.formatMessage(messages.react)}\n        disabled={!canReact}\n        icon='plus'\n      />\n    );\n\n    const shareButton = ('share' in navigator) && publicStatus && (\n      <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.share)} icon='share-alt' onClick={this.handleShare} /></div>\n    );\n\n    const reblogPrivate = status.getIn(['account', 'id']) === me && status.get('visibility') === 'private';\n\n    let reblogTitle;\n    if (status.get('reblogged')) {\n      reblogTitle = intl.formatMessage(messages.cancel_reblog_private);\n    } else if (publicStatus) {\n      reblogTitle = intl.formatMessage(messages.reblog);\n    } else if (reblogPrivate) {\n      reblogTitle = intl.formatMessage(messages.reblog_private);\n    } else {\n      reblogTitle = intl.formatMessage(messages.cannot_reblog);\n    }\n\n    return (\n      <div className='detailed-status__action-bar'>\n        <div className='detailed-status__button'><IconButton title={intl.formatMessage(messages.reply)} icon={status.get('in_reply_to_id', null) === null ? 'reply' : 'reply-all'} onClick={this.handleReplyClick} /></div>\n        <div className='detailed-status__button'><IconButton className={classNames({ reblogPrivate })} disabled={!publicStatus && !reblogPrivate} active={status.get('reblogged')} title={reblogTitle} icon='retweet' onClick={this.handleReblogClick} /></div>\n        <div className='detailed-status__button'><IconButton className='star-icon' animate active={status.get('favourited')} title={intl.formatMessage(messages.favourite)} icon='star' onClick={this.handleFavouriteClick} /></div>\n        <div className='detailed-status__button'>\n          {\n            signedIn\n              ? <EmojiPickerDropdown onPickEmoji={this.handleEmojiPick} button={reactButton} disabled={!canReact} />\n              : reactButton\n          }\n        </div>\n        {shareButton}\n        <div className='detailed-status__button'><IconButton className='bookmark-icon' disabled={!signedIn} active={status.get('bookmarked')} title={intl.formatMessage(messages.bookmark)} icon='bookmark' onClick={this.handleBookmarkClick} /></div>\n\n        <div className='detailed-status__action-bar-dropdown'>\n          <DropdownMenuContainer size={18} icon='ellipsis-h' items={menu} direction='left' title={intl.formatMessage(messages.more)} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import Immutable from 'immutable';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { createSelector } from 'reselect';\nimport {\n  fetchStatus,\n  muteStatus,\n  unmuteStatus,\n  deleteStatus,\n  editStatus,\n  hideStatus,\n  revealStatus,\n  translateStatus,\n  undoStatusTranslation,\n} from 'flavours/glitch/actions/statuses';\nimport MissingIndicator from 'flavours/glitch/components/missing_indicator';\nimport LoadingIndicator from 'flavours/glitch/components/loading_indicator';\nimport DetailedStatus from './components/detailed_status';\nimport ActionBar from './components/action_bar';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport {\n  favourite,\n  unfavourite,\n  bookmark,\n  unbookmark,\n  reblog,\n  unreblog,\n  pin,\n  unpin,\n  addReaction,\n  removeReaction,\n} from 'flavours/glitch/actions/interactions';\nimport {\n  replyCompose,\n  mentionCompose,\n  directCompose,\n} from 'flavours/glitch/actions/compose';\nimport { changeLocalSetting } from 'flavours/glitch/actions/local_settings';\nimport { initMuteModal } from 'flavours/glitch/actions/mutes';\nimport { initBlockModal } from 'flavours/glitch/actions/blocks';\nimport { initReport } from 'flavours/glitch/actions/reports';\nimport { initBoostModal } from 'flavours/glitch/actions/boosts';\nimport { makeCustomEmojiMap, makeGetStatus, makeGetPictureInPicture } from 'flavours/glitch/selectors';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport ColumnBackButton from 'flavours/glitch/components/column_back_button';\nimport ColumnHeader from '../../components/column_header';\nimport StatusContainer from 'flavours/glitch/containers/status_container';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { HotKeys } from 'react-hotkeys';\nimport { boostModal, favouriteModal, deleteModal } from 'flavours/glitch/initial_state';\nimport { attachFullscreenListener, detachFullscreenListener, isFullscreen } from '../ui/util/fullscreen';\nimport { autoUnfoldCW } from 'flavours/glitch/utils/content_warning';\nimport { textForScreenReader, defaultMediaVisibility } from 'flavours/glitch/components/status';\nimport Icon from 'flavours/glitch/components/icon';\nimport { Helmet } from 'react-helmet';\n\nconst messages = defineMessages({\n  deleteConfirm: { id: 'confirmations.delete.confirm', defaultMessage: 'Delete' },\n  deleteMessage: { id: 'confirmations.delete.message', defaultMessage: 'Are you sure you want to delete this status?' },\n  redraftConfirm: { id: 'confirmations.redraft.confirm', defaultMessage: 'Delete & redraft' },\n  redraftMessage: { id: 'confirmations.redraft.message', defaultMessage: 'Are you sure you want to delete this status and re-draft it? You will lose all replies, boosts and favourites to it.' },\n  revealAll: { id: 'status.show_more_all', defaultMessage: 'Show more for all' },\n  hideAll: { id: 'status.show_less_all', defaultMessage: 'Show less for all' },\n  detailedStatus: { id: 'status.detailed_status', defaultMessage: 'Detailed conversation view' },\n  replyConfirm: { id: 'confirmations.reply.confirm', defaultMessage: 'Reply' },\n  replyMessage: { id: 'confirmations.reply.message', defaultMessage: 'Replying now will overwrite the message you are currently composing. Are you sure you want to proceed?' },\n  tootHeading: { id: 'account.posts_with_replies', defaultMessage: 'Posts and replies' },\n});\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n  const getPictureInPicture = makeGetPictureInPicture();\n\n  const getAncestorsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'inReplyTos']),\n  ], (statusId, inReplyTos) => {\n    let ancestorsIds = Immutable.List();\n    ancestorsIds = ancestorsIds.withMutations(mutable => {\n      let id = statusId;\n\n      while (id && !mutable.includes(id)) {\n        mutable.unshift(id);\n        id = inReplyTos.get(id);\n      }\n    });\n\n    return ancestorsIds;\n  });\n\n  const getDescendantsIds = createSelector([\n    (_, { id }) => id,\n    state => state.getIn(['contexts', 'replies']),\n    state => state.get('statuses'),\n  ], (statusId, contextReplies, statuses) => {\n    let descendantsIds = [];\n    const ids = [statusId];\n\n    while (ids.length > 0) {\n      let id        = ids.pop();\n      const replies = contextReplies.get(id);\n\n      if (statusId !== id) {\n        descendantsIds.push(id);\n      }\n\n      if (replies) {\n        replies.reverse().forEach(reply => {\n          if (!ids.includes(reply) && !descendantsIds.includes(reply) && statusId !== reply) ids.push(reply);\n        });\n      }\n    }\n\n    let insertAt = descendantsIds.findIndex((id) => statuses.get(id).get('in_reply_to_account_id') !== statuses.get(id).get('account'));\n    if (insertAt !== -1) {\n      descendantsIds.forEach((id, idx) => {\n        if (idx > insertAt && statuses.get(id).get('in_reply_to_account_id') === statuses.get(id).get('account')) {\n          descendantsIds.splice(idx, 1);\n          descendantsIds.splice(insertAt, 0, id);\n          insertAt += 1;\n        }\n      });\n    }\n\n    return Immutable.List(descendantsIds);\n  });\n\n  const mapStateToProps = (state, props) => {\n    const status = getStatus(state, { id: props.params.statusId });\n\n    let ancestorsIds   = Immutable.List();\n    let descendantsIds = Immutable.List();\n\n    if (status) {\n      ancestorsIds   = getAncestorsIds(state, { id: status.get('in_reply_to_id') });\n      descendantsIds = getDescendantsIds(state, { id: status.get('id') });\n    }\n\n    return {\n      isLoading: state.getIn(['statuses', props.params.statusId, 'isLoading']),\n      status,\n      ancestorsIds,\n      descendantsIds,\n      settings: state.get('local_settings'),\n      askReplyConfirmation: state.getIn(['local_settings', 'confirm_before_clearing_draft']) && state.getIn(['compose', 'text']).trim().length !== 0,\n      domain: state.getIn(['meta', 'domain']),\n      pictureInPicture: getPictureInPicture(state, { id: props.params.statusId }),\n      emojiMap: makeCustomEmojiMap(state),\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst truncate = (str, num) => {\n  if (str.length > num) {\n    return str.slice(0, num) + '…';\n  } else {\n    return str;\n  }\n};\n\nconst titleFromStatus = status => {\n  const displayName = status.getIn(['account', 'display_name']);\n  const username = status.getIn(['account', 'username']);\n  const prefix = displayName.trim().length === 0 ? username : displayName;\n  const text = status.get('search_index');\n\n  return `${prefix}: \"${truncate(text, 30)}\"`;\n};\n\nexport default @injectIntl\n@connect(makeMapStateToProps)\nclass Status extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    status: ImmutablePropTypes.map,\n    isLoading: PropTypes.bool,\n    settings: ImmutablePropTypes.map.isRequired,\n    ancestorsIds: ImmutablePropTypes.list,\n    descendantsIds: ImmutablePropTypes.list,\n    intl: PropTypes.object.isRequired,\n    askReplyConfirmation: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    domain: PropTypes.string.isRequired,\n    pictureInPicture: ImmutablePropTypes.contains({\n      inUse: PropTypes.bool,\n      available: PropTypes.bool,\n    }),\n  };\n\n  state = {\n    fullscreen: false,\n    isExpanded: undefined,\n    threadExpanded: undefined,\n    statusId: undefined,\n    loadedStatusId: undefined,\n    showMedia: undefined,\n    revealBehindCW: undefined,\n  };\n\n  componentDidMount () {\n    attachFullscreenListener(this.onFullScreenChange);\n    this.props.dispatch(fetchStatus(this.props.params.statusId));\n\n    const { status, ancestorsIds } = this.props;\n\n    if (status && ancestorsIds && ancestorsIds.size > 0) {\n      const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n      window.requestAnimationFrame(() => {\n        element.scrollIntoView(true);\n      });\n    }\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    let update = {};\n    let updated = false;\n\n    if (props.params.statusId && state.statusId !== props.params.statusId) {\n      props.dispatch(fetchStatus(props.params.statusId));\n      update.threadExpanded = undefined;\n      update.statusId = props.params.statusId;\n      updated = true;\n    }\n\n    const revealBehindCW = props.settings.getIn(['media', 'reveal_behind_cw']);\n    if (revealBehindCW !== state.revealBehindCW) {\n      update.revealBehindCW = revealBehindCW;\n      if (revealBehindCW) update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      updated = true;\n    }\n\n    if (props.status && state.loadedStatusId !== props.status.get('id')) {\n      update.showMedia = defaultMediaVisibility(props.status, props.settings);\n      update.loadedStatusId = props.status.get('id');\n      update.isExpanded = autoUnfoldCW(props.settings, props.status);\n      updated = true;\n    }\n\n    return updated ? update : null;\n  }\n\n  handleToggleHidden = () => {\n    const { status } = this.props;\n\n    if (this.props.settings.getIn(['content_warnings', 'shared_state'])) {\n      if (status.get('hidden')) {\n        this.props.dispatch(revealStatus(status.get('id')));\n      } else {\n        this.props.dispatch(hideStatus(status.get('id')));\n      }\n    } else if (this.props.status.get('spoiler_text')) {\n      this.setExpansion(!this.state.isExpanded);\n    }\n  };\n\n  handleToggleMediaVisibility = () => {\n    this.setState({ showMedia: !this.state.showMedia });\n  };\n\n  handleModalFavourite = (status) => {\n    this.props.dispatch(favourite(status));\n  };\n\n  handleFavouriteClick = (status, e) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (status.get('favourited')) {\n        dispatch(unfavourite(status));\n      } else {\n        if ((e && e.shiftKey) || !favouriteModal) {\n          this.handleModalFavourite(status);\n        } else {\n          dispatch(openModal('FAVOURITE', { status, onFavourite: this.handleModalFavourite }));\n        }\n      }\n    } else {\n      dispatch(openModal('INTERACTION', {\n        type: 'favourite',\n        accountId: status.getIn(['account', 'id']),\n        url: status.get('url'),\n      }));\n    }\n  };\n\n  handleReactionAdd = (statusId, name, url) => {\n    const { dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      dispatch(addReaction(statusId, name, url));\n    }\n  }\n\n  handleReactionRemove = (statusId, name) => {\n    this.props.dispatch(removeReaction(statusId, name));\n  }\n\n  handlePin = (status) => {\n    if (status.get('pinned')) {\n      this.props.dispatch(unpin(status));\n    } else {\n      this.props.dispatch(pin(status));\n    }\n  };\n\n  handleReplyClick = (status) => {\n    const { askReplyConfirmation, dispatch, intl } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (askReplyConfirmation) {\n        dispatch(openModal('CONFIRM', {\n          message: intl.formatMessage(messages.replyMessage),\n          confirm: intl.formatMessage(messages.replyConfirm),\n          onDoNotAsk: () => dispatch(changeLocalSetting(['confirm_before_clearing_draft'], false)),\n          onConfirm: () => dispatch(replyCompose(status, this.context.router.history)),\n        }));\n      } else {\n        dispatch(replyCompose(status, this.context.router.history));\n      }\n    } else {\n      dispatch(openModal('INTERACTION', {\n        type: 'reply',\n        accountId: status.getIn(['account', 'id']),\n        url: status.get('url'),\n      }));\n    }\n  };\n\n  handleModalReblog = (status, privacy) => {\n    const { dispatch } = this.props;\n\n    if (status.get('reblogged')) {\n      dispatch(unreblog(status));\n    } else {\n      dispatch(reblog(status, privacy));\n    }\n  };\n\n  handleReblogClick = (status, e) => {\n    const { settings, dispatch } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (signedIn) {\n      if (settings.get('confirm_boost_missing_media_description') && status.get('media_attachments').some(item => !item.get('description')) && !status.get('reblogged')) {\n        dispatch(initBoostModal({ status, onReblog: this.handleModalReblog, missingMediaDescription: true }));\n      } else if ((e && e.shiftKey) || !boostModal) {\n        this.handleModalReblog(status);\n      } else {\n        dispatch(initBoostModal({ status, onReblog: this.handleModalReblog }));\n      }\n    } else {\n      dispatch(openModal('INTERACTION', {\n        type: 'reblog',\n        accountId: status.getIn(['account', 'id']),\n        url: status.get('url'),\n      }));\n    }\n  };\n\n  handleBookmarkClick = (status) => {\n    if (status.get('bookmarked')) {\n      this.props.dispatch(unbookmark(status));\n    } else {\n      this.props.dispatch(bookmark(status));\n    }\n  };\n\n  handleDeleteClick = (status, history, withRedraft = false) => {\n    const { dispatch, intl } = this.props;\n\n    if (!deleteModal) {\n      dispatch(deleteStatus(status.get('id'), history, withRedraft));\n    } else {\n      dispatch(openModal('CONFIRM', {\n        message: intl.formatMessage(withRedraft ? messages.redraftMessage : messages.deleteMessage),\n        confirm: intl.formatMessage(withRedraft ? messages.redraftConfirm : messages.deleteConfirm),\n        onConfirm: () => dispatch(deleteStatus(status.get('id'), history, withRedraft)),\n      }));\n    }\n  };\n\n  handleEditClick = (status, history) => {\n    this.props.dispatch(editStatus(status.get('id'), history));\n  };\n\n  handleDirectClick = (account, router) => {\n    this.props.dispatch(directCompose(account, router));\n  };\n\n  handleMentionClick = (account, router) => {\n    this.props.dispatch(mentionCompose(account, router));\n  };\n\n  handleOpenMedia = (media, index) => {\n    this.props.dispatch(openModal('MEDIA', { statusId: this.props.status.get('id'), media, index }));\n  };\n\n  handleOpenVideo = (media, options) => {\n    this.props.dispatch(openModal('VIDEO', { statusId: this.props.status.get('id'), media, options }));\n  };\n\n  handleHotkeyOpenMedia = e => {\n    const { status } = this.props;\n\n    e.preventDefault();\n\n    if (status.get('media_attachments').size > 0) {\n      if (status.getIn(['media_attachments', 0, 'type']) === 'video') {\n        this.handleOpenVideo(status.getIn(['media_attachments', 0]), { startTime: 0 });\n      } else {\n        this.handleOpenMedia(status.get('media_attachments'), 0);\n      }\n    }\n  };\n\n  handleMuteClick = (account) => {\n    this.props.dispatch(initMuteModal(account));\n  };\n\n  handleConversationMuteClick = (status) => {\n    if (status.get('muted')) {\n      this.props.dispatch(unmuteStatus(status.get('id')));\n    } else {\n      this.props.dispatch(muteStatus(status.get('id')));\n    }\n  };\n\n  handleToggleAll = () => {\n    const { status, ancestorsIds, descendantsIds, settings } = this.props;\n    const statusIds = [status.get('id')].concat(ancestorsIds.toJS(), descendantsIds.toJS());\n    let { isExpanded } = this.state;\n\n    if (settings.getIn(['content_warnings', 'shared_state']))\n      isExpanded = !status.get('hidden');\n\n    if (!isExpanded) {\n      this.props.dispatch(revealStatus(statusIds));\n    } else {\n      this.props.dispatch(hideStatus(statusIds));\n    }\n\n    this.setState({ isExpanded: !isExpanded, threadExpanded: !isExpanded });\n  };\n\n  handleTranslate = status => {\n    const { dispatch } = this.props;\n\n    if (status.get('translation')) {\n      dispatch(undoStatusTranslation(status.get('id')));\n    } else {\n      dispatch(translateStatus(status.get('id')));\n    }\n  };\n\n  handleBlockClick = (status) => {\n    const { dispatch } = this.props;\n    const account = status.get('account');\n    dispatch(initBlockModal(account));\n  };\n\n  handleReport = (status) => {\n    this.props.dispatch(initReport(status.get('account'), status));\n  };\n\n  handleEmbed = (status) => {\n    this.props.dispatch(openModal('EMBED', { url: status.get('url') }));\n  };\n\n  handleHotkeyToggleSensitive = () => {\n    this.handleToggleMediaVisibility();\n  };\n\n  handleHotkeyMoveUp = () => {\n    this.handleMoveUp(this.props.status.get('id'));\n  };\n\n  handleHotkeyMoveDown = () => {\n    this.handleMoveDown(this.props.status.get('id'));\n  };\n\n  handleHotkeyReply = e => {\n    e.preventDefault();\n    this.handleReplyClick(this.props.status);\n  };\n\n  handleHotkeyFavourite = () => {\n    this.handleFavouriteClick(this.props.status);\n  };\n\n  handleHotkeyBoost = () => {\n    this.handleReblogClick(this.props.status);\n  };\n\n  handleHotkeyBookmark = () => {\n    this.handleBookmarkClick(this.props.status);\n  };\n\n  handleHotkeyMention = e => {\n    e.preventDefault();\n    this.handleMentionClick(this.props.status);\n  };\n\n  handleHotkeyOpenProfile = () => {\n    let state = { ...this.context.router.history.location.state };\n    state.mastodonBackSteps = (state.mastodonBackSteps || 0) + 1;\n    this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`, state);\n  };\n\n  handleMoveUp = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size - 1, true);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index, true);\n      } else {\n        this._selectChild(index - 1, true);\n      }\n    }\n  };\n\n  handleMoveDown = id => {\n    const { status, ancestorsIds, descendantsIds } = this.props;\n\n    if (id === status.get('id')) {\n      this._selectChild(ancestorsIds.size + 1, false);\n    } else {\n      let index = ancestorsIds.indexOf(id);\n\n      if (index === -1) {\n        index = descendantsIds.indexOf(id);\n        this._selectChild(ancestorsIds.size + index + 2, false);\n      } else {\n        this._selectChild(index + 1, false);\n      }\n    }\n  };\n\n  _selectChild (index, align_top) {\n    const container = this.node;\n    const element = container.querySelectorAll('.focusable')[index];\n\n    if (element) {\n      if (align_top && container.scrollTop > element.offsetTop) {\n        element.scrollIntoView(true);\n      } else if (!align_top && container.scrollTop + container.clientHeight < element.offsetTop + element.offsetHeight) {\n        element.scrollIntoView(false);\n      }\n      element.focus();\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  renderChildren (list) {\n    return list.map(id => (\n      <StatusContainer\n        key={id}\n        id={id}\n        expanded={this.state.threadExpanded}\n        onMoveUp={this.handleMoveUp}\n        onMoveDown={this.handleMoveDown}\n        contextType='thread'\n      />\n    ));\n  }\n\n  setExpansion = value => {\n    this.setState({ isExpanded: value });\n  };\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  componentDidUpdate (prevProps) {\n    if (this.props.params.statusId && (this.props.params.statusId !== prevProps.params.statusId || prevProps.ancestorsIds.size < this.props.ancestorsIds.size)) {\n      const { status, ancestorsIds } = this.props;\n\n      if (status && ancestorsIds && ancestorsIds.size > 0) {\n        const element = this.node.querySelectorAll('.focusable')[ancestorsIds.size - 1];\n\n        window.requestAnimationFrame(() => {\n          element.scrollIntoView(true);\n        });\n      }\n    }\n  }\n\n  componentWillUnmount () {\n    detachFullscreenListener(this.onFullScreenChange);\n  }\n\n  onFullScreenChange = () => {\n    this.setState({ fullscreen: isFullscreen() });\n  };\n\n  render () {\n    let ancestors, descendants;\n    const { isLoading, status, settings, ancestorsIds, descendantsIds, intl, domain, multiColumn, pictureInPicture } = this.props;\n    const { fullscreen } = this.state;\n\n    if (isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    if (status === null) {\n      return (\n        <Column>\n          <ColumnBackButton multiColumn={multiColumn} />\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    const isExpanded = settings.getIn(['content_warnings', 'shared_state']) ? !status.get('hidden') : this.state.isExpanded;\n\n    if (ancestorsIds && ancestorsIds.size > 0) {\n      ancestors = <div>{this.renderChildren(ancestorsIds)}</div>;\n    }\n\n    if (descendantsIds && descendantsIds.size > 0) {\n      descendants = <div>{this.renderChildren(descendantsIds)}</div>;\n    }\n\n    const isLocal = status.getIn(['account', 'acct'], '').indexOf('@') === -1;\n    const isIndexable = !status.getIn(['account', 'noindex']);\n\n    const handlers = {\n      moveUp: this.handleHotkeyMoveUp,\n      moveDown: this.handleHotkeyMoveDown,\n      reply: this.handleHotkeyReply,\n      favourite: this.handleHotkeyFavourite,\n      boost: this.handleHotkeyBoost,\n      bookmark: this.handleHotkeyBookmark,\n      mention: this.handleHotkeyMention,\n      openProfile: this.handleHotkeyOpenProfile,\n      toggleSpoiler: this.handleToggleHidden,\n      toggleSensitive: this.handleHotkeyToggleSensitive,\n      openMedia: this.handleHotkeyOpenMedia,\n    };\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setColumnRef} label={intl.formatMessage(messages.detailedStatus)}>\n        <ColumnHeader\n          icon='comment'\n          title={intl.formatMessage(messages.tootHeading)}\n          onClick={this.handleHeaderClick}\n          showBackButton\n          multiColumn={multiColumn}\n          extraButton={(\n            <button className='column-header__button' title={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} aria-label={intl.formatMessage(!isExpanded ? messages.revealAll : messages.hideAll)} onClick={this.handleToggleAll}><Icon id={!isExpanded ? 'eye-slash' : 'eye'} /></button>\n          )}\n        />\n\n        <ScrollContainer scrollKey='thread'>\n          <div className={classNames('scrollable', 'detailed-status__wrapper', { fullscreen })} ref={this.setRef}>\n            {ancestors}\n\n            <HotKeys handlers={handlers}>\n              <div className='focusable' tabIndex='0' aria-label={textForScreenReader(intl, status, false, isExpanded)}>\n                <DetailedStatus\n                  key={`details-${status.get('id')}`}\n                  status={status}\n                  settings={settings}\n                  onOpenVideo={this.handleOpenVideo}\n                  onOpenMedia={this.handleOpenMedia}\n                  onReactionAdd={this.handleReactionAdd}\n                  onReactionRemove={this.handleReactionRemove}\n                  expanded={isExpanded}\n                  onToggleHidden={this.handleToggleHidden}\n                  onTranslate={this.handleTranslate}\n                  domain={domain}\n                  showMedia={this.state.showMedia}\n                  onToggleMediaVisibility={this.handleToggleMediaVisibility}\n                  pictureInPicture={pictureInPicture}\n                  emojiMap={this.props.emojiMap}\n                />\n\n                <ActionBar\n                  key={`action-bar-${status.get('id')}`}\n                  status={status}\n                  onReply={this.handleReplyClick}\n                  onFavourite={this.handleFavouriteClick}\n                  onReactionAdd={this.handleReactionAdd}\n                  onReblog={this.handleReblogClick}\n                  onBookmark={this.handleBookmarkClick}\n                  onDelete={this.handleDeleteClick}\n                  onEdit={this.handleEditClick}\n                  onDirect={this.handleDirectClick}\n                  onMention={this.handleMentionClick}\n                  onMute={this.handleMuteClick}\n                  onMuteConversation={this.handleConversationMuteClick}\n                  onBlock={this.handleBlockClick}\n                  onReport={this.handleReport}\n                  onPin={this.handlePin}\n                  onEmbed={this.handleEmbed}\n                />\n              </div>\n            </HotKeys>\n\n            {descendants}\n          </div>\n        </ScrollContainer>\n\n        <Helmet>\n          <title>{titleFromStatus(status)}</title>\n          <meta name='robots' content={(isLocal && isIndexable) ? 'all' : 'noindex'} />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}