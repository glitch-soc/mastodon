{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/account_gallery/components/media_item.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/account_gallery/index.jsx"],"names":["MediaItem","ImmutablePureComponent","constructor","arguments","state","visible","displayMedia","this","props","attachment","getIn","loaded","handleImageLoad","setState","handleMouseEnter","e","hoverToPlay","target","play","handleMouseLeave","pause","currentTime","handleClick","button","ctrlKey","metaKey","preventDefault","onOpenMedia","autoPlayGif","indexOf","get","render","displayWidth","width","Math","floor","height","status","title","thumbnail","label","icon","content","includes","_jsx","src","alt","lang","onLoad","Icon","id","x","y","style","objectPosition","className","role","onMouseEnter","onMouseLeave","autoPlay","playsInline","loop","muted","href","onClick","rel","Blurhash","hash","classNames","dummy","useBlurhash","propTypes","ImmutablePropTypes","map","isRequired","PropTypes","number","func","LoadMoreMedia","handleLoadMore","onLoadMore","maxId","LoadMore","disabled","string","AccountGallery","connect","mapStateToProps","_ref","params","acct","accountId","normalizeForLookup","isAccount","attachments","getAccountGallery","isLoading","hasMore","suspended","_dec","_class2","handleHeaderClick","column","scrollTop","handleScrollToBottom","size","last","undefined","handleScroll","scrollHeight","clientHeight","dispatch","expandAccountMediaTimeline","handleLoadOlder","setColumnRef","c","handleOpenMedia","statusId","openModal","media","options","index","findIndex","handleRef","offsetWidth","_load","fetchAccount","componentDidMount","lookupAccount","componentDidUpdate","prevProps","multiColumn","Column","MissingIndicator","LoadingIndicator","loadOlder","React","createElement","ref","ProfileColumnHeader","ScrollContainer","scrollKey","onScroll","HeaderContainer","FormattedMessage","defaultMessage","shape","list","bool","_class"],"mappings":"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","file":"js/flavours/glitch/async/account_gallery-cbd72b03f84e7d2dc9db.chunk.js","sourcesContent":["import Blurhash from 'flavours/glitch/components/blurhash';\nimport classNames from 'classnames';\nimport Icon from 'flavours/glitch/components/icon';\nimport { autoPlayGif, displayMedia, useBlurhash } from 'flavours/glitch/initial_state';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class MediaItem extends ImmutablePureComponent {\n\n  static propTypes = {\n    attachment: ImmutablePropTypes.map.isRequired,\n    displayWidth: PropTypes.number.isRequired,\n    onOpenMedia: PropTypes.func.isRequired,\n  };\n\n  state = {\n    visible: displayMedia !== 'hide_all' && !this.props.attachment.getIn(['status', 'sensitive']) || displayMedia === 'show_all',\n    loaded: false,\n  };\n\n  handleImageLoad = () => {\n    this.setState({ loaded: true });\n  };\n\n  handleMouseEnter = e => {\n    if (this.hoverToPlay()) {\n      e.target.play();\n    }\n  };\n\n  handleMouseLeave = e => {\n    if (this.hoverToPlay()) {\n      e.target.pause();\n      e.target.currentTime = 0;\n    }\n  };\n\n  hoverToPlay () {\n    return !autoPlayGif && ['gifv', 'video'].indexOf(this.props.attachment.get('type')) !== -1;\n  }\n\n  handleClick = e => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n\n      if (this.state.visible) {\n        this.props.onOpenMedia(this.props.attachment);\n      } else {\n        this.setState({ visible: true });\n      }\n    }\n  };\n\n  render () {\n    const { attachment, displayWidth } = this.props;\n    const { visible, loaded } = this.state;\n\n    const width  = `${Math.floor((displayWidth - 4) / 3) - 4}px`;\n    const height = width;\n    const status = attachment.get('status');\n    const title  = status.get('spoiler_text') || attachment.get('description');\n\n    let thumbnail, label, icon, content;\n\n    if (!visible) {\n      icon = (\n        <span className='account-gallery__item__icons'>\n          <Icon id='eye-slash' />\n        </span>\n      );\n    } else {\n      if (['audio', 'video'].includes(attachment.get('type'))) {\n        content = (\n          <img\n            src={attachment.get('preview_url') || attachment.getIn(['account', 'avatar_static'])}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            onLoad={this.handleImageLoad}\n          />\n        );\n\n        if (attachment.get('type') === 'audio') {\n          label = <Icon id='music' />;\n        } else {\n          label = <Icon id='play' />;\n        }\n      } else if (attachment.get('type') === 'image') {\n        const focusX = attachment.getIn(['meta', 'focus', 'x']) || 0;\n        const focusY = attachment.getIn(['meta', 'focus', 'y']) || 0;\n        const x      = ((focusX /  2) + .5) * 100;\n        const y      = ((focusY / -2) + .5) * 100;\n\n        content = (\n          <img\n            src={attachment.get('preview_url')}\n            alt={attachment.get('description')}\n            lang={status.get('language')}\n            style={{ objectPosition: `${x}% ${y}%` }}\n            onLoad={this.handleImageLoad}\n          />\n        );\n      } else if (attachment.get('type') === 'gifv') {\n        content = (\n          <video\n            className='media-gallery__item-gifv-thumbnail'\n            aria-label={attachment.get('description')}\n            title={attachment.get('description')}\n            lang={status.get('language')}\n            role='application'\n            src={attachment.get('url')}\n            onMouseEnter={this.handleMouseEnter}\n            onMouseLeave={this.handleMouseLeave}\n            autoPlay={autoPlayGif}\n            playsInline\n            loop\n            muted\n          />\n        );\n\n        label = 'GIF';\n      }\n\n      thumbnail = (\n        <div className='media-gallery__gifv'>\n          {content}\n\n          {label && <span className='media-gallery__gifv__label'>{label}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <div className='account-gallery__item' style={{ width, height }}>\n        <a className='media-gallery__item-thumbnail' href={status.get('url')} onClick={this.handleClick} title={title} target='_blank' rel='noopener noreferrer'>\n          <Blurhash\n            hash={attachment.get('blurhash')}\n            className={classNames('media-gallery__preview', { 'media-gallery__preview--hidden': visible && loaded })}\n            dummy={!useBlurhash}\n          />\n\n          {visible ? thumbnail : icon}\n        </a>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { lookupAccount, fetchAccount } from 'flavours/glitch/actions/accounts';\nimport { expandAccountMediaTimeline } from 'flavours/glitch/actions/timelines';\nimport LoadingIndicator from 'flavours/glitch/components/loading_indicator';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ProfileColumnHeader from 'flavours/glitch/features/account/components/profile_column_header';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { getAccountGallery } from 'flavours/glitch/selectors';\nimport MediaItem from './components/media_item';\nimport HeaderContainer from 'flavours/glitch/features/account_timeline/containers/header_container';\nimport ScrollContainer from 'flavours/glitch/containers/scroll_container';\nimport LoadMore from 'flavours/glitch/components/load_more';\nimport MissingIndicator from 'flavours/glitch/components/missing_indicator';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport { normalizeForLookup } from 'flavours/glitch/reducers/accounts_map';\n\nconst mapStateToProps = (state, { params: { acct, id } }) => {\n  const accountId = id || state.getIn(['accounts_map', normalizeForLookup(acct)]);\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    isAccount: !!state.getIn(['accounts', accountId]),\n    attachments: getAccountGallery(state, accountId),\n    isLoading: state.getIn(['timelines', `account:${accountId}:media`, 'isLoading']),\n    hasMore: state.getIn(['timelines', `account:${accountId}:media`, 'hasMore']),\n    suspended: state.getIn(['accounts', accountId, 'suspended'], false),\n  };\n};\n\nclass LoadMoreMedia extends ImmutablePureComponent {\n\n  static propTypes = {\n    maxId: PropTypes.string,\n    onLoadMore: PropTypes.func.isRequired,\n  };\n\n  handleLoadMore = () => {\n    this.props.onLoadMore(this.props.maxId);\n  };\n\n  render () {\n    return (\n      <LoadMore\n        disabled={this.props.disabled}\n        onClick={this.handleLoadMore}\n      />\n    );\n  }\n\n}\n\nexport default @connect(mapStateToProps)\nclass AccountGallery extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.shape({\n      acct: PropTypes.string,\n      id: PropTypes.string,\n    }).isRequired,\n    accountId: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n    attachments: ImmutablePropTypes.list.isRequired,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isAccount: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n    suspended: PropTypes.bool,\n  };\n\n  state = {\n    width: 323,\n  };\n\n  _load () {\n    const { accountId, isAccount, dispatch } = this.props;\n\n    if (!isAccount) dispatch(fetchAccount(accountId));\n    dispatch(expandAccountMediaTimeline(accountId));\n  }\n\n  componentDidMount () {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (accountId) {\n      this._load();\n    } else {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    const { params: { acct }, accountId, dispatch } = this.props;\n\n    if (prevProps.accountId !== accountId && accountId) {\n      this._load();\n    } else if (prevProps.params.acct !== acct) {\n      dispatch(lookupAccount(acct));\n    }\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  handleScrollToBottom = () => {\n    if (this.props.hasMore) {\n      this.handleLoadMore(this.props.attachments.size > 0 ? this.props.attachments.last().getIn(['status', 'id']) : undefined);\n    }\n  };\n\n  handleScroll = e => {\n    const { scrollTop, scrollHeight, clientHeight } = e.target;\n    const offset = scrollHeight - scrollTop - clientHeight;\n\n    if (150 > offset && !this.props.isLoading) {\n      this.handleScrollToBottom();\n    }\n  };\n\n  handleLoadMore = maxId => {\n    this.props.dispatch(expandAccountMediaTimeline(this.props.accountId, { maxId }));\n  };\n\n  handleLoadOlder = e => {\n    e.preventDefault();\n    this.handleScrollToBottom();\n  };\n\n  setColumnRef = c => {\n    this.column = c;\n  };\n\n  handleOpenMedia = attachment => {\n    const { dispatch } = this.props;\n    const statusId = attachment.getIn(['status', 'id']);\n\n    if (attachment.get('type') === 'video') {\n      dispatch(openModal('VIDEO', { media: attachment, statusId, options: { autoPlay: true } }));\n    } else if (attachment.get('type') === 'audio') {\n      dispatch(openModal('AUDIO', { media: attachment, statusId, options: { autoPlay: true } }));\n    } else {\n      const media = attachment.getIn(['status', 'media_attachments']);\n      const index = media.findIndex(x => x.get('id') === attachment.get('id'));\n\n      dispatch(openModal('MEDIA', { media, index, statusId }));\n    }\n  };\n\n  handleRef = c => {\n    if (c) {\n      this.setState({ width: c.offsetWidth });\n    }\n  };\n\n  render () {\n    const { attachments, isLoading, hasMore, isAccount, multiColumn, suspended } = this.props;\n    const { width } = this.state;\n\n    if (!isAccount) {\n      return (\n        <Column>\n          <MissingIndicator />\n        </Column>\n      );\n    }\n\n    if (!attachments && isLoading) {\n      return (\n        <Column>\n          <LoadingIndicator />\n        </Column>\n      );\n    }\n\n    let loadOlder = null;\n\n    if (hasMore && !(isLoading && attachments.size === 0)) {\n      loadOlder = <LoadMore visible={!isLoading} onClick={this.handleLoadOlder} />;\n    }\n\n    return (\n      <Column ref={this.setColumnRef}>\n        <ProfileColumnHeader onClick={this.handleHeaderClick} multiColumn={multiColumn} />\n\n        <ScrollContainer scrollKey='account_gallery'>\n          <div className='scrollable scrollable--flex' onScroll={this.handleScroll}>\n            <HeaderContainer accountId={this.props.accountId} />\n\n            {suspended ? (\n              <div className='empty-column-indicator'>\n                <FormattedMessage id='empty_column.account_suspended' defaultMessage='Account suspended' />\n              </div>\n            ) : (\n              <div role='feed' className='account-gallery__container' ref={this.handleRef}>\n                {attachments.map((attachment, index) => attachment === null ? (\n                  <LoadMoreMedia key={'more:' + attachments.getIn(index + 1, 'id')} maxId={index > 0 ? attachments.getIn(index - 1, 'id') : null} onLoadMore={this.handleLoadMore} />\n                ) : (\n                  <MediaItem key={attachment.get('id')} attachment={attachment} displayWidth={width} onOpenMedia={this.handleOpenMedia} />\n                ))}\n\n                {loadOlder}\n              </div>\n            )}\n\n            {isLoading && attachments.size === 0 && (\n              <div className='scrollable__append'>\n                <LoadingIndicator />\n              </div>\n            )}\n          </div>\n        </ScrollContainer>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}