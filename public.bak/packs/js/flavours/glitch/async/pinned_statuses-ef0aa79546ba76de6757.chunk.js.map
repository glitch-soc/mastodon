{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/pinned_statuses/index.jsx"],"names":["messages","defineMessages","heading","PinnedStatuses","connect","state","statusIds","getIn","hasMore","_dec","_class","injectIntl","_class2","ImmutablePureComponent","constructor","arguments","handleHeaderClick","this","column","scrollTop","setRef","c","componentWillMount","props","dispatch","fetchPinnedStatuses","render","intl","multiColumn","React","createElement","Column","bindToDocument","icon","formatMessage","ref","_jsx","ColumnBackButtonSlim","StatusList","scrollKey","Helmet","name","content","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","bool"],"mappings":"mRAYA,MAAMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,iDAMN,IAIGC,EAFUC,mBALQC,IAAK,CAC3BC,UAAWD,EAAME,MAAM,CAAC,eAAgB,OAAQ,UAChDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,OAAQ,YAGVE,CAAAC,EACvCC,aAAUC,EADI,cAEcC,IAAuBC,cAAA,SAAAC,WAAA,KAclDC,kBAAoB,KAClBC,KAAKC,OAAOC,aACZ,KAEFC,OAASC,IACPJ,KAAKC,OAASG,GAThBC,qBACEL,KAAKM,MAAMC,SAASC,eAWtBC,SACE,MAAM,KAAEC,EAAI,UAAErB,EAAS,QAAEE,EAAO,YAAEoB,GAAgBX,KAAKM,MAEvD,OACEM,IAAAC,cAACC,IAAM,CAACC,gBAAiBJ,EAAaK,KAAK,aAAa/B,QAASyB,EAAKO,cAAclC,EAASE,SAAUiC,IAAKlB,KAAKG,QAC/GgB,YAACC,IAAoB,IACrBD,YAACE,IAAU,CACThC,UAAWA,EACXiC,UAAU,kBACV/B,QAASA,EACTwB,gBAAiBJ,IAEnBQ,YAACI,IAAM,UACLJ,YAAA,QAAMK,KAAK,SAASC,QAAQ,gBAMrC9B,EAvCQ+B,UAAY,CACjBnB,SAAUoB,IAAUC,KAAKC,WACzBxC,UAAWyC,IAAmBC,KAAKF,WACnCnB,KAAMiB,IAAUK,OAAOH,WACvBtC,QAASoC,IAAUM,KAAKJ,WACxBlB,YAAagB,IAAUM,MARhBxC,EASRE,KAAAF","file":"js/flavours/glitch/async/pinned_statuses-ef0aa79546ba76de6757.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { fetchPinnedStatuses } from 'flavours/glitch/actions/pin_statuses';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ColumnBackButtonSlim from 'flavours/glitch/components/column_back_button_slim';\nimport StatusList from 'flavours/glitch/components/status_list';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { Helmet } from 'react-helmet';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned post' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'pins', 'items']),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  render () {\n    const { intl, statusIds, hasMore, multiColumn } = this.props;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='thumb-tack' heading={intl.formatMessage(messages.heading)} ref={this.setRef}>\n        <ColumnBackButtonSlim />\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n          bindToDocument={!multiColumn}\n        />\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}