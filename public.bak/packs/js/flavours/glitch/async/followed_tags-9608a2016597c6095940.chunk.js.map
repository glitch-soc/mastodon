{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/followed_tags/index.jsx"],"names":["messages","defineMessages","heading","FollowedTags","connect","state","hashtags","getIn","isLoading","hasMore","_dec","_class","injectIntl","_class2","ImmutablePureComponent","constructor","arguments","handleLoadMore","_debounce","this","props","dispatch","expandFollowedHashtags","leading","componentDidMount","fetchFollowedHashtags","render","intl","multiColumn","emptyMessage","_jsx","FormattedMessage","id","defaultMessage","Column","bindToDocument","ColumnHeader","icon","title","formatMessage","showBackButton","ScrollableList","scrollKey","onLoadMore","map","hashtag","Hashtag","name","get","to","withGraph","people","history","reverse","day","toArray","Helmet","content","propTypes","params","PropTypes","object","isRequired","func","ImmutablePropTypes","list","bool"],"mappings":"oSAcA,MAAMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,yDAON,IAIGC,EAFUC,mBANQC,IAAK,CAC3BC,SAAUD,EAAME,MAAM,CAAC,gBAAiB,UACxCC,UAAWH,EAAME,MAAM,CAAC,gBAAiB,cAAc,GACvDE,UAAWJ,EAAME,MAAM,CAAC,gBAAiB,YAGHG,CAAAC,EACvCC,aAAUC,EADI,cAEYC,IAAuBC,cAAA,SAAAC,WAAA,KAgBhDC,eAAiBC,KAAS,KACxBC,KAAKC,MAAMC,SAASC,iBACnB,IAAK,CAAEC,SAAS,IANnBC,oBACEL,KAAKC,MAAMC,SAASI,eAOtBC,SACE,MAAM,KAAEC,EAAI,SAAErB,EAAQ,UAAEE,EAAS,QAAEC,EAAO,YAAEmB,GAAgBT,KAAKC,MAE3DS,EAAeC,YAACC,IAAgB,CAACC,GAAG,6BAA6BC,eAAe,iFAEtF,OACEH,YAACI,IAAM,CAACC,gBAAiBP,QAAY,EACnCE,YAACM,IAAY,CACXC,KAAK,UACLC,MAAOX,EAAKY,cAAcvC,EAASE,SACnCsC,gBAAc,EACdZ,YAAaA,IAGfE,YAACW,IAAc,CACbC,UAAU,gBACVb,aAAcA,EACdpB,QAASA,EACTD,UAAWA,EACXmC,WAAYxB,KAAKF,eACjBkB,gBAAiBP,QAAY,EAE5BtB,EAASsC,KAAKC,GACbf,YAACgB,IAAO,CAENC,KAAMF,EAAQG,IAAI,QAClBC,GAAK,SAAQJ,EAAQG,IAAI,UACzBE,WAAW,EAEXC,OAAoD,EAA5CN,EAAQtC,MAAM,CAAC,UAAW,EAAG,aAA+D,EAA5CsC,EAAQtC,MAAM,CAAC,UAAW,EAAG,aACrF6C,QAASP,EAAQG,IAAI,WAAWK,UAAUT,KAAKU,GAAQA,EAAIN,IAAI,UAASO,WANnEV,EAAQG,IAAI,YAWvBlB,YAAC0B,IAAM,UACL1B,YAAA,QAAMiB,KAAK,SAASU,QAAQ,gBAMrC5C,EA5DQ6C,UAAY,CACjBC,OAAQC,IAAUC,OAAOC,WACzBzC,SAAUuC,IAAUG,KAAKD,WACzBnC,KAAMiC,IAAUC,OAAOC,WACvBxD,SAAU0D,IAAmBC,KAC7BzD,UAAWoD,IAAUM,KACrBzD,QAASmD,IAAUM,KACnBtC,YAAagC,IAAUM,MAVhBvD,EAWRE,KAAAF","file":"js/flavours/glitch/async/followed_tags-9608a2016597c6095940.chunk.js","sourcesContent":["import { debounce } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ColumnHeader from 'flavours/glitch/components/column_header';\nimport ScrollableList from 'flavours/glitch/components/scrollable_list';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport { Helmet } from 'react-helmet';\nimport Hashtag from 'flavours/glitch/components/hashtag';\nimport { expandFollowedHashtags, fetchFollowedHashtags } from 'flavours/glitch/actions/tags';\n\nconst messages = defineMessages({\n  heading: { id: 'followed_tags', defaultMessage: 'Followed hashtags' },\n});\n\nconst mapStateToProps = state => ({\n  hashtags: state.getIn(['followed_tags', 'items']),\n  isLoading: state.getIn(['followed_tags', 'isLoading'], true),\n  hasMore: !!state.getIn(['followed_tags', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass FollowedTags extends ImmutablePureComponent {\n\n  static propTypes = {\n    params: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n    hashtags: ImmutablePropTypes.list,\n    isLoading: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    multiColumn: PropTypes.bool,\n  };\n\n  componentDidMount() {\n    this.props.dispatch(fetchFollowedHashtags());\n  }\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFollowedHashtags());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, hashtags, isLoading, hasMore, multiColumn } = this.props;\n\n    const emptyMessage = <FormattedMessage id='empty_column.followed_tags' defaultMessage='You have not followed any hashtags yet. When you do, they will show up here.' />;\n\n    return (\n      <Column bindToDocument={!multiColumn}>\n        <ColumnHeader\n          icon='hashtag'\n          title={intl.formatMessage(messages.heading)}\n          showBackButton\n          multiColumn={multiColumn}\n        />\n\n        <ScrollableList\n          scrollKey='followed_tags'\n          emptyMessage={emptyMessage}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          bindToDocument={!multiColumn}\n        >\n          {hashtags.map((hashtag) => (\n            <Hashtag\n              key={hashtag.get('name')}\n              name={hashtag.get('name')}\n              to={`/tags/${hashtag.get('name')}`}\n              withGraph={false}\n              // Taken from ImmutableHashtag. Should maybe refactor ImmutableHashtag to accept more options?\n              people={hashtag.getIn(['history', 0, 'accounts']) * 1 + hashtag.getIn(['history', 1, 'accounts']) * 1}\n              history={hashtag.get('history').reverse().map((day) => day.get('uses')).toArray()}\n            />\n          ))}\n        </ScrollableList>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}