{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/flavours/glitch/features/getting_started/index.jsx"],"names":["messages","defineMessages","heading","home_timeline","notifications","public_timeline","navigation_subheading","settings_subheading","community_timeline","explore","direct","bookmarks","preferences","settings","follow_requests","lists","keyboard_shortcuts","lists_subheading","misc","menu","badgeDisplay","number","limit","GettingStarted","connect","makeMapStateToProps","getOrderedLists","createSelector","state","get","toList","filter","item","sort","a","b","localeCompare","myAccount","getIn","me","columns","unreadFollowRequests","ImmutableList","size","unreadNotifications","dispatch","fetchFollowRequests","fetchLists","openSettings","openModal","_dec","_class","injectIntl","_class2","ImmutablePureComponent","componentWillMount","this","props","componentDidMount","signedIn","context","identity","render","intl","multiColumn","navItems","listItems","find","push","_jsx","ColumnLink","icon","text","formatMessage","to","badge","showTrends","concat","list","map","Column","bindToDocument","name","label","hideHeadingOnMobile","className","NavigationBar","account","ColumnSubheading","React","Fragment","undefined","preferencesLink","href","onClick","LinkFooter","TrendsContainer","Helmet","content","contextTypes","router","PropTypes","object","isRequired","propTypes","ImmutablePropTypes","bool","func"],"mappings":"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","file":"js/flavours/glitch/async/getting_started-83ee08349bd04a10f4a5.chunk.js","sourcesContent":["import React from 'react';\nimport Column from 'flavours/glitch/features/ui/components/column';\nimport ColumnLink from 'flavours/glitch/features/ui/components/column_link';\nimport ColumnSubheading from 'flavours/glitch/features/ui/components/column_subheading';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { openModal } from 'flavours/glitch/actions/modal';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { me, showTrends } from 'flavours/glitch/initial_state';\nimport { fetchFollowRequests } from 'flavours/glitch/actions/accounts';\nimport { List as ImmutableList } from 'immutable';\nimport { createSelector } from 'reselect';\nimport { fetchLists } from 'flavours/glitch/actions/lists';\nimport { preferencesLink } from 'flavours/glitch/utils/backend_links';\nimport NavigationBar from '../compose/components/navigation_bar';\nimport LinkFooter from 'flavours/glitch/features/ui/components/link_footer';\nimport TrendsContainer from './containers/trends_container';\nimport { Helmet } from 'react-helmet';\n\nconst messages = defineMessages({\n  heading: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public_timeline: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  navigation_subheading: { id: 'column_subheading.navigation', defaultMessage: 'Navigation' },\n  settings_subheading: { id: 'column_subheading.settings', defaultMessage: 'Settings' },\n  community_timeline: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  explore: { id: 'navigation_bar.explore', defaultMessage: 'Explore' },\n  direct: { id: 'navigation_bar.direct', defaultMessage: 'Direct messages' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  settings: { id: 'navigation_bar.app_settings', defaultMessage: 'App settings' },\n  follow_requests: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow requests' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  keyboard_shortcuts: { id: 'navigation_bar.keyboard_shortcuts', defaultMessage: 'Keyboard shortcuts' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  lists_subheading: { id: 'column_subheading.lists', defaultMessage: 'Lists' },\n  misc: { id: 'navigation_bar.misc', defaultMessage: 'Misc' },\n  menu: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n});\n\nconst makeMapStateToProps = () => {\n  const getOrderedLists = createSelector([state => state.get('lists')], lists => {\n    if (!lists) {\n      return lists;\n    }\n\n    return lists.toList().filter(item => !!item).sort((a, b) => a.get('title').localeCompare(b.get('title')));\n  });\n\n  const mapStateToProps = state => ({\n    lists: getOrderedLists(state),\n    myAccount: state.getIn(['accounts', me]),\n    columns: state.getIn(['settings', 'columns']),\n    unreadFollowRequests: state.getIn(['user_lists', 'follow_requests', 'items'], ImmutableList()).size,\n    unreadNotifications: state.getIn(['notifications', 'unread']),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  fetchFollowRequests: () => dispatch(fetchFollowRequests()),\n  fetchLists: () => dispatch(fetchLists()),\n  openSettings: () => dispatch(openModal('SETTINGS', {})),\n});\n\nconst badgeDisplay = (number, limit) => {\n  if (number === 0) {\n    return undefined;\n  } else if (limit && number >= limit) {\n    return `${limit}+`;\n  } else {\n    return number;\n  }\n};\n\nconst NAVIGATION_PANEL_BREAKPOINT = 600 + (285 * 2) + (10 * 2);\n\nexport default @connect(makeMapStateToProps, mapDispatchToProps)\n @injectIntl\nclass GettingStarted extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    myAccount: ImmutablePropTypes.map,\n    columns: ImmutablePropTypes.list,\n    multiColumn: PropTypes.bool,\n    fetchFollowRequests: PropTypes.func.isRequired,\n    unreadFollowRequests: PropTypes.number,\n    unreadNotifications: PropTypes.number,\n    lists: ImmutablePropTypes.list,\n    fetchLists: PropTypes.func.isRequired,\n    openSettings: PropTypes.func.isRequired,\n  };\n\n  componentWillMount () {\n    this.props.fetchLists();\n  }\n\n  componentDidMount () {\n    const { fetchFollowRequests } = this.props;\n    const { signedIn } = this.context.identity;\n\n    if (!signedIn) {\n      return;\n    }\n\n    fetchFollowRequests();\n  }\n\n  render () {\n    const { intl, myAccount, columns, multiColumn, unreadFollowRequests, unreadNotifications, lists, openSettings } = this.props;\n    const { signedIn } = this.context.identity;\n\n    const navItems = [];\n    let listItems = [];\n\n    if (multiColumn) {\n      if (signedIn && !columns.find(item => item.get('id') === 'HOME')) {\n        navItems.push(<ColumnLink key='home' icon='home' text={intl.formatMessage(messages.home_timeline)} to='/home' />);\n      }\n\n      if (!columns.find(item => item.get('id') === 'NOTIFICATIONS')) {\n        navItems.push(<ColumnLink key='notifications' icon='bell' text={intl.formatMessage(messages.notifications)} badge={badgeDisplay(unreadNotifications)} to='/notifications' />);\n      }\n\n      if (!columns.find(item => item.get('id') === 'COMMUNITY')) {\n        navItems.push(<ColumnLink key='community_timeline' icon='users' text={intl.formatMessage(messages.community_timeline)} to='/public/local' />);\n      }\n\n      if (!columns.find(item => item.get('id') === 'PUBLIC')) {\n        navItems.push(<ColumnLink key='public_timeline' icon='globe' text={intl.formatMessage(messages.public_timeline)} to='/public' />);\n      }\n    }\n\n    if (showTrends) {\n      navItems.push(<ColumnLink key='explore' icon='hashtag' text={intl.formatMessage(messages.explore)} to='/explore' />);\n    }\n\n    if (signedIn) {\n      if (!multiColumn || !columns.find(item => item.get('id') === 'DIRECT')) {\n        navItems.push(<ColumnLink key='conversations' icon='envelope' text={intl.formatMessage(messages.direct)} to='/conversations' />);\n      }\n\n      if (!multiColumn || !columns.find(item => item.get('id') === 'BOOKMARKS')) {\n        navItems.push(<ColumnLink key='bookmarks' icon='bookmark' text={intl.formatMessage(messages.bookmarks)} to='/bookmarks' />);\n      }\n\n      if (myAccount.get('locked') || unreadFollowRequests > 0) {\n        navItems.push(<ColumnLink key='follow_requests' icon='user-plus' text={intl.formatMessage(messages.follow_requests)} badge={badgeDisplay(unreadFollowRequests, 40)} to='/follow_requests' />);\n      }\n\n      navItems.push(<ColumnLink key='getting_started' icon='ellipsis-h' text={intl.formatMessage(messages.misc)} to='/getting-started-misc' />);\n\n      listItems = listItems.concat([\n        <div key='9'>\n          <ColumnLink key='lists' icon='bars' text={intl.formatMessage(messages.lists)} to='/lists' />\n          {lists.filter(list => !columns.find(item => item.get('id') === 'LIST' && item.getIn(['params', 'id']) === list.get('id'))).map(list =>\n            <ColumnLink key={`list-${list.get('id')}`} to={`/lists/${list.get('id')}`} icon='list-ul' text={list.get('title')} />,\n          )}\n        </div>,\n      ]);\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn} name='getting-started' icon='asterisk' heading={intl.formatMessage(messages.heading)} label={intl.formatMessage(messages.menu)} hideHeadingOnMobile>\n        <div className='scrollable optionally-scrollable'>\n          <div className='getting-started__wrapper'>\n            {!multiColumn && signedIn && <NavigationBar account={myAccount} />}\n            {multiColumn && <ColumnSubheading text={intl.formatMessage(messages.navigation_subheading)} />}\n            {navItems}\n            {signedIn && (\n              <React.Fragment>\n                <ColumnSubheading text={intl.formatMessage(messages.lists_subheading)} />\n                {listItems}\n                <ColumnSubheading text={intl.formatMessage(messages.settings_subheading)} />\n                { preferencesLink !== undefined && <ColumnLink icon='cog' text={intl.formatMessage(messages.preferences)} href={preferencesLink} /> }\n                <ColumnLink icon='cogs' text={intl.formatMessage(messages.settings)} onClick={openSettings} />\n              </React.Fragment>\n            )}\n          </div>\n\n          <LinkFooter />\n        </div>\n\n        {multiColumn && showTrends && <TrendsContainer />}\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.menu)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}