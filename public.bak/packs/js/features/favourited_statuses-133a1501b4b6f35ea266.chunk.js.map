{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/favourited_statuses/index.jsx"],"names":["messages","defineMessages","heading","Favourites","connect","state","statusIds","getIn","isLoading","hasMore","_dec","_class","injectIntl","_class2","ImmutablePureComponent","constructor","arguments","handlePin","columnId","dispatch","this","props","removeColumn","addColumn","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","setRef","c","handleLoadMore","_debounce","expandFavouritedStatuses","leading","componentWillMount","fetchFavouritedStatuses","render","intl","multiColumn","pinned","emptyMessage","_jsx","FormattedMessage","id","defaultMessage","React","createElement","Column","bindToDocument","ref","label","formatMessage","ColumnHeader","icon","title","onPin","onMove","onClick","showBackButton","StatusList","trackScroll","scrollKey","onLoadMore","Helmet","name","content","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","string","bool"],"mappings":"4SAcA,MAAMA,EAAWC,YAAe,CAC9BC,QAAQ,CAAD,sDAON,IAIGC,EAFUC,mBANQC,IAAK,CAC3BC,UAAWD,EAAME,MAAM,CAAC,eAAgB,aAAc,UACtDC,UAAWH,EAAME,MAAM,CAAC,eAAgB,aAAc,cAAc,GACpEE,UAAWJ,EAAME,MAAM,CAAC,eAAgB,aAAc,YAGhBG,CAAAC,EACvCC,aAAUC,EADI,cAEUC,IAAuBC,cAAA,SAAAC,WAAA,KAgB9CC,UAAY,KACV,MAAM,SAAEC,EAAQ,SAAEC,GAAaC,KAAKC,MAGlCF,EADED,EACOI,YAAaJ,GAEbK,YAAU,aAAc,MAEnC,KAEFC,WAAcC,IACZ,MAAM,SAAEP,EAAQ,SAAEC,GAAaC,KAAKC,MACpCF,EAASO,YAAWR,EAAUO,KAC9B,KAEFE,kBAAoB,KAClBP,KAAKQ,OAAOC,aACZ,KAEFC,OAASC,IACPX,KAAKQ,OAASG,GACd,KAEFC,eAAiBC,KAAS,KACxBb,KAAKC,MAAMF,SAASe,iBACnB,IAAK,CAAEC,SAAS,IA7BnBC,qBACEhB,KAAKC,MAAMF,SAASkB,eA8BtBC,SACE,MAAM,KAAEC,EAAI,UAAEjC,EAAS,SAAEY,EAAQ,YAAEsB,EAAW,QAAE/B,EAAO,UAAED,GAAcY,KAAKC,MACtEoB,IAAWvB,EAEXwB,EAAeC,YAACC,IAAgB,CAACC,GAAG,mCAAmCC,eAAe,0FAE5F,OACEC,IAAAC,cAACC,IAAM,CAACC,gBAAiBV,EAAaW,IAAK/B,KAAKU,OAAQsB,MAAOb,EAAKc,cAAcrD,EAASE,UACzFyC,YAACW,IAAY,CACXC,KAAK,OACLC,MAAOjB,EAAKc,cAAcrD,EAASE,SACnCuD,MAAOrC,KAAKH,UACZyC,OAAQtC,KAAKI,WACbmC,QAASvC,KAAKO,kBACdc,OAAQA,EACRD,YAAaA,EACboB,gBAAc,IAGhBjB,YAACkB,IAAU,CACTC,aAAcrB,EACdnC,UAAWA,EACXyD,UAAY,uBAAsB7C,IAClCT,QAASA,EACTD,UAAWA,EACXwD,WAAY5C,KAAKY,eACjBU,aAAcA,EACdQ,gBAAiBV,IAGnBG,YAACsB,IAAM,UACLtB,YAAA,kBAAQJ,EAAKc,cAAcrD,EAASE,UACpCyC,YAAA,QAAMuB,KAAK,SAASC,QAAQ,gBAMrCtD,EA/EQuD,UAAY,CACjBjD,SAAUkD,IAAUC,KAAKC,WACzBjE,UAAWkE,IAAmBC,KAAKF,WACnChC,KAAM8B,IAAUK,OAAOH,WACvBrD,SAAUmD,IAAUM,OACpBnC,YAAa6B,IAAUO,KACvBnE,QAAS4D,IAAUO,KACnBpE,UAAW6D,IAAUO,MAVdjE,EAWRE,KAAAF","file":"js/features/favourited_statuses-133a1501b4b6f35ea266.chunk.js","sourcesContent":["import { debounce } from 'lodash';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { addColumn, removeColumn, moveColumn } from 'mastodon/actions/columns';\nimport { fetchFavouritedStatuses, expandFavouritedStatuses } from 'mastodon/actions/favourites';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport StatusList from 'mastodon/components/status_list';\nimport Column from 'mastodon/features/ui/components/column';\n\nconst messages = defineMessages({\n  heading: { id: 'column.favourites', defaultMessage: 'Favourites' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: state.getIn(['status_lists', 'favourites', 'items']),\n  isLoading: state.getIn(['status_lists', 'favourites', 'isLoading'], true),\n  hasMore: !!state.getIn(['status_lists', 'favourites', 'next']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Favourites extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    this.props.dispatch(fetchFavouritedStatuses());\n  }\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('FAVOURITES', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandFavouritedStatuses());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, statusIds, columnId, multiColumn, hasMore, isLoading } = this.props;\n    const pinned = !!columnId;\n\n    const emptyMessage = <FormattedMessage id='empty_column.favourited_statuses' defaultMessage=\"You don't have any favourite posts yet. When you favourite one, it will show up here.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.heading)}>\n        <ColumnHeader\n          icon='star'\n          title={intl.formatMessage(messages.heading)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n          showBackButton\n        />\n\n        <StatusList\n          trackScroll={!pinned}\n          statusIds={statusIds}\n          scrollKey={`favourited_statuses-${columnId}`}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        />\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.heading)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}