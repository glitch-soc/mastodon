{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/search_results.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/index.jsx"],"names":["messages","defineMessages","dismissSuggestion","SearchResults","injectIntl","_class2","ImmutablePureComponent","constructor","arguments","handleLoadMoreAccounts","this","props","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","componentDidMount","searchTerm","fetchSuggestions","componentDidUpdate","render","intl","results","suggestions","isEmpty","_jsx","className","Icon","id","fixedWidth","FormattedMessage","defaultMessage","map","suggestion","AccountContainer","get","actionIcon","actionTitle","formatMessage","onActionClick","accounts","statuses","hashtags","count","size","accountId","LoadMore","visible","onClick","statusId","StatusContainer","searchEnabled","startsWith","includes","hashtag","Hashtag","values","propTypes","ImmutablePropTypes","isRequired","list","PropTypes","func","string","object","_class","connect","state","getIn","dispatch","type","account","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","mapStateToProps","ownProps","columns","showSearch","multiColumn","_dec","React","PureComponent","handleLogoutClick","e","preventDefault","stopPropagation","openModal","message","confirm","closeWhenConfirm","onConfirm","logOut","onFocus","changeComposing","onBlur","mountCompose","componentWillUnmount","unmountCompose","role","Link","to","title","some","column","href","SearchContainer","NavigationContainer","onClose","ComposeFormContainer","autoFocus","isMobile","window","innerWidth","alt","draggable","src","mascot","elephantUIPlane","Motion","defaultStyle","x","style","spring","stiffness","damping","_ref","transform","visibility","SearchResultsContainer","Column","Helmet","name","content"],"mappings":"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","file":"js/features/compose-467f6fd2c52bdc410601.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport Icon from 'mastodon/components/icon';\nimport { searchEnabled } from '../../../initial_state';\nimport LoadMore from 'mastodon/components/load_more';\n\nconst messages = defineMessages({\n  dismissSuggestion: { id: 'suggestions.dismiss', defaultMessage: 'Dismiss suggestion' },\n});\n\nexport default @injectIntl\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    suggestions: ImmutablePropTypes.list.isRequired,\n    fetchSuggestions: PropTypes.func.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    dismissSuggestion: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  componentDidUpdate () {\n    if (this.props.searchTerm === '') {\n      this.props.fetchSuggestions();\n    }\n  }\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { intl, results, suggestions, dismissSuggestion, searchTerm } = this.props;\n\n    if (searchTerm === '' && !suggestions.isEmpty()) {\n      return (\n        <div className='search-results'>\n          <div className='trends'>\n            <div className='trends__header'>\n              <Icon id='user-plus' fixedWidth />\n              <FormattedMessage id='suggestions.header' defaultMessage='You might be interested in…' />\n            </div>\n\n            {suggestions && suggestions.map(suggestion => (\n              <AccountContainer\n                key={suggestion.get('account')}\n                id={suggestion.get('account')}\n                actionIcon={suggestion.get('source') === 'past_interactions' ? 'times' : null}\n                actionTitle={suggestion.get('source') === 'past_interactions' ? intl.formatMessage(messages.dismissSuggestion) : null}\n                onActionClick={dismissSuggestion}\n              />\n            ))}\n          </div>\n        </div>\n      );\n    }\n\n    let accounts, statuses, hashtags;\n    let count = 0;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      count   += results.get('accounts').size;\n      accounts = (\n        <div className='search-results__section'>\n          <h5><Icon id='users' fixedWidth /><FormattedMessage id='search_results.accounts' defaultMessage='People' /></h5>\n\n          {results.get('accounts').map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n\n          {results.get('accounts').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </div>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      count   += results.get('statuses').size;\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></h5>\n\n          {results.get('statuses').map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n\n          {results.get('statuses').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </div>\n      );\n    } else if(results.get('statuses') && results.get('statuses').size === 0 && !searchEnabled && !(searchTerm.startsWith('@') || searchTerm.startsWith('#') || searchTerm.includes(' '))) {\n      statuses = (\n        <div className='search-results__section'>\n          <h5><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></h5>\n\n          <div className='search-results__info'>\n            <FormattedMessage id='search_results.statuses_fts_disabled' defaultMessage='Searching posts by their content is not enabled on this Mastodon server.' />\n          </div>\n        </div>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      count += results.get('hashtags').size;\n      hashtags = (\n        <div className='search-results__section'>\n          <h5><Icon id='hashtag' fixedWidth /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></h5>\n\n          {results.get('hashtags').map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n\n          {results.get('hashtags').size >= 5 && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </div>\n      );\n    }\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' fixedWidth />\n          <FormattedMessage id='search_results.total' defaultMessage='{count, number} {count, plural, one {result} other {results}}' values={{ count }} />\n        </div>\n\n        {accounts}\n        {statuses}\n        {hashtags}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport SearchResults from '../components/search_results';\nimport { fetchSuggestions, dismissSuggestion } from 'mastodon/actions/suggestions';\nimport { expandSearch } from 'mastodon/actions/search';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n  searchTerm: state.getIn(['search', 'searchTerm']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  expandSearch: type => dispatch(expandSearch(type)),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import React from 'react';\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\nimport { changeComposing, mountCompose, unmountCompose } from '../../actions/compose';\nimport { Link } from 'react-router-dom';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport SearchContainer from './containers/search_container';\nimport Motion from '../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport SearchResultsContainer from './containers/search_results_container';\nimport { openModal } from 'mastodon/actions/modal';\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { mascot } from '../../initial_state';\nimport Icon from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\nimport Column from 'mastodon/components/column';\nimport { Helmet } from 'react-helmet';\nimport { isMobile } from '../../is_mobile';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : false,\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Compose extends React.PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal('CONFIRM', {\n      message: intl.formatMessage(messages.logoutMessage),\n      confirm: intl.formatMessage(messages.logoutConfirm),\n      closeWhenConfirm: false,\n      onConfirm: () => logOut(),\n    }));\n\n    return false;\n  };\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  };\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  };\n\n  render () {\n    const { multiColumn, showSearch, intl } = this.props;\n\n    if (multiColumn) {\n      const { columns } = this.props;\n\n      return (\n        <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n          <nav className='drawer__header'>\n            <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' fixedWidth /></Link>\n            {!columns.some(column => column.get('id') === 'HOME') && (\n              <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n              <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n              <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'PUBLIC') && (\n              <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' fixedWidth /></Link>\n            )}\n            <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' fixedWidth /></a>\n            <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' fixedWidth /></a>\n          </nav>\n\n          {multiColumn && <SearchContainer /> }\n\n          <div className='drawer__pager'>\n            <div className='drawer__inner' onFocus={this.onFocus}>\n              <NavigationContainer onClose={this.onBlur} />\n\n              <ComposeFormContainer autoFocus={!isMobile(window.innerWidth)} />\n\n              <div className='drawer__inner__mastodon'>\n                <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n              </div>\n            </div>\n\n            <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n              {({ x }) => (\n                <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                  <SearchResultsContainer />\n                </div>\n              )}\n            </Motion>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Column onFocus={this.onFocus}>\n        <NavigationContainer onClose={this.onBlur} />\n        <ComposeFormContainer />\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n"],"sourceRoot":""}