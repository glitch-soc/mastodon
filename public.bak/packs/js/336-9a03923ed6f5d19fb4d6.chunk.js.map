{"version":3,"sources":["webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/utils/notifications.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/notifications.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/column_loading.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/bundle_column_error.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/util/react_router_helpers.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/upload_area.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/drawer_loading.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/server_banner.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/compose_panel.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/logo.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/disabled_account_banner.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/follow_requests_column_link.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/list_panel.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/notifications_counter_icon.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/sign_in_banner.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/account/components/featured_tags.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/account/containers/featured_tags_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/account/navigation.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/navigation_portal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/navigation_panel.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/columns_area.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/containers/columns_area_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/picture_in_picture/components/header.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/picture_in_picture/index.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/onboarding.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/header.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/index.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/error_boundary.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/containers/mastodon.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/main.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/performance.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/util/async-components.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/statuses.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/trends.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/domain_blocks.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/tags.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/announcements.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/store.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/button.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/mutes.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/server.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/accounts.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/blocks.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/conversations.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/app.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/search.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/directory.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/favourites.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/bookmarks.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/avatar.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/display_name.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/columns.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/suggestions.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/push_notifications/setter.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/push_notifications/registerer.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/push_notifications/index.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/lists.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/attachment_list.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/languages.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/custom_emojis.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/character_counter.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/privacy_dropdown.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/upload_progress.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/featured_tags.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/history.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/picture_in_picture.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/dropdown_menu.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/height_cache.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/filters.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/utils/icons.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/loading_indicator.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/accounts_map.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/polls.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/containers/poll_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/status_content.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/emoji_picker_dropdown.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/emoji_picker_dropdown_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/bundle.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/containers/bundle_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/bundles.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/account_notes.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/actions/pin_statuses.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/reply_indicator.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/reply_indicator_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/autosuggest_account.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/autosuggest_account_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/autosuggest_emoji.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/autosuggest_hashtag.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/autosuggest_textarea.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/components/autosuggest_input.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/poll_button.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/poll_button_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/upload_button.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/upload_button_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/text_icon_button.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/spoiler_button_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/privacy_dropdown_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/poll_form.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/poll_form_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/upload_progress_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/upload.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/upload_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/sensitive_button_container.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/upload_form.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/upload_form_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/warning.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/warning_container.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/language_dropdown.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/language_dropdown_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/util/url_regex.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/components/compose_form.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/util/counter.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/compose/containers/compose_form_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/containers/notifications_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/containers/loading_bar_container.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/dropdown_menu.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/timelines.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/meta.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/alerts.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/modal.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/user_lists.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/domain_lists.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/accounts.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/accounts_counters.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/statuses.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/relationships.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/uuid.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/settings.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/push_notifications.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/status_lists.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/mutes.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/blocks.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/boosts.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/server.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/contexts.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/compose.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/search.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/media_attachments.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/notifications.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/height_cache.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/custom_emojis.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/lists.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/list_editor.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/list_adder.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/filters.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/conversations.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/suggestions.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/polls.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/trends.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/missed_updates.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/announcements.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/markers.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/picture_in_picture.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/history.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/tags.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/followed_tags.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/reducers/index.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/middleware/loading_bar.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/middleware/sounds.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/store/configureStore.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/middleware/errors.js","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/bundle_modal_error.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/modal_loading.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/actions_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/video_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/boost_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/audio_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/confirmation_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/focal_point_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/image_modal.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/components/modal_root.jsx","webpack:///app/javascript/home/mastodon/live/app/javascript/mastodon/features/ui/containers/modal_container.js"],"names":["handlePermission","permission","callback","Notification","requestNotificationPermission","checkNotificationPromise","requestPermission","then","e","catch","console","warn","NOTIFICATIONS_UPDATE","NOTIFICATIONS_EXPAND_REQUEST","NOTIFICATIONS_EXPAND_SUCCESS","NOTIFICATIONS_EXPAND_FAIL","NOTIFICATIONS_FILTER_SET","NOTIFICATIONS_CLEAR","NOTIFICATIONS_SCROLL_TOP","NOTIFICATIONS_LOAD_PENDING","NOTIFICATIONS_MOUNT","NOTIFICATIONS_UNMOUNT","NOTIFICATIONS_MARK_AS_READ","NOTIFICATIONS_SET_BROWSER_SUPPORT","NOTIFICATIONS_SET_BROWSER_PERMISSION","defineMessages","mention","group","fetchRelatedRelationships","dispatch","notifications","accountIds","filter","item","indexOf","type","map","account","id","length","fetchRelationships","loadPending","updateNotifications","notification","intlMessages","intlLocale","getState","activeFilter","getIn","showInColumn","showAlert","playSound","filtered","includes","status","filters","result","context","some","filter_action","fetchFollowRequests","submitMarkers","importFetchedAccount","importFetchedStatus","report","target_account","usePendingItems","preferPendingItems","meta","sound","undefined","window","title","IntlMessageFormat","format","name","display_name","username","body","spoiler_text","unescapeHTML","content","notify","icon","avatar","tag","addEventListener","focus","close","noOp","expandNotificationsController","AbortController","expandNotifications","_temp","done","maxId","forceLoad","get","isLoadingMore","abort","params","max_id","exclude_types","state","enabled","keySeq","toJS","ImmutableList","filterNot","size","a","b","compareId","since_id","isLoadingRecent","skipLoading","expandNotificationsRequest","api","signal","response","next","getLinks","refs","find","link","rel","importFetchedAccounts","data","importFetchedStatuses","expandNotificationsSuccess","uri","error","skipAlert","expandNotificationsFail","finally","clearNotifications","post","scrollTopNotifications","top","setFilter","filterType","path","value","saveSettings","mountNotifications","unmountNotifications","markNotificationsAsRead","setupBrowserNotifications","setBrowserPermission","navigator","permissions","query","onchange","requestBrowserPermission","ColumnLoading","ImmutablePureComponent","render","multiColumn","this","props","_jsx","Column","ColumnHeader","focusable","placeholder","className","propTypes","PropTypes","oneOfType","node","string","bool","defaultProps","GIF","React","PureComponent","constructor","arguments","hovering","handleMouseEnter","animate","setState","handleMouseLeave","src","staticSrc","alt","role","onMouseEnter","onMouseLeave","autoPlayGif","CopyButton","copied","handleClick","clipboard","writeText","timeout","setTimeout","componentWillUnmount","clearTimeout","children","Button","onClick","FormattedMessage","defaultMessage","BundleColumnError","injectIntl","_class2","handleRetry","onRetry","errorType","stacktrace","bindToDocument","Link","to","classNames","Helmet","_class","WrappedSwitch","Switch","Children","child","cloneElement","WrappedRoute","Component","hasError","renderComponent","_ref","match","component","componentParams","BundleContainer","fetchComponent","loading","renderLoading","renderError","createElement","_extends","static","componentDidCatch","StackTrace","fromError","stackframes","toString","frame","join","err","rest","Route","UploadArea","handleKeyUp","keyCode","active","preventDefault","stopPropagation","onClose","componentDidMount","removeEventListener","Motion","defaultStyle","backgroundOpacity","backgroundScale","style","spring","stiffness","damping","visibility","opacity","transform","DrawerLoading","messages","aboutActiveUsers","ServerBanner","connect","server","_dec","fetchServer","intl","isLoading","values","domain","mastodon","href","target","Image","blurhash","Fragment","Skeleton","width","Account","ShortNumber","formatMessage","ComposePanel","onFocus","changeComposing","onBlur","mountCompose","unmountCompose","signedIn","identity","SearchContainer","openInRoute","NavigationContainer","ComposeFormContainer","singleColumn","LinkFooter","contextTypes","object","isRequired","Logo","viewBox","xlinkHref","logoutMessage","logoutConfirm","DisabledAccountBanner","disabledAcct","disabledAccountId","movedToAcct","movedToAccountId","mapDispatchToProps","onLogout","openModal","message","confirm","closeWhenConfirm","onConfirm","logOut","handleLogOutClick","disabledAccountLink","disabledAccount","movedToAccount","text","FollowRequestsColumnLink","count","ColumnLink","transparent","IconWithBadge","getOrderedLists","createSelector","lists","toList","sort","localeCompare","take","ListPanel","withRouter","fetchLists","isEmpty","list","strict","func","ImmutablePropTypes","SignInBanner","useDispatch","openClosedRegistrationsModal","useCallback","signupButton","registrationsOpen","lastStatusAt","empty","FeaturedTags","featuredTags","dangerouslySetInnerHTML","__html","featuredTag","Hashtag","uses","withGraph","description","date","formatDate","month","day","router","tagged","mapStateToProps","getAccount","makeGetAccount","accountId","AccountNavigation","acct","normalizeForLookup","DefaultNavigation","showTrends","Trends","NavigationPortal","exact","home","explore","local","federated","direct","favourites","bookmarks","preferences","followsAndFollowers","about","search","NavigationPanel","NotificationsCounterIcon","timelinePreview","componentMap","Compose","HomeTimeline","Notifications","PublicTimeline","CommunityTimeline","HashtagTimeline","DirectTimeline","FavouritedStatuses","BookmarkedStatuses","ListTimeline","Directory","ColumnsArea","mediaQuery","matchMedia","renderComposePanel","matches","handleLayoutChange","handleWheel","_interruptScrollAnimation","setRef","columnId","supportsPassiveEvents","passive","addListener","isRtlLayout","document","getElementsByTagName","classList","contains","componentWillUpdate","nextProps","componentDidUpdate","prevProps","removeListener","handleChildrenContentChange","modifier","scrollRight","scrollWidth","innerWidth","columns","isModalOpen","ref","column","other","SpecificComponent","modalType","forwardRef","Header","statusId","Avatar","DisplayName","IconButton","PictureInPicture","handleClose","removePictureInPicture","currentTime","player","Video","volume","muted","autoPlay","inline","alwaysVisible","Audio","poster","backgroundColor","foregroundColor","accentColor","Footer","INTRODUCTION_VERSION","me","location","pathname","beforeUnload","keyMap","help","new","forceNew","toggleComposeSpoilers","focusColumn","reply","favourite","boost","open","openProfile","moveDown","moveUp","back","goToHome","goToNotifications","goToLocal","goToFederated","goToDirect","goToStart","goToFavourites","goToPinned","goToProfile","goToBlocked","goToMuted","goToRequests","toggleHidden","toggleSensitive","openMedia","SwitchingColumnsArea","c","componentWillMount","mobile","toggle","redirect","Redirect","from","singleUserMode","owner","initialState","accounts","trendsAsLanding","ColumnsAreaContainer","GettingStarted","KeyboardShortcuts","About","PrivacyPolicy","PinnedStatuses","FollowRecommendations","Explore","AccountTimeline","withReplies","Followers","Following","AccountGallery","Status","Reblogs","Favourites","FollowRequests","Blocks","DomainBlocks","FollowedTags","Mutes","Lists","UI","layout","isComposing","hasComposingText","trim","hasMediaAttachments","canUploadMore","x","dropdownMenuIsOpen","firstLaunch","draggingOver","handleBeforeUnload","synchronouslySubmitMarkers","returnValue","handleWindowFocus","focusApp","immediate","handleWindowBlur","unfocusApp","handleDragEnter","dragTargets","push","dataTransfer","Array","types","handleDragOver","dataTransferIsText","dropEffect","handleDrop","files","uploadCompose","handleDragLeave","el","closeUploadModal","handleServiceWorkerPostMessage","history","_debounce","clearHeight","trailing","handleResize","layoutFromWindow","cancel","changeLayout","handleHotkeyNew","element","querySelector","handleHotkeySearch","handleHotkeyForceNew","resetCompose","handleHotkeyToggleComposeSpoilers","changeComposeSpoilerness","handleHotkeyFocusColumn","index","key","container","scrollTop","offsetTop","scrollIntoView","handleHotkeyBack","goBack","setHotkeysRef","hotkeys","handleHotkeyToggleHelp","handleHotkeyGoToHome","handleHotkeyGoToNotifications","handleHotkeyGoToLocal","handleHotkeyGoToFederated","handleHotkeyGoToDirect","handleHotkeyGoToStart","handleHotkeyGoToFavourites","handleHotkeyGoToPinned","handleHotkeyGoToProfile","handleHotkeyGoToBlocked","handleHotkeyGoToMuted","handleHotkeyGoToRequests","handleDragEnd","serviceWorker","replace","changeSetting","fetchMarkers","expandHomeTimeline","__mousetrap__","stopCallback","tagName","handlers","HotKeys","attach","focused","pointerEvents","NotificationsContainer","LoadingBarContainer","ModalContainer","ErrorBoundary","errorMessage","stackTrace","mappedStackTrace","componentStack","handleCopyStackTrace","textarea","contents","textContent","position","appendChild","select","execCommand","removeChild","info","stack","sf","likelyBrowserAddonIssue","version","source_url","localeData","getLocale","addLocaleData","siteTitle","store","configureStore","hydrateAction","hydrateStore","fetchCustomEmojis","Mastodon","disabled_account_id","accessToken","access_token","getChildContext","disconnect","connectUserStream","shouldUpdateScroll","prevRouterProps","_location$state","_location$state2","_prevRouterProps$loca","_prevRouterProps$loca2","mastodonModalKey","locale","IntlProvider","ReduxProvider","BrowserRouter","ScrollContext","defaultTitle","titleTemplate","childContextTypes","shape","perf","require","main","start","ready","async","mountNode","getElementById","JSON","parse","getAttribute","ReactDOM","Workbox","wb","registration","register","registerPushNotifications","stop","process","EmojiPicker","MuteModal","BlockModal","ReportModal","MediaGallery","EmbedModal","ListEditor","ListAdder","Tesseract","CompareHistoryModal","FilterModal","InteractionModal","SubscribedLanguagesModal","ClosedRegistrationsModal","STATUS_FETCH_REQUEST","STATUS_FETCH_SUCCESS","STATUS_FETCH_FAIL","STATUS_DELETE_REQUEST","STATUS_DELETE_SUCCESS","STATUS_DELETE_FAIL","CONTEXT_FETCH_REQUEST","CONTEXT_FETCH_SUCCESS","CONTEXT_FETCH_FAIL","STATUS_MUTE_REQUEST","STATUS_MUTE_SUCCESS","STATUS_MUTE_FAIL","STATUS_UNMUTE_REQUEST","STATUS_UNMUTE_SUCCESS","STATUS_UNMUTE_FAIL","STATUS_REVEAL","STATUS_HIDE","STATUS_COLLAPSE","REDRAFT","STATUS_TRANSLATE_SUCCESS","STATUS_TRANSLATE_UNDO","fetchStatus","forceFetch","fetchContextRequest","ancestors","concat","descendants","statuses","fetchContextSuccess","deleteFromTimelines","fetchContextFail","fetchContext","fetchStatusRequest","fetchStatusSuccess","fetchStatusFail","editStatus","routerHistory","set","fetchStatusSourceRequest","fetchStatusSourceSuccess","ensureComposeIsVisible","setComposeToStatus","fetchStatusSourceFail","deleteStatus","withRedraft","deleteStatusRequest","delete","deleteStatusSuccess","raw_text","redraft","deleteStatusFail","updateStatus","muteStatus","muteStatusRequest","muteStatusSuccess","muteStatusFail","unmuteStatus","unmuteStatusRequest","unmuteStatusSuccess","unmuteStatusFail","hideStatus","ids","isArray","revealStatus","toggleStatusCollapse","isCollapsed","translateStatus","translateStatusRequest","translateStatusSuccess","translateStatusFail","translation","undoStatusTranslation","TRENDS_TAGS_FETCH_REQUEST","TRENDS_TAGS_FETCH_SUCCESS","TRENDS_TAGS_FETCH_FAIL","TRENDS_LINKS_FETCH_REQUEST","TRENDS_LINKS_FETCH_SUCCESS","TRENDS_LINKS_FETCH_FAIL","TRENDS_STATUSES_FETCH_REQUEST","TRENDS_STATUSES_FETCH_SUCCESS","TRENDS_STATUSES_FETCH_FAIL","TRENDS_STATUSES_EXPAND_REQUEST","TRENDS_STATUSES_EXPAND_SUCCESS","TRENDS_STATUSES_EXPAND_FAIL","fetchTrendingHashtags","fetchTrendingHashtagsRequest","fetchTrendingHashtagsSuccess","fetchTrendingHashtagsFail","trends","fetchTrendingLinks","fetchTrendingLinksRequest","_ref2","fetchTrendingLinksSuccess","fetchTrendingLinksFail","fetchTrendingStatuses","fetchTrendingStatusesRequest","fetchTrendingStatusesSuccess","fetchTrendingStatusesFail","expandTrendingStatuses","url","expandTrendingStatusesRequest","expandTrendingStatusesSuccess","expandTrendingStatusesFail","DOMAIN_BLOCK_REQUEST","DOMAIN_BLOCK_SUCCESS","DOMAIN_BLOCK_FAIL","DOMAIN_UNBLOCK_REQUEST","DOMAIN_UNBLOCK_SUCCESS","DOMAIN_UNBLOCK_FAIL","DOMAIN_BLOCKS_FETCH_REQUEST","DOMAIN_BLOCKS_FETCH_SUCCESS","DOMAIN_BLOCKS_FETCH_FAIL","DOMAIN_BLOCKS_EXPAND_REQUEST","DOMAIN_BLOCKS_EXPAND_SUCCESS","DOMAIN_BLOCKS_EXPAND_FAIL","blockDomain","blockDomainRequest","at_domain","endsWith","valueSeq","blockDomainSuccess","blockDomainFail","unblockDomain","unblockDomainRequest","unblockDomainSuccess","unblockDomainFail","fetchDomainBlocks","domains","fetchDomainBlocksSuccess","expandDomainBlocks","expandDomainBlocksSuccess","HASHTAG_FETCH_SUCCESS","FOLLOWED_HASHTAGS_FETCH_REQUEST","FOLLOWED_HASHTAGS_FETCH_SUCCESS","FOLLOWED_HASHTAGS_FETCH_FAIL","FOLLOWED_HASHTAGS_EXPAND_REQUEST","FOLLOWED_HASHTAGS_EXPAND_SUCCESS","FOLLOWED_HASHTAGS_EXPAND_FAIL","HASHTAG_FOLLOW_REQUEST","HASHTAG_FOLLOW_FAIL","HASHTAG_UNFOLLOW_REQUEST","HASHTAG_UNFOLLOW_FAIL","fetchHashtag","fetchHashtagRequest","fetchHashtagSuccess","fetchHashtagFail","fetchFollowedHashtags","followed_tags","fetchFollowedHashtagsSuccess","expandFollowedHashtags","expandFollowedHashtagsSuccess","expandFollowedHashtagsFail","followHashtag","followHashtagRequest","followHashtagSuccess","followHashtagFail","unfollowHashtag","unfollowHashtagRequest","_ref3","unfollowHashtagSuccess","unfollowHashtagFail","ANNOUNCEMENTS_FETCH_REQUEST","ANNOUNCEMENTS_FETCH_SUCCESS","ANNOUNCEMENTS_FETCH_FAIL","ANNOUNCEMENTS_UPDATE","ANNOUNCEMENTS_DELETE","ANNOUNCEMENTS_DISMISS_SUCCESS","ANNOUNCEMENTS_REACTION_ADD_REQUEST","ANNOUNCEMENTS_REACTION_ADD_FAIL","ANNOUNCEMENTS_REACTION_REMOVE_REQUEST","ANNOUNCEMENTS_REACTION_REMOVE_FAIL","ANNOUNCEMENTS_REACTION_UPDATE","ANNOUNCEMENTS_TOGGLE_SHOW","fetchAnnouncements","fetchAnnouncementsRequest","fetchAnnouncementsSuccess","normalizeAnnouncement","fetchAnnouncementsFail","announcements","updateAnnouncements","announcement","dismissAnnouncement","announcementId","dismissAnnouncementRequest","dismissAnnouncementSuccess","dismissAnnouncementFail","addReaction","alreadyAdded","reaction","addReactionRequest","put","encodeURIComponent","addReactionSuccess","addReactionFail","removeReaction","removeReactionRequest","removeReactionSuccess","removeReactionFail","updateReaction","toggleShowAnnouncements","deleteAnnouncement","STORE_HYDRATE","rawState","fromJS","k","v","Iterable","isIndexed","toMap","convertState","hydrateCompose","Object","disabled","secondary","block","MUTES_FETCH_REQUEST","MUTES_FETCH_SUCCESS","MUTES_FETCH_FAIL","MUTES_EXPAND_REQUEST","MUTES_EXPAND_SUCCESS","MUTES_EXPAND_FAIL","MUTES_INIT_MODAL","MUTES_TOGGLE_HIDE_NOTIFICATIONS","MUTES_CHANGE_DURATION","fetchMutes","fetchMutesSuccess","fetchMutesFail","expandMutes","expandMutesSuccess","expandMutesFail","initMuteModal","toggleHideNotifications","changeMuteDuration","duration","SERVER_FETCH_REQUEST","SERVER_FETCH_SUCCESS","SERVER_FETCH_FAIL","EXTENDED_DESCRIPTION_REQUEST","EXTENDED_DESCRIPTION_SUCCESS","EXTENDED_DESCRIPTION_FAIL","SERVER_DOMAIN_BLOCKS_FETCH_REQUEST","SERVER_DOMAIN_BLOCKS_FETCH_SUCCESS","SERVER_DOMAIN_BLOCKS_FETCH_FAIL","fetchServerRequest","contact","fetchServerSuccess","fetchServerFail","fetchExtendedDescription","fetchExtendedDescriptionRequest","fetchExtendedDescriptionSuccess","fetchExtendedDescriptionFail","fetchDomainBlocksRequest","fetchDomainBlocksFail","isAvailable","blocks","ACCOUNT_FETCH_REQUEST","ACCOUNT_FETCH_SUCCESS","ACCOUNT_FETCH_FAIL","ACCOUNT_LOOKUP_FAIL","ACCOUNT_FOLLOW_REQUEST","ACCOUNT_FOLLOW_SUCCESS","ACCOUNT_FOLLOW_FAIL","ACCOUNT_UNFOLLOW_REQUEST","ACCOUNT_UNFOLLOW_SUCCESS","ACCOUNT_UNFOLLOW_FAIL","ACCOUNT_BLOCK_REQUEST","ACCOUNT_BLOCK_SUCCESS","ACCOUNT_BLOCK_FAIL","ACCOUNT_UNBLOCK_REQUEST","ACCOUNT_UNBLOCK_SUCCESS","ACCOUNT_UNBLOCK_FAIL","ACCOUNT_MUTE_REQUEST","ACCOUNT_MUTE_SUCCESS","ACCOUNT_MUTE_FAIL","ACCOUNT_UNMUTE_REQUEST","ACCOUNT_UNMUTE_SUCCESS","ACCOUNT_UNMUTE_FAIL","ACCOUNT_PIN_REQUEST","ACCOUNT_PIN_SUCCESS","ACCOUNT_PIN_FAIL","ACCOUNT_UNPIN_REQUEST","ACCOUNT_UNPIN_SUCCESS","ACCOUNT_UNPIN_FAIL","FOLLOWERS_FETCH_REQUEST","FOLLOWERS_FETCH_SUCCESS","FOLLOWERS_FETCH_FAIL","FOLLOWERS_EXPAND_REQUEST","FOLLOWERS_EXPAND_SUCCESS","FOLLOWERS_EXPAND_FAIL","FOLLOWING_FETCH_REQUEST","FOLLOWING_FETCH_SUCCESS","FOLLOWING_FETCH_FAIL","FOLLOWING_EXPAND_REQUEST","FOLLOWING_EXPAND_SUCCESS","FOLLOWING_EXPAND_FAIL","RELATIONSHIPS_FETCH_REQUEST","RELATIONSHIPS_FETCH_SUCCESS","RELATIONSHIPS_FETCH_FAIL","FOLLOW_REQUESTS_FETCH_REQUEST","FOLLOW_REQUESTS_FETCH_SUCCESS","FOLLOW_REQUESTS_FETCH_FAIL","FOLLOW_REQUESTS_EXPAND_REQUEST","FOLLOW_REQUESTS_EXPAND_SUCCESS","FOLLOW_REQUESTS_EXPAND_FAIL","FOLLOW_REQUEST_AUTHORIZE_REQUEST","FOLLOW_REQUEST_AUTHORIZE_SUCCESS","FOLLOW_REQUEST_AUTHORIZE_FAIL","FOLLOW_REQUEST_REJECT_REQUEST","FOLLOW_REQUEST_REJECT_SUCCESS","FOLLOW_REQUEST_REJECT_FAIL","ACCOUNT_REVEAL","fetchAccount","fetchAccountRequest","fetchAccountFail","lookupAccount","lookupAccountRequest","lookupAccountSuccess","lookupAccountFail","followAccount","options","reblogs","alreadyFollowing","locked","followAccountRequest","relationship","followAccountSuccess","followAccountFail","unfollowAccount","unfollowAccountRequest","unfollowAccountFail","blockAccount","blockAccountRequest","blockAccountFail","unblockAccount","unblockAccountRequest","unblockAccountFail","muteAccount","muteAccountRequest","muteAccountFail","unmuteAccount","unmuteAccountRequest","unmuteAccountFail","fetchFollowers","fetchFollowersRequest","fetchFollowersSuccess","skipNotFound","fetchFollowersFail","expandFollowers","expandFollowersRequest","expandFollowersSuccess","expandFollowersFail","fetchFollowing","fetchFollowingRequest","fetchFollowingSuccess","fetchFollowingFail","expandFollowing","expandFollowingRequest","expandFollowingSuccess","expandFollowingFail","loadedRelationships","newAccountIds","relationships","fetchRelationshipsFail","fetchFollowRequestsSuccess","fetchFollowRequestsFail","expandFollowRequests","expandFollowRequestsSuccess","expandFollowRequestsFail","authorizeFollowRequest","authorizeFollowRequestRequest","authorizeFollowRequestSuccess","authorizeFollowRequestFail","rejectFollowRequest","rejectFollowRequestRequest","rejectFollowRequestSuccess","rejectFollowRequestFail","pinAccount","pinAccountRequest","pinAccountFail","unpinAccount","unpinAccountRequest","unpinAccountFail","revealAccount","BLOCKS_FETCH_REQUEST","BLOCKS_FETCH_SUCCESS","BLOCKS_FETCH_FAIL","BLOCKS_EXPAND_REQUEST","BLOCKS_EXPAND_SUCCESS","BLOCKS_EXPAND_FAIL","BLOCKS_INIT_MODAL","fetchBlocks","fetchBlocksSuccess","fetchBlocksFail","expandBlocks","expandBlocksSuccess","expandBlocksFail","initBlockModal","CONVERSATIONS_MOUNT","CONVERSATIONS_UNMOUNT","CONVERSATIONS_FETCH_REQUEST","CONVERSATIONS_FETCH_SUCCESS","CONVERSATIONS_FETCH_FAIL","CONVERSATIONS_UPDATE","CONVERSATIONS_READ","CONVERSATIONS_DELETE_SUCCESS","mountConversations","unmountConversations","markConversationRead","conversationId","expandConversations","expandConversationsRequest","reduce","aggr","last_status","expandConversationsSuccess","expandConversationsFail","conversations","updateConversations","conversation","deleteConversation","deleteConversationRequest","deleteConversationSuccess","deleteConversationFail","APP_FOCUS","APP_UNFOCUS","APP_LAYOUT_CHANGE","SEARCH_CHANGE","SEARCH_CLEAR","SEARCH_SHOW","SEARCH_FETCH_REQUEST","SEARCH_FETCH_SUCCESS","SEARCH_FETCH_FAIL","SEARCH_EXPAND_SUCCESS","changeSearch","clearSearch","submitSearch","q","resolve","limit","fetchSearchSuccess","fetchSearchFail","hashtags","results","searchTerm","expandSearch","offset","expandSearchRequest","expandSearchSuccess","expandSearchFail","searchType","showSearch","DIRECTORY_FETCH_REQUEST","DIRECTORY_FETCH_SUCCESS","DIRECTORY_FETCH_FAIL","DIRECTORY_EXPAND_REQUEST","DIRECTORY_EXPAND_SUCCESS","DIRECTORY_EXPAND_FAIL","fetchDirectory","fetchDirectoryRequest","fetchDirectorySuccess","fetchDirectoryFail","expandDirectory","expandDirectoryRequest","loadedItems","expandDirectorySuccess","expandDirectoryFail","FAVOURITED_STATUSES_FETCH_REQUEST","FAVOURITED_STATUSES_FETCH_SUCCESS","FAVOURITED_STATUSES_FETCH_FAIL","FAVOURITED_STATUSES_EXPAND_REQUEST","FAVOURITED_STATUSES_EXPAND_SUCCESS","FAVOURITED_STATUSES_EXPAND_FAIL","fetchFavouritedStatuses","fetchFavouritedStatusesSuccess","fetchFavouritedStatusesFail","expandFavouritedStatuses","expandFavouritedStatusesSuccess","expandFavouritedStatusesFail","BOOKMARKED_STATUSES_FETCH_REQUEST","BOOKMARKED_STATUSES_FETCH_SUCCESS","BOOKMARKED_STATUSES_FETCH_FAIL","BOOKMARKED_STATUSES_EXPAND_REQUEST","BOOKMARKED_STATUSES_EXPAND_SUCCESS","BOOKMARKED_STATUSES_EXPAND_FAIL","fetchBookmarkedStatuses","fetchBookmarkedStatusesSuccess","fetchBookmarkedStatusesFail","expandBookmarkedStatuses","expandBookmarkedStatusesSuccess","expandBookmarkedStatusesFail","height","currentTarget","emojis","querySelectorAll","i","emoji","others","localDomain","displayName","suffix","prev","cur","first","COLUMN_ADD","COLUMN_REMOVE","COLUMN_MOVE","COLUMN_PARAMS_CHANGE","addColumn","removeColumn","uuid","moveColumn","direction","changeColumnParams","SUGGESTIONS_FETCH_REQUEST","SUGGESTIONS_FETCH_SUCCESS","SUGGESTIONS_FETCH_FAIL","SUGGESTIONS_DISMISS","fetchSuggestions","withRelationships","fetchSuggestionsRequest","fetchSuggestionsSuccess","fetchSuggestionsFail","suggestions","dismissSuggestion","SET_BROWSER_SUPPORT","SET_SUBSCRIPTION","CLEAR_SUBSCRIPTION","SET_ALERTS","urlBase64ToUint8Array","base64String","base64","repeat","decodeBase64","getApplicationServerKey","getRegistration","getPushSubscription","pushManager","getSubscription","subscription","subscribe","userVisibleOnly","applicationServerKey","unsubscribe","sendSubscriptionToBackend","pushNotificationsSetting","supportsPushNotifications","PushSubscription","prototype","currentServerKey","Uint8Array","subscriptionServerKey","serverEndpoint","endpoint","setSubscription","alerts","code","remove","changeAlerts","setAlerts","_","LIST_FETCH_SUCCESS","LIST_FETCH_FAIL","LISTS_FETCH_SUCCESS","LIST_EDITOR_TITLE_CHANGE","LIST_EDITOR_RESET","LIST_EDITOR_SETUP","LIST_CREATE_REQUEST","LIST_CREATE_SUCCESS","LIST_CREATE_FAIL","LIST_UPDATE_REQUEST","LIST_UPDATE_SUCCESS","LIST_UPDATE_FAIL","LIST_DELETE_SUCCESS","LIST_ACCOUNTS_FETCH_REQUEST","LIST_ACCOUNTS_FETCH_SUCCESS","LIST_ACCOUNTS_FETCH_FAIL","LIST_EDITOR_SUGGESTIONS_CHANGE","LIST_EDITOR_SUGGESTIONS_READY","LIST_EDITOR_SUGGESTIONS_CLEAR","LIST_EDITOR_ADD_SUCCESS","LIST_EDITOR_REMOVE_SUCCESS","LIST_ADDER_RESET","LIST_ADDER_SETUP","LIST_ADDER_LISTS_FETCH_REQUEST","LIST_ADDER_LISTS_FETCH_SUCCESS","LIST_ADDER_LISTS_FETCH_FAIL","fetchList","fetchListRequest","fetchListSuccess","fetchListFail","fetchListsRequest","fetchListsSuccess","fetchListsFail","submitListEditor","shouldReset","listId","createList","updateList","setupListEditor","fetchListAccounts","changeListEditorTitle","createListRequest","createListSuccess","resetListEditor","createListFail","replies_policy","updateListRequest","_ref4","updateListSuccess","updateListFail","deleteList","deleteListRequest","deleteListSuccess","deleteListFail","fetchListAccountsRequest","_ref5","fetchListAccountsSuccess","fetchListAccountsFail","fetchListSuggestions","following","_ref6","fetchListSuggestionsReady","showAlertForError","clearListSuggestions","changeListSuggestions","addToListEditor","addToList","addToListRequest","account_ids","addToListSuccess","addToListFail","removeFromListEditor","removeFromList","removeFromListRequest","removeFromListSuccess","removeFromListFail","resetListAdder","setupListAdder","fetchAccountLists","fetchAccountListsRequest","_ref7","fetchAccountListsSuccess","fetchAccountListsFail","addToListAdder","removeFromListAdder","AttachmentList","media","compact","Icon","attachment","displayUrl","split","pop","LANGUAGE_USE","useLanguage","language","CUSTOM_EMOJIS_FETCH_REQUEST","CUSTOM_EMOJIS_FETCH_SUCCESS","CUSTOM_EMOJIS_FETCH_FAIL","custom_emojis","fetchCustomEmojisFail","CharacterCounter","checkRemainingText","diff","max","public_short","public_long","unlisted_short","unlisted_long","private_short","private_long","direct_short","direct_long","change_privacy","listenerOptions","PrivacyDropdownMenu","handleDocumentClick","handleKeyDown","items","findIndex","childNodes","firstChild","lastChild","shiftKey","onChange","setFocusRef","focusedItem","preventScroll","tabIndex","onKeyDown","fixedWidth","PrivacyDropdown","placement","handleToggle","isUserTouching","onModalClose","onModalOpen","actions","option","handleModalActionClick","activeElement","handleMouseDown","handleButtonKeyDown","handleChange","setTargetRef","findTarget","handleOverlayEnter","noDirect","valueOption","expanded","inverted","onMouseDown","lineHeight","Overlay","show","flip","popperConfig","strategy","onFirstUpdate","UploadProgress","progress","isProcessing","FEATURED_TAGS_FETCH_REQUEST","FEATURED_TAGS_FETCH_SUCCESS","FEATURED_TAGS_FETCH_FAIL","fetchFeaturedTags","fetchFeaturedTagsRequest","fetchFeaturedTagsSuccess","fetchFeaturedTagsFail","tags","HISTORY_FETCH_REQUEST","HISTORY_FETCH_SUCCESS","HISTORY_FETCH_FAIL","fetchHistory","fetchHistoryRequest","fetchHistorySuccess","fetchHistoryFail","PICTURE_IN_PICTURE_DEPLOY","PICTURE_IN_PICTURE_REMOVE","deployPictureInPicture","playerType","hasIn","DROPDOWN_MENU_OPEN","DROPDOWN_MENU_CLOSE","openDropdownMenu","keyboard","scroll_key","closeDropdownMenu","HEIGHT_CACHE_SET","HEIGHT_CACHE_CLEAR","setHeight","FILTERS_FETCH_SUCCESS","FILTERS_CREATE_SUCCESS","initAddFilter","contextType","fetchFilters","createFilterStatus","onSuccess","onFail","createFilterStatusRequest","filter_id","createFilterStatusSuccess","createFilterStatusFail","filter_status","createFilter","createFilterRequest","createFilterSuccess","createFilterFail","loupeIcon","xmlns","d","deleteIcon","CircularProgress","strokeWidth","radius","fill","cx","cy","r","LoadingIndicator","str","toLowerCase","ImmutableMap","accountsMap","action","_action$error","_action$error$respons","ACCOUNT_IMPORT","ACCOUNTS_IMPORT","withMutations","forEach","voteRequest","voteSuccess","poll","voteFail","fetchPollRequest","fetchPollSuccess","fetchPollFail","pollId","refresh","importFetchedPoll","fetchPoll","leading","onVote","choices","vote","Poll","TranslateButton","preloadedLanguages","lang","languageName","provider","StatusContent","hidden","onMentionClick","button","ctrlKey","metaKey","onHashtagClick","hashtag","startXY","clientX","clientY","handleMouseUp","startX","startY","deltaX","deltaY","Math","abs","localName","parentNode","handleSpoilerClick","onExpandedToggle","handleTranslate","onTranslate","_updateStatusLinks","onCollapsedToggle","links","add","bind","setAttribute","previousSibling","slice","collapsable","clientHeight","renderReadMore","renderTranslate","spoilerContent","classnames","readMoreButton","translateButton","PollContainer","mentionsPlaceholder","mentionLinks","aggregate","toggleText","onMouseUp","marginBottom","emoji_search","custom","recent","search_results","people","nature","food","activity","travel","objects","symbols","flags","Emoji","backgroundImageFn","assetHost","notFoundFn","sheetSize","ModifierPickerMenu","onSelect","componentWillReceiveProps","attachListeners","removeListeners","display","skin","ModifierPicker","onOpen","handleSelect","EmojiPickerMenu","modifierOpen","readyToFocus","getI18n","categories","foods","places","event","native","colons","onPick","handleModifierOpen","handleModifierClose","handleModifierChange","onSkinTone","requestAnimationFrame","skinTone","frequentlyUsedEmojis","categoriesSort","splice","categoriesFromEmojis","selecting","perLine","emojiSize","buildCustomEmojis","color","i18n","include","showPreview","showSkinTones","notFound","autoFocus","emojiTooltip","EmojiPickerDropdown","_class3","dropdown","onShowDropdown","EmojiPickerAsync","EmojiMart","Picker","onHideDropdown","onToggle","onPickEmoji","DEFAULTS","getFrequentlyUsedEmojis","emojiCounters","reverse","toArray","uniqueDefaults","getCustomEmojis","aShort","bShort","useEmoji","emptyComponent","noop","Bundle","mod","forceRender","load","onFetch","onFetchSuccess","onFetchFail","renderDelay","cachedMod","cache","Promise","default","timestamp","Date","Loading","Error","elapsed","Map","fetchBundleFail","ACCOUNT_NOTE_SUBMIT_REQUEST","ACCOUNT_NOTE_SUBMIT_SUCCESS","ACCOUNT_NOTE_SUBMIT_FAIL","submitAccountNote","comment","submitAccountNoteFail","PINNED_STATUSES_FETCH_REQUEST","PINNED_STATUSES_FETCH_SUCCESS","PINNED_STATUSES_FETCH_FAIL","fetchPinnedStatuses","pinned","fetchPinnedStatusesFail","ReplyIndicator","onCancel","handleAccountClick","makeMapStateToProps","getStatus","makeGetStatus","editing","cancelReplyCompose","AutosuggestAccount","AutosuggestEmoji","imageUrl","mapping","unicodeMapping","filename","AutosuggestHashtag","weeklyUses","total","AutosuggestTextarea","suggestionsHidden","selectedSuggestion","lastToken","tokenStart","token","textAtCursorMatchesToken","caretPosition","word","left","right","selectionStart","onSuggestionsFetchRequested","onSuggestionsClearRequested","which","parentElement","min","onSuggestionSelected","defaultPrevented","onSuggestionClick","suggestion","setTextarea","onPaste","clipboardData","renderSuggestion","inner","AutosuggestAccountContainer","selected","onKeyUp","Textarea","dir","AutosuggestInput","searchTokens","input","setInput","maxLength","spellCheck","arrayOf","number","add_poll","remove_poll","iconStyle","PollButton","unavailable","removePoll","addPoll","upload","UploadButton","acceptContentTypes","onSelectFile","fileElement","click","resetFileKey","multiple","accept","listOf","m","TextIconButton","label","ariaControls","marked","unmarked","changeComposeVisibility","closeModal","option_placeholder","add_option","remove_option","poll_duration","switchToMultiple","switchToSingle","minutes","hours","days","Option","handleOptionTitleChange","handleOptionRemove","onRemove","handleToggleMultiple","onToggleMultiple","handleCheckboxKeypress","onClearSuggestions","onFetchSuggestions","isPollMultiple","checkbox","onKeyPress","PollForm","_class4","handleAddOption","onAddOption","handleSelectDuration","onChangeSettings","isMultiple","expiresIn","onChangeOption","onRemoveOption","autoFocusIndex","addPollOption","removePollOption","changePollOption","changePollSettings","clearComposeSuggestions","fetchComposeSuggestions","selectComposeSuggestion","Upload","handleUndoClick","onUndo","handleFocalPointClick","onOpenFocalPoint","focusX","focusY","y","scale","backgroundImage","backgroundPosition","undoUploadCompose","initMediaEditModal","onSubmit","submitCompose","SensitiveButton","mediaCount","checked","changeComposeSensitivity","UploadForm","mediaIds","UploadProgressContainer","UploadContainer","SensitiveButtonContainer","Warning","scaleX","scaleY","APPROX_HASHTAG_RE","buildHashtagRE","HASHTAG_SEPARATORS","ALPHA","WORD","RegExp","needsLockWarning","hashtagWarning","test","directMessageWarning","changeLanguage","clear","LanguageDropdownMenu","searchValue","setListRef","listNode","handleSearchChange","handleSearchKeyDown","handleClear","renderItem","languages","frequentlyUsedLanguages","indexOfA","indexOfB","Infinity","fuzzysort","go","keys","threshold","obj","frequentlyUsed","current","isSearching","LanguageDropdown","toUpperCase","getFrequentlyUsedLanguages","languageCounters","changeComposeLanguage","urlRegex","regexSupplant","validUrlPrecedingChars","validDomain","validPortNumber","validUrlPath","validUrlQueryChars","validUrlQueryEndingChars","spoiler_placeholder","publish","publishLoud","saveChanges","ComposeForm","handleSubmit","getFulltextForCharacterCounting","spoiler","spoilerText","inputText","canSubmit","isSubmitting","isChangingUpload","isUploading","anyMedia","fulltext","isOnlyWhitespace","maxChars","autosuggestTextarea","onSpoilerSuggestionSelected","handleChangeSpoilerText","onChangeSpoilerText","handleFocus","composeForm","getBoundingClientRect","documentElement","clientWidth","_updateFocusAndSelection","focusDate","selectionEnd","preselectDate","isInReply","setSelectionRange","setAutosuggestTextarea","setSpoilerText","handleEmojiPick","needsSpace","publishText","isEditing","privacy","WarningContainer","ReplyIndicatorContainer","UploadFormContainer","PollFormContainer","UploadButtonContainer","PollButtonContainer","PrivacyDropdownContainer","SpoilerButtonContainer","instanceOf","changeCompose","changeComposeSpoilerText","insertEmojiCompose","getAlerts","onDismiss","alert","dismissAlert","NotificationStack","ownProps","scope","LoadingBar","WrappedComponent","Immutable","openId","initialTimeline","unread","online","hasMore","pendingItems","references","exclude_account","timeline","startsWith","helper","updateIn","streaming_api_base_url","ignoreFocus","ImmutableStack","popModal","update","shift","initialListState","followers","reblogged_by","favourited_by","follow_requests","mutes","featured_tags","normalizeList","setIn","appendToList","normalizeFeaturedTags","normalizeFeaturedTag","ImmutableOrderedSet","normalizeAccount","followers_count","following_count","statuses_count","limited","importStatus","updater","reactions","normalizeRelationship","setDomainBlocking","blocking","random","saved","shows","reblog","regex","follow","follow_request","quickFilter","advanced","dismissPermissionBanner","showUnread","sounds","community","public","defaultColumns","filterDeadListColumns","isSubscribed","browserSupport","loaded","pins","trending","listType","listMap","union","prependOneToList","removeOneFromList","account_id","extendedDescription","domainBlocks","inReplyTos","replies","deleteFromContexts","immutableState","immutableAncestors","immutableDescendants","inReplyToIdOfId","repliesOfId","siblings","sibling","mounted","sensitive","in_reply_to","is_composing","is_submitting","is_changing_upload","is_uploading","isUploadingThumbnail","thumbnailProgress","media_attachments","pending_media_attachments","suggestion_token","default_privacy","default_sensitive","default_language","floor","idempotencyKey","tagHistory","media_modal","dirty","initialPoll","expires_in","clearAll","domParser","DOMParser","expiresInFromExpiresAt","expires_at","delta","getTime","now","mergeLocalHashtagResults","prefix","localTags","submitted","accept_content_types","lastReadId","readMarkerId","isTabVisible","browserPermission","notificationToMap","created_at","filterNotifications","clearUnread","lastNotification","updateVisibility","shouldCountUnreadNotifications","ignoreScroll","isOnTop","isMounted","lastItem","findLast","lastItemReached","recountUnread","last_read_id","mutable","isChanged","normalizeFilter","normalizedFilter","keywords","is","old","mergeWith","old_value","new_value","normalizeFilters","conversationToMap","filterConversations","idx","sortAnnouncements","sortBy","updateAnnouncement","mergeDeep","unshift","initialHistory","reducers","updateReactionCount","announcement_id","dropdown_menu","merge","timelines","TIMELINE_LOAD_PENDING","TIMELINE_EXPAND_REQUEST","TIMELINE_EXPAND_FAIL","TIMELINE_EXPAND_SUCCESS","expandNormalizedTimeline","isPartial","mMap","oldIds","newIds","lastIndex","findLastIndex","last","firstIndex","insertedIds","olderIds","subtract","skip","partial","TIMELINE_UPDATE","updateTimeline","includesId","TIMELINE_DELETE","reblogOf","TIMELINE_CLEAR","clearTimeline","filterTimelines","filterTimeline","TIMELINE_SCROLL_TOP","updateTop","TIMELINE_CONNECT","reconnectTimeline","TIMELINE_DISCONNECT","TIMELINE_MARK_AS_PARTIAL","ALERT_SHOW","message_values","ALERT_DISMISS","ALERT_CLEAR","loadingBar","loadingBarReducer","modal","MODAL_OPEN","pushModal","modalProps","MODAL_CLOSE","COMPOSE_UPLOAD_CHANGE_SUCCESS","user_lists","REBLOGS_FETCH_SUCCESS","FAVOURITES_FETCH_SUCCESS","normalizeFollowRequest","domain_lists","status_lists","FAVOURITE_SUCCESS","UNFAVOURITE_SUCCESS","BOOKMARK_SUCCESS","UNBOOKMARK_SUCCESS","PIN_SUCCESS","UNPIN_SUCCESS","normalizeAccounts","accounts_counters","num","accounts_map","STATUS_IMPORT","STATUSES_IMPORT","importStatuses","FAVOURITE_REQUEST","FAVOURITE_FAIL","BOOKMARK_REQUEST","BOOKMARK_FAIL","REBLOG_REQUEST","REBLOG_FAIL","REACTION_UPDATE","status_id","REACTION_ADD_REQUEST","REACTION_REMOVE_FAIL","n","REACTION_REMOVE_REQUEST","REACTION_ADD_FAIL","deleteIn","normalizeRelationships","settings","hydrate","val","SETTING_CHANGE","newIndex","newColumns","EMOJI_USE","updateFrequentEmojis","updateFrequentLanguages","SETTING_SAVE","push_notifications","push_subscription","Number","boosts","BOOSTS_INIT_MODAL","BOOSTS_CHANGE_PRIVACY","contexts","filterContexts","ownedStatusIds","addReply","in_reply_to_id","has","insert","updateContext","normalizeContext","compose","hydratedState","COMPOSE_MOUNT","COMPOSE_UNMOUNT","COMPOSE_SENSITIVITY_CHANGE","COMPOSE_SPOILERNESS_CHANGE","COMPOSE_SPOILER_TEXT_CHANGE","COMPOSE_VISIBILITY_CHANGE","COMPOSE_CHANGE","COMPOSE_COMPOSING_CHANGE","COMPOSE_REPLY","statusToTextMentions","privacyPreference","order","COMPOSE_SUBMIT_REQUEST","COMPOSE_UPLOAD_CHANGE_REQUEST","COMPOSE_REPLY_CANCEL","COMPOSE_RESET","COMPOSE_SUBMIT_SUCCESS","COMPOSE_SUBMIT_FAIL","COMPOSE_UPLOAD_CHANGE_FAIL","COMPOSE_UPLOAD_REQUEST","COMPOSE_UPLOAD_PROCESSING","COMPOSE_UPLOAD_SUCCESS","file","prevSize","appendMedia","COMPOSE_UPLOAD_FAIL","COMPOSE_UPLOAD_UNDO","mediaId","removeMedia","media_id","COMPOSE_UPLOAD_PROGRESS","round","THUMBNAIL_UPLOAD_REQUEST","THUMBNAIL_UPLOAD_PROGRESS","THUMBNAIL_UPLOAD_FAIL","THUMBNAIL_UPLOAD_SUCCESS","INIT_MEDIA_EDIT_MODAL","COMPOSE_CHANGE_MEDIA_DESCRIPTION","COMPOSE_CHANGE_MEDIA_FOCUS","COMPOSE_MENTION","COMPOSE_DIRECT","COMPOSE_SUGGESTIONS_CLEAR","COMPOSE_SUGGESTIONS_READY","normalizeSuggestions","sortHashtagsByUse","personalHistory","sorted","t","lowerName","usedA","usedB","COMPOSE_SUGGESTION_SELECT","insertSuggestion","completion","oldText","COMPOSE_SUGGESTION_IGNORE","ignoreSuggestion","COMPOSE_SUGGESTION_TAGS_UPDATE","updateSuggestionTags","COMPOSE_TAG_HISTORY_UPDATE","COMPOSE_EMOJI_INSERT","insertEmoji","emojiData","attached","fragment","parseFromString","innerHTML","expandMentions","COMPOSE_SET_STATUS","COMPOSE_POLL_ADD","COMPOSE_POLL_REMOVE","COMPOSE_POLL_OPTION_ADD","COMPOSE_POLL_OPTION_CHANGE","COMPOSE_POLL_OPTION_REMOVE","COMPOSE_POLL_SETTINGS_CHANGE","COMPOSE_LANGUAGE_CHANGE","MARKERS_FETCH_SUCCESS","markers","updateMounted","nbLoading","normalizeNotification","expandNormalizedNotifications","newItems","oldItems","idsToCheck","toSet","insertedItems","olderItems","mostRecent","muting_notifications","deleteByStatus","deletedUnread","height_cache","ConvertToImmutable","emojiSearch","normalizeLists","listEditor","listAdder","FILTERS_IMPORT","expandNormalizedConversations","oldItem","newItemIndex","newItem","updateConversation","polls","POLLS_IMPORT","importPolls","missed_updates","MARKERS_SUBMIT_SUCCESS","picture_in_picture","original","combineReducers","defaultTypeSuffixes","createAudio","sources","audio","source","createStore","appReducer","applyMiddleware","thunk","config","promiseTypeSuffixes","PENDING","FULFILLED","REJECTED","isPending","isFulfilled","isRejected","showLoading","hideLoading","loadingBarMiddleware","isFail","soundCache","boop","paused","pause","fastSeek","play","soundsMiddleware","__REDUX_DEVTOOLS_EXTENSION__","f","retry","BundleModalError","ModalLoading","ActionsModal","renderAction","array","VideoModal","onChangeBackgroundColor","getAverageFromBlurhash","preview","frameRate","startTime","defaultVolume","onCloseVideo","detailed","withOpenButton","cancel_reblog","BoostModal","onChangeBoostPrivacy","changeBoostPrivacy","handleReblog","onReblog","_findContainer","getElementsByClassName","buttonText","visibilityIcon","RelativeTimestamp","combo","AudioModal","accountStaticAvatar","ConfirmationModal","handleSecondary","onSecondary","handleCancel","apply","applying","chooseImage","discardMessage","discardConfirm","ImageLoader","image","FocalPointModal","onSave","changeUploadCompose","toFixed","onChangeDescription","onChangeMediaDescription","onChangeFocus","onChangeMediaFocus","onSelectThumbnail","uploadThumbnail","withRef","_dec2","_this","dragging","ocrStatus","handleMouseMove","updatePosition","handleTouchStart","handleTouchEnd","getPointerPosition","getCloseConfirmationMessage","handleTextDetection","_detectText","refreshCache","detecting","fetchTesseract","createWorker","worker","workerPath","tesseractWorkerPath","corePath","tesseractCorePath","langPath","logger","cacheMethod","media_url","URL","createObjectURL","loadLanguage","initialize","recognize","terminate","handleThumbnailChange","setFileInputRef","fileInput","handleFileInputClick","focals","thumbnailable","descriptionLabel","ocrMessage","maxWidth","htmlFor","onTouchStart","GIFV","ratio","previewWidth","backgroundSize","editable","ImageModal","navigationHidden","toggleNavigation","prevState","navigationClassName","MODAL_COMPONENTS","MEDIA","MediaModal","VIDEO","AUDIO","IMAGE","BOOST","CONFIRM","ACTIONS","FOCAL_POINT","ModalRoot","setBackgroundColor","modalId","_this$_modal","_this$_modal$getWrapp","_this$_modal$getWrapp2","_modal","getWrappedInstance","call","setModalRef","getSnapshotBeforeUpdate","visible","marginRight","getScrollbarWidth","Base","confirmationMessage"],"mappings":"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","file":"js/336-9a03923ed6f5d19fb4d6.chunk.js","sourcesContent":["// Handles browser quirks, based on\n// https://developer.mozilla.org/en-US/docs/Web/API/Notifications_API/Using_the_Notifications_API\n\nconst checkNotificationPromise = () => {\n  try {\n    // eslint-disable-next-line promise/catch-or-return, promise/valid-params\n    Notification.requestPermission().then();\n  } catch(e) {\n    return false;\n  }\n\n  return true;\n};\n\nconst handlePermission = (permission, callback) => {\n  // Whatever the user answers, we make sure Chrome stores the information\n  if(!('permission' in Notification)) {\n    Notification.permission = permission;\n  }\n\n  callback(Notification.permission);\n};\n\nexport const requestNotificationPermission = (callback) => {\n  if (checkNotificationPromise()) {\n    Notification.requestPermission().then((permission) => handlePermission(permission, callback)).catch(console.warn);\n  } else {\n    Notification.requestPermission((permission) => handlePermission(permission, callback));\n  }\n};\n","import api, { getLinks } from '../api';\nimport IntlMessageFormat from 'intl-messageformat';\nimport { fetchFollowRequests, fetchRelationships } from './accounts';\nimport {\n  importFetchedAccount,\n  importFetchedAccounts,\n  importFetchedStatus,\n  importFetchedStatuses,\n} from './importer';\nimport { submitMarkers } from './markers';\nimport { saveSettings } from './settings';\nimport { defineMessages } from 'react-intl';\nimport { List as ImmutableList } from 'immutable';\nimport { unescapeHTML } from '../utils/html';\nimport { usePendingItems as preferPendingItems } from 'mastodon/initial_state';\nimport compareId from 'mastodon/compare_id';\nimport { requestNotificationPermission } from '../utils/notifications';\n\nexport const NOTIFICATIONS_UPDATE      = 'NOTIFICATIONS_UPDATE';\nexport const NOTIFICATIONS_UPDATE_NOOP = 'NOTIFICATIONS_UPDATE_NOOP';\n\nexport const NOTIFICATIONS_EXPAND_REQUEST = 'NOTIFICATIONS_EXPAND_REQUEST';\nexport const NOTIFICATIONS_EXPAND_SUCCESS = 'NOTIFICATIONS_EXPAND_SUCCESS';\nexport const NOTIFICATIONS_EXPAND_FAIL    = 'NOTIFICATIONS_EXPAND_FAIL';\n\nexport const NOTIFICATIONS_FILTER_SET = 'NOTIFICATIONS_FILTER_SET';\n\nexport const NOTIFICATIONS_CLEAR        = 'NOTIFICATIONS_CLEAR';\nexport const NOTIFICATIONS_SCROLL_TOP   = 'NOTIFICATIONS_SCROLL_TOP';\nexport const NOTIFICATIONS_LOAD_PENDING = 'NOTIFICATIONS_LOAD_PENDING';\n\nexport const NOTIFICATIONS_MOUNT   = 'NOTIFICATIONS_MOUNT';\nexport const NOTIFICATIONS_UNMOUNT = 'NOTIFICATIONS_UNMOUNT';\n\nexport const NOTIFICATIONS_MARK_AS_READ = 'NOTIFICATIONS_MARK_AS_READ';\n\nexport const NOTIFICATIONS_SET_BROWSER_SUPPORT    = 'NOTIFICATIONS_SET_BROWSER_SUPPORT';\nexport const NOTIFICATIONS_SET_BROWSER_PERMISSION = 'NOTIFICATIONS_SET_BROWSER_PERMISSION';\n\ndefineMessages({\n  mention: { id: 'notification.mention', defaultMessage: '{name} mentioned you' },\n  group: { id: 'notifications.group', defaultMessage: '{count} notifications' },\n});\n\nconst fetchRelatedRelationships = (dispatch, notifications) => {\n  const accountIds = notifications.filter(item => ['follow', 'follow_request', 'admin.sign_up'].indexOf(item.type) !== -1).map(item => item.account.id);\n\n  if (accountIds.length > 0) {\n    dispatch(fetchRelationships(accountIds));\n  }\n};\n\nexport const loadPending = () => ({\n  type: NOTIFICATIONS_LOAD_PENDING,\n});\n\nexport function updateNotifications(notification, intlMessages, intlLocale) {\n  return (dispatch, getState) => {\n    const activeFilter = getState().getIn(['settings', 'notifications', 'quickFilter', 'active']);\n    const showInColumn = activeFilter === 'all' ? getState().getIn(['settings', 'notifications', 'shows', notification.type], true) : activeFilter === notification.type;\n    const showAlert    = getState().getIn(['settings', 'notifications', 'alerts', notification.type], true);\n    const playSound    = getState().getIn(['settings', 'notifications', 'sounds', notification.type], true);\n\n    let filtered = false;\n\n    if (['mention', 'status'].includes(notification.type) && notification.status.filtered) {\n      const filters = notification.status.filtered.filter(result => result.filter.context.includes('notifications'));\n\n      if (filters.some(result => result.filter.filter_action === 'hide')) {\n        return;\n      }\n\n      filtered = filters.length > 0;\n    }\n\n    if (['follow_request'].includes(notification.type)) {\n      dispatch(fetchFollowRequests());\n    }\n\n    dispatch(submitMarkers());\n\n    if (showInColumn) {\n      dispatch(importFetchedAccount(notification.account));\n\n      if (notification.status) {\n        dispatch(importFetchedStatus(notification.status));\n      }\n\n      if (notification.report) {\n        dispatch(importFetchedAccount(notification.report.target_account));\n      }\n\n      dispatch({\n        type: NOTIFICATIONS_UPDATE,\n        notification,\n        usePendingItems: preferPendingItems,\n        meta: (playSound && !filtered) ? { sound: 'boop' } : undefined,\n      });\n\n      fetchRelatedRelationships(dispatch, [notification]);\n    } else if (playSound && !filtered) {\n      dispatch({\n        type: NOTIFICATIONS_UPDATE_NOOP,\n        meta: { sound: 'boop' },\n      });\n    }\n\n    // Desktop notifications\n    if (typeof window.Notification !== 'undefined' && showAlert && !filtered) {\n      const title = new IntlMessageFormat(intlMessages[`notification.${notification.type}`], intlLocale).format({ name: notification.account.display_name.length > 0 ? notification.account.display_name : notification.account.username });\n      const body  = (notification.status && notification.status.spoiler_text.length > 0) ? notification.status.spoiler_text : unescapeHTML(notification.status ? notification.status.content : '');\n\n      const notify = new Notification(title, { body, icon: notification.account.avatar, tag: notification.id });\n\n      notify.addEventListener('click', () => {\n        window.focus();\n        notify.close();\n      });\n    }\n  };\n}\n\nconst excludeTypesFromSettings = state => state.getIn(['settings', 'notifications', 'shows']).filter(enabled => !enabled).keySeq().toJS();\n\nconst excludeTypesFromFilter = filter => {\n  const allTypes = ImmutableList([\n    'follow',\n    'follow_request',\n    'favourite',\n    'reaction',\n    'reblog',\n    'mention',\n    'poll',\n    'status',\n    'update',\n    'admin.sign_up',\n    'admin.report',\n  ]);\n\n  return allTypes.filterNot(item => item === filter).toJS();\n};\n\nconst noOp = () => {};\n\nlet expandNotificationsController = new AbortController();\n\nexport function expandNotifications({ maxId, forceLoad } = {}, done = noOp) {\n  return (dispatch, getState) => {\n    const activeFilter = getState().getIn(['settings', 'notifications', 'quickFilter', 'active']);\n    const notifications = getState().get('notifications');\n    const isLoadingMore = !!maxId;\n\n    if (notifications.get('isLoading')) {\n      if (forceLoad) {\n        expandNotificationsController.abort();\n        expandNotificationsController = new AbortController();\n      } else {\n        done();\n        return;\n      }\n    }\n\n    const params = {\n      max_id: maxId,\n      exclude_types: activeFilter === 'all'\n        ? excludeTypesFromSettings(getState())\n        : excludeTypesFromFilter(activeFilter),\n    };\n\n    if (!params.max_id && (notifications.get('items', ImmutableList()).size + notifications.get('pendingItems', ImmutableList()).size) > 0) {\n      const a = notifications.getIn(['pendingItems', 0, 'id']);\n      const b = notifications.getIn(['items', 0, 'id']);\n\n      if (a && b && compareId(a, b) > 0) {\n        params.since_id = a;\n      } else {\n        params.since_id = b || a;\n      }\n    }\n\n    const isLoadingRecent = !!params.since_id;\n\n    dispatch(expandNotificationsRequest(isLoadingMore));\n\n    api(getState).get('/api/v1/notifications', { params, signal: expandNotificationsController.signal }).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n\n      dispatch(importFetchedAccounts(response.data.map(item => item.account)));\n      dispatch(importFetchedStatuses(response.data.map(item => item.status).filter(status => !!status)));\n      dispatch(importFetchedAccounts(response.data.filter(item => item.report).map(item => item.report.target_account)));\n\n      dispatch(expandNotificationsSuccess(response.data, next ? next.uri : null, isLoadingMore, isLoadingRecent, isLoadingRecent && preferPendingItems));\n      fetchRelatedRelationships(dispatch, response.data);\n      dispatch(submitMarkers());\n    }).catch(error => {\n      dispatch(expandNotificationsFail(error, isLoadingMore));\n    }).finally(() => {\n      done();\n    });\n  };\n}\n\nexport function expandNotificationsRequest(isLoadingMore) {\n  return {\n    type: NOTIFICATIONS_EXPAND_REQUEST,\n    skipLoading: !isLoadingMore,\n  };\n}\n\nexport function expandNotificationsSuccess(notifications, next, isLoadingMore, isLoadingRecent, usePendingItems) {\n  return {\n    type: NOTIFICATIONS_EXPAND_SUCCESS,\n    notifications,\n    next,\n    isLoadingRecent: isLoadingRecent,\n    usePendingItems,\n    skipLoading: !isLoadingMore,\n  };\n}\n\nexport function expandNotificationsFail(error, isLoadingMore) {\n  return {\n    type: NOTIFICATIONS_EXPAND_FAIL,\n    error,\n    skipLoading: !isLoadingMore,\n    skipAlert: !isLoadingMore || error.name === 'AbortError',\n  };\n}\n\nexport function clearNotifications() {\n  return (dispatch, getState) => {\n    dispatch({\n      type: NOTIFICATIONS_CLEAR,\n    });\n\n    api(getState).post('/api/v1/notifications/clear');\n  };\n}\n\nexport function scrollTopNotifications(top) {\n  return {\n    type: NOTIFICATIONS_SCROLL_TOP,\n    top,\n  };\n}\n\nexport function setFilter (filterType) {\n  return dispatch => {\n    dispatch({\n      type: NOTIFICATIONS_FILTER_SET,\n      path: ['notifications', 'quickFilter', 'active'],\n      value: filterType,\n    });\n    dispatch(expandNotifications({ forceLoad: true }));\n    dispatch(saveSettings());\n  };\n}\n\nexport const mountNotifications = () => ({\n  type: NOTIFICATIONS_MOUNT,\n});\n\nexport const unmountNotifications = () => ({\n  type: NOTIFICATIONS_UNMOUNT,\n});\n\n\nexport const markNotificationsAsRead = () => ({\n  type: NOTIFICATIONS_MARK_AS_READ,\n});\n\n// Browser support\nexport function setupBrowserNotifications() {\n  return dispatch => {\n    dispatch(setBrowserSupport('Notification' in window));\n    if ('Notification' in window) {\n      dispatch(setBrowserPermission(Notification.permission));\n    }\n\n    if ('Notification' in window && 'permissions' in navigator) {\n      navigator.permissions.query({ name: 'notifications' }).then((status) => {\n        status.onchange = () => dispatch(setBrowserPermission(Notification.permission));\n      }).catch(console.warn);\n    }\n  };\n}\n\nexport function requestBrowserPermission(callback = noOp) {\n  return dispatch => {\n    requestNotificationPermission((permission) => {\n      dispatch(setBrowserPermission(permission));\n      callback(permission);\n    });\n  };\n}\n\nexport function setBrowserSupport (value) {\n  return {\n    type: NOTIFICATIONS_SET_BROWSER_SUPPORT,\n    value,\n  };\n}\n\nexport function setBrowserPermission (value) {\n  return {\n    type: NOTIFICATIONS_SET_BROWSER_PERMISSION,\n    value,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Column from '../../../components/column';\nimport ColumnHeader from '../../../components/column_header';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class ColumnLoading extends ImmutablePureComponent {\n\n  static propTypes = {\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),\n    icon: PropTypes.string,\n    multiColumn: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    title: '',\n    icon: '',\n  };\n\n  render() {\n    let { title, icon, multiColumn } = this.props;\n\n    return (\n      <Column>\n        <ColumnHeader icon={icon} title={title} multiColumn={multiColumn} focusable={false} placeholder />\n        <div className='scrollable' />\n      </Column>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Column from 'mastodon/components/column';\nimport Button from 'mastodon/components/button';\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { autoPlayGif } from 'mastodon/initial_state';\n\nclass GIF extends React.PureComponent {\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    staticSrc: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    animate: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    animate: autoPlayGif,\n  };\n\n  state = {\n    hovering: false,\n  };\n\n  handleMouseEnter = () => {\n    const { animate } = this.props;\n\n    if (!animate) {\n      this.setState({ hovering: true });\n    }\n  };\n\n  handleMouseLeave = () => {\n    const { animate } = this.props;\n\n    if (!animate) {\n      this.setState({ hovering: false });\n    }\n  };\n\n  render () {\n    const { src, staticSrc, className, animate } = this.props;\n    const { hovering } = this.state;\n\n    return (\n      <img\n        className={className}\n        src={(hovering || animate) ? src : staticSrc}\n        alt=''\n        role='presentation'\n        onMouseEnter={this.handleMouseEnter}\n        onMouseLeave={this.handleMouseLeave}\n      />\n    );\n  }\n\n}\n\nclass CopyButton extends React.PureComponent {\n\n  static propTypes = {\n    children: PropTypes.node.isRequired,\n    value: PropTypes.string.isRequired,\n  };\n\n  state = {\n    copied: false,\n  };\n\n  handleClick = () => {\n    const { value } = this.props;\n    navigator.clipboard.writeText(value);\n    this.setState({ copied: true });\n    this.timeout = setTimeout(() => this.setState({ copied: false }), 700);\n  };\n\n  componentWillUnmount () {\n    if (this.timeout) clearTimeout(this.timeout);\n  }\n\n  render () {\n    const { children } = this.props;\n    const { copied } = this.state;\n\n    return (\n      <Button onClick={this.handleClick} className={copied ? 'copied' : 'copyable'}>{copied ? <FormattedMessage id='copypaste.copied' defaultMessage='Copied' /> : children}</Button>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass BundleColumnError extends React.PureComponent {\n\n  static propTypes = {\n    errorType: PropTypes.oneOf(['routing', 'network', 'error']),\n    onRetry: PropTypes.func,\n    intl: PropTypes.object.isRequired,\n    multiColumn: PropTypes.bool,\n    stacktrace: PropTypes.string,\n  };\n\n  static defaultProps = {\n    errorType: 'routing',\n  };\n\n  handleRetry = () => {\n    const { onRetry } = this.props;\n\n    if (onRetry) {\n      onRetry();\n    }\n  };\n\n  render () {\n    const { errorType, multiColumn, stacktrace } = this.props;\n\n    let title, body;\n\n    switch(errorType) {\n    case 'routing':\n      title = <FormattedMessage id='bundle_column_error.routing.title' defaultMessage='404' />;\n      body = <FormattedMessage id='bundle_column_error.routing.body' defaultMessage='The requested page could not be found. Are you sure the URL in the address bar is correct?' />;\n      break;\n    case 'network':\n      title = <FormattedMessage id='bundle_column_error.network.title' defaultMessage='Network error' />;\n      body = <FormattedMessage id='bundle_column_error.network.body' defaultMessage='There was an error when trying to load this page. This could be due to a temporary problem with your internet connection or this server.' />;\n      break;\n    case 'error':\n      title = <FormattedMessage id='bundle_column_error.error.title' defaultMessage='Oh, no!' />;\n      body = <FormattedMessage id='bundle_column_error.error.body' defaultMessage='The requested page could not be rendered. It could be due to a bug in our code, or a browser compatibility issue.' />;\n      break;\n    }\n\n    return (\n      <Column bindToDocument={!multiColumn}>\n        <div className='error-column'>\n          <GIF src='/oops.gif' staticSrc='/oops.png' className='error-column__image' />\n\n          <div className='error-column__message'>\n            <h1>{title}</h1>\n            <p>{body}</p>\n\n            <div className='error-column__message__actions'>\n              {errorType === 'network' && <Button onClick={this.handleRetry}><FormattedMessage id='bundle_column_error.retry' defaultMessage='Try again' /></Button>}\n              {errorType === 'error' && <CopyButton value={stacktrace}><FormattedMessage id='bundle_column_error.copy_stacktrace' defaultMessage='Copy error report' /></CopyButton>}\n              <Link to='/' className={classNames('button', { 'button-tertiary': errorType !== 'routing' })}><FormattedMessage id='bundle_column_error.return' defaultMessage='Go back home' /></Link>\n            </div>\n          </div>\n        </div>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Switch, Route } from 'react-router-dom';\nimport StackTrace from 'stacktrace-js';\nimport ColumnLoading from '../components/column_loading';\nimport BundleColumnError from '../components/bundle_column_error';\nimport BundleContainer from '../containers/bundle_container';\n\n// Small wrapper to pass multiColumn to the route components\nexport class WrappedSwitch extends React.PureComponent {\n\n  render () {\n    const { multiColumn, children } = this.props;\n\n    return (\n      <Switch>\n        {React.Children.map(children, child => React.cloneElement(child, { multiColumn }))}\n      </Switch>\n    );\n  }\n\n}\n\nWrappedSwitch.propTypes = {\n  multiColumn: PropTypes.bool,\n  children: PropTypes.node,\n};\n\n// Small Wrapper to extract the params from the route and pass\n// them to the rendered component, together with the content to\n// be rendered inside (the children)\nexport class WrappedRoute extends React.Component {\n\n  static propTypes = {\n    component: PropTypes.func.isRequired,\n    content: PropTypes.node,\n    multiColumn: PropTypes.bool,\n    componentParams: PropTypes.object,\n  };\n\n  static defaultProps = {\n    componentParams: {},\n  };\n\n  static getDerivedStateFromError () {\n    return {\n      hasError: true,\n    };\n  }\n\n  state = {\n    hasError: false,\n    stacktrace: '',\n  };\n\n  componentDidCatch (error) {\n    StackTrace.fromError(error).then(stackframes => {\n      this.setState({ stacktrace: error.toString() + '\\n' + stackframes.map(frame => frame.toString()).join('\\n') });\n    }).catch(err => {\n      console.error(err);\n    });\n  }\n\n  renderComponent = ({ match }) => {\n    const { component, content, multiColumn, componentParams } = this.props;\n    const { hasError, stacktrace } = this.state;\n\n    if (hasError) {\n      return (\n        <BundleColumnError\n          stacktrace={stacktrace}\n          multiColumn={multiColumn}\n          errorType='error'\n        />\n      );\n    }\n\n    return (\n      <BundleContainer fetchComponent={component} loading={this.renderLoading} error={this.renderError}>\n        {Component => <Component params={match.params} multiColumn={multiColumn} {...componentParams}>{content}</Component>}\n      </BundleContainer>\n    );\n  };\n\n  renderLoading = () => {\n    const { multiColumn } = this.props;\n\n    return <ColumnLoading multiColumn={multiColumn} />;\n  };\n\n  renderError = (props) => {\n    return <BundleColumnError {...props} errorType='network' />;\n  };\n\n  render () {\n    const { component: Component, content, ...rest } = this.props;\n\n    return <Route {...rest} render={this.renderComponent} />;\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class UploadArea extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    onClose: PropTypes.func,\n  };\n\n  handleKeyUp = (e) => {\n    const keyCode = e.keyCode;\n    if (this.props.active) {\n      switch(keyCode) {\n      case 27:\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onClose();\n        break;\n      }\n    }\n  };\n\n  componentDidMount () {\n    window.addEventListener('keyup', this.handleKeyUp, false);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('keyup', this.handleKeyUp);\n  }\n\n  render () {\n    const { active } = this.props;\n\n    return (\n      <Motion defaultStyle={{ backgroundOpacity: 0, backgroundScale: 0.95 }} style={{ backgroundOpacity: spring(active ? 1 : 0, { stiffness: 150, damping: 15 }), backgroundScale: spring(active ? 1 : 0.95, { stiffness: 200, damping: 3 }) }}>\n        {({ backgroundOpacity, backgroundScale }) => (\n          <div className='upload-area' style={{ visibility: active ? 'visible' : 'hidden', opacity: backgroundOpacity }}>\n            <div className='upload-area__drop'>\n              <div className='upload-area__background' style={{ transform: `scale(${backgroundScale})` }} />\n              <div className='upload-area__content'><FormattedMessage id='upload_area.title' defaultMessage='Drag & drop to upload' /></div>\n            </div>\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n","import React from 'react';\n\nconst DrawerLoading = () => (\n  <div className='drawer'>\n    <div className='drawer__pager'>\n      <div className='drawer__inner' />\n    </div>\n  </div>\n);\n\nexport default DrawerLoading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { fetchServer } from 'mastodon/actions/server';\nimport ShortNumber from 'mastodon/components/short_number';\nimport Skeleton from 'mastodon/components/skeleton';\nimport Account from 'mastodon/containers/account_container';\nimport { domain } from 'mastodon/initial_state';\nimport Image from 'mastodon/components/image';\nimport { Link } from 'react-router-dom';\n\nconst messages = defineMessages({\n  aboutActiveUsers: { id: 'server_banner.about_active_users', defaultMessage: 'People using this server during the last 30 days (Monthly Active Users)' },\n});\n\nconst mapStateToProps = state => ({\n  server: state.getIn(['server', 'server']),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass ServerBanner extends React.PureComponent {\n\n  static propTypes = {\n    server: PropTypes.object,\n    dispatch: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(fetchServer());\n  }\n\n  render () {\n    const { server, intl } = this.props;\n    const isLoading = server.get('isLoading');\n\n    return (\n      <div className='server-banner'>\n        <div className='server-banner__introduction'>\n          <FormattedMessage id='server_banner.introduction' defaultMessage='{domain} is part of the decentralized social network powered by {mastodon}.' values={{ domain: <strong>{domain}</strong>, mastodon: <a href='https://joinmastodon.org' target='_blank'>Mastodon</a> }} />\n        </div>\n\n        <Image blurhash={server.getIn(['thumbnail', 'blurhash'])} src={server.getIn(['thumbnail', 'url'])} className='server-banner__hero' />\n\n        <div className='server-banner__description'>\n          {isLoading ? (\n            <>\n              <Skeleton width='100%' />\n              <br />\n              <Skeleton width='100%' />\n              <br />\n              <Skeleton width='70%' />\n            </>\n          ) : server.get('description')}\n        </div>\n\n        <div className='server-banner__meta'>\n          <div className='server-banner__meta__column'>\n            <h4><FormattedMessage id='server_banner.administered_by' defaultMessage='Administered by:' /></h4>\n\n            <Account id={server.getIn(['contact', 'account', 'id'])} size={36} />\n          </div>\n\n          <div className='server-banner__meta__column'>\n            <h4><FormattedMessage id='server_banner.server_stats' defaultMessage='Server stats:' /></h4>\n\n            {isLoading ? (\n              <>\n                <strong className='server-banner__number'><Skeleton width='10ch' /></strong>\n                <br />\n                <span className='server-banner__number-label'><Skeleton width='5ch' /></span>\n              </>\n            ) : (\n              <>\n                <strong className='server-banner__number'><ShortNumber value={server.getIn(['usage', 'users', 'active_month'])} /></strong>\n                <br />\n                <span className='server-banner__number-label' title={intl.formatMessage(messages.aboutActiveUsers)}><FormattedMessage id='server_banner.active_users' defaultMessage='active users' /></span>\n              </>\n            )}\n          </div>\n        </div>\n\n        <hr className='spacer' />\n\n        <Link className='button button--block button-secondary' to='/about'><FormattedMessage id='server_banner.learn_more' defaultMessage='Learn more' /></Link>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport SearchContainer from 'mastodon/features/compose/containers/search_container';\nimport ComposeFormContainer from 'mastodon/features/compose/containers/compose_form_container';\nimport NavigationContainer from 'mastodon/features/compose/containers/navigation_container';\nimport LinkFooter from './link_footer';\nimport ServerBanner from 'mastodon/components/server_banner';\nimport { changeComposing, mountCompose, unmountCompose } from 'mastodon/actions/compose';\n\nexport default @connect()\nclass ComposePanel extends React.PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  onFocus = () => {\n    const { dispatch } = this.props;\n    dispatch(changeComposing(true));\n  };\n\n  onBlur = () => {\n    const { dispatch } = this.props;\n    dispatch(changeComposing(false));\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  render() {\n    const { signedIn } = this.context.identity;\n\n    return (\n      <div className='compose-panel' onFocus={this.onFocus}>\n        <SearchContainer openInRoute />\n\n        {!signedIn && (\n          <React.Fragment>\n            <ServerBanner />\n            <div className='flex-spacer' />\n          </React.Fragment>\n        )}\n\n        {signedIn && (\n          <React.Fragment>\n            <NavigationContainer onClose={this.onBlur} />\n            <ComposeFormContainer singleColumn />\n          </React.Fragment>\n        )}\n\n        <LinkFooter />\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\n\nconst Logo = () => (\n  <svg viewBox='0 0 261 66' className='logo' role='img'>\n    <title>Mastodon</title>\n    <use xlinkHref='#logo-symbol-wordmark' />\n  </svg>\n);\n\nexport default Logo;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport { disabledAccountId, movedToAccountId, domain } from 'mastodon/initial_state';\nimport { openModal } from 'mastodon/actions/modal';\nimport { logOut } from 'mastodon/utils/log_out';\n\nconst messages = defineMessages({\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state) => ({\n  disabledAcct: state.getIn(['accounts', disabledAccountId, 'acct']),\n  movedToAcct: movedToAccountId ? state.getIn(['accounts', movedToAccountId, 'acct']) : undefined,\n});\n\nconst mapDispatchToProps = (dispatch, { intl }) => ({\n  onLogout () {\n    dispatch(openModal('CONFIRM', {\n      message: intl.formatMessage(messages.logoutMessage),\n      confirm: intl.formatMessage(messages.logoutConfirm),\n      closeWhenConfirm: false,\n      onConfirm: () => logOut(),\n    }));\n  },\n});\n\nexport default @injectIntl\n@connect(mapStateToProps, mapDispatchToProps)\nclass DisabledAccountBanner extends React.PureComponent {\n\n  static propTypes = {\n    disabledAcct: PropTypes.string.isRequired,\n    movedToAcct: PropTypes.string,\n    onLogout: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleLogOutClick = e => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.props.onLogout();\n\n    return false;\n  };\n\n  render () {\n    const { disabledAcct, movedToAcct } = this.props;\n\n    const disabledAccountLink = (\n      <Link to={`/@${disabledAcct}`}>\n        {disabledAcct}@{domain}\n      </Link>\n    );\n\n    return (\n      <div className='sign-in-banner'>\n        <p>\n          {movedToAcct ? (\n            <FormattedMessage\n              id='moved_to_account_banner.text'\n              defaultMessage='Your account {disabledAccount} is currently disabled because you moved to {movedToAccount}.'\n              values={{\n                disabledAccount: disabledAccountLink,\n                movedToAccount: <Link to={`/@${movedToAcct}`}>{movedToAcct.includes('@') ? movedToAcct : `${movedToAcct}@${domain}`}</Link>,\n              }}\n            />\n          ) : (\n            <FormattedMessage\n              id='disabled_account_banner.text'\n              defaultMessage='Your account {disabledAccount} is currently disabled.'\n              values={{\n                disabledAccount: disabledAccountLink,\n              }}\n            />\n          )}\n        </p>\n        <a href='/auth/edit' className='button button--block'>\n          <FormattedMessage id='disabled_account_banner.account_settings' defaultMessage='Account settings' />\n        </a>\n        <button type='button' className='button button--block button-tertiary' onClick={this.handleLogOutClick}>\n          <FormattedMessage id='confirmations.logout.confirm' defaultMessage='Log out' />\n        </button>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchFollowRequests } from 'mastodon/actions/accounts';\nimport { connect } from 'react-redux';\nimport ColumnLink from 'mastodon/features/ui/components/column_link';\nimport IconWithBadge from 'mastodon/components/icon_with_badge';\nimport { List as ImmutableList } from 'immutable';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  text: { id: 'navigation_bar.follow_requests', defaultMessage: 'Follow requests' },\n});\n\nconst mapStateToProps = state => ({\n  count: state.getIn(['user_lists', 'follow_requests', 'items'], ImmutableList()).size,\n});\n\nexport default @injectIntl\n@connect(mapStateToProps)\nclass FollowRequestsColumnLink extends React.Component {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    count: PropTypes.number.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n\n    dispatch(fetchFollowRequests());\n  }\n\n  render () {\n    const { count, intl } = this.props;\n\n    if (count === 0) {\n      return null;\n    }\n\n    return (\n      <ColumnLink\n        transparent\n        to='/follow_requests'\n        icon={<IconWithBadge className='column-link__icon' id='user-plus' count={count} />}\n        text={intl.formatMessage(messages.text)}\n      />\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { createSelector } from 'reselect';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { fetchLists } from 'mastodon/actions/lists';\nimport ColumnLink from './column_link';\n\nconst getOrderedLists = createSelector([state => state.get('lists')], lists => {\n  if (!lists) {\n    return lists;\n  }\n\n  return lists.toList().filter(item => !!item).sort((a, b) => a.get('title').localeCompare(b.get('title'))).take(4);\n});\n\nconst mapStateToProps = state => ({\n  lists: getOrderedLists(state),\n});\n\nexport default @withRouter\n@connect(mapStateToProps)\nclass ListPanel extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    lists: ImmutablePropTypes.list,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(fetchLists());\n  }\n\n  render () {\n    const { lists } = this.props;\n\n    if (!lists || lists.isEmpty()) {\n      return null;\n    }\n\n    return (\n      <div className='list-panel'>\n        <hr />\n\n        {lists.map(list => (\n          <ColumnLink icon='list-ul' key={list.get('id')} strict text={list.get('title')} to={`/lists/${list.get('id')}`} transparent />\n        ))}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport IconWithBadge from 'mastodon/components/icon_with_badge';\n\nconst mapStateToProps = state => ({\n  count: state.getIn(['notifications', 'unread']),\n  id: 'bell',\n});\n\nexport default connect(mapStateToProps)(IconWithBadge);\n","import React, { useCallback } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { useDispatch } from 'react-redux';\nimport { registrationsOpen } from 'mastodon/initial_state';\nimport { openModal } from 'mastodon/actions/modal';\n\nconst SignInBanner = () => {\n  const dispatch = useDispatch();\n\n  const openClosedRegistrationsModal = useCallback(\n    () => dispatch(openModal('CLOSED_REGISTRATIONS')),\n    [dispatch],\n  );\n\n  let signupButton;\n\n  if (registrationsOpen) {\n    signupButton = (\n      <a href='/auth/sign_up' className='button button--block button-tertiary'>\n        <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n      </a>\n    );\n  } else {\n    signupButton = (\n      <button className='button button--block button-tertiary' onClick={openClosedRegistrationsModal}>\n        <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n      </button>\n    );\n  }\n\n  return (\n    <div className='sign-in-banner'>\n      <p><FormattedMessage id='sign_in_banner.text' defaultMessage='Sign in to follow profiles or hashtags, favourite, share and reply to posts. You can also interact from your account on a different server.' /></p>\n      <a href='/auth/sign_in' className='button button--block'><FormattedMessage id='sign_in_banner.sign_in' defaultMessage='Sign in' /></a>\n      {signupButton}\n    </div>\n  );\n};\n\nexport default SignInBanner;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Hashtag from 'mastodon/components/hashtag';\n\nconst messages = defineMessages({\n  lastStatusAt: { id: 'account.featured_tags.last_status_at', defaultMessage: 'Last post on {date}' },\n  empty: { id: 'account.featured_tags.last_status_never', defaultMessage: 'No posts' },\n});\n\nexport default @injectIntl\nclass FeaturedTags extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    account: ImmutablePropTypes.map,\n    featuredTags: ImmutablePropTypes.list,\n    tagged: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { account, featuredTags, intl } = this.props;\n\n    if (!account || account.get('suspended') || featuredTags.isEmpty()) {\n      return null;\n    }\n\n    return (\n      <div className='getting-started__trends'>\n        <h4><FormattedMessage id='account.featured_tags.title' defaultMessage=\"{name}'s featured hashtags\" values={{ name: <bdi dangerouslySetInnerHTML={{ __html: account.get('display_name_html') }} /> }} /></h4>\n\n        {featuredTags.take(3).map(featuredTag => (\n          <Hashtag\n            key={featuredTag.get('name')}\n            name={featuredTag.get('name')}\n            to={`/@${account.get('acct')}/tagged/${featuredTag.get('name')}`}\n            uses={featuredTag.get('statuses_count') * 1}\n            withGraph={false}\n            description={((featuredTag.get('statuses_count') * 1) > 0) ? intl.formatMessage(messages.lastStatusAt, { date: intl.formatDate(featuredTag.get('last_status_at'), { month: 'short', day: '2-digit' }) }) : intl.formatMessage(messages.empty)}\n          />\n        ))}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport FeaturedTags from '../components/featured_tags';\nimport { makeGetAccount } from 'mastodon/selectors';\nimport { List as ImmutableList } from 'immutable';\n\nconst mapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  return (state, { accountId }) => ({\n    account: getAccount(state, accountId),\n    featuredTags: state.getIn(['user_lists', 'featured_tags', accountId, 'items'], ImmutableList()),\n  });\n};\n\nexport default connect(mapStateToProps)(FeaturedTags);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport FeaturedTags from 'mastodon/features/account/containers/featured_tags_container';\nimport { normalizeForLookup } from 'mastodon/reducers/accounts_map';\n\nconst mapStateToProps = (state, { match: { params: { acct } } }) => {\n  const accountId = state.getIn(['accounts_map', normalizeForLookup(acct)]);\n\n  if (!accountId) {\n    return {\n      isLoading: true,\n    };\n  }\n\n  return {\n    accountId,\n    isLoading: false,\n  };\n};\n\nexport default @connect(mapStateToProps)\nclass AccountNavigation extends React.PureComponent {\n\n  static propTypes = {\n    match: PropTypes.shape({\n      params: PropTypes.shape({\n        acct: PropTypes.string,\n        tagged: PropTypes.string,\n      }).isRequired,\n    }).isRequired,\n\n    accountId: PropTypes.string,\n    isLoading: PropTypes.bool,\n  };\n\n  render () {\n    const { accountId, isLoading, match: { params: { tagged } } } = this.props;\n\n    if (isLoading) {\n      return null;\n    }\n\n    return (\n      <>\n        <div className='flex-spacer' />\n        <FeaturedTags accountId={accountId} tagged={tagged} />\n      </>\n    );\n  }\n\n}\n","import React from 'react';\nimport { Switch, Route, withRouter } from 'react-router-dom';\nimport { showTrends } from 'mastodon/initial_state';\nimport Trends from 'mastodon/features/getting_started/containers/trends_container';\nimport AccountNavigation from 'mastodon/features/account/navigation';\n\nconst DefaultNavigation = () => (\n  <>\n    {showTrends && (\n      <>\n        <div className='flex-spacer' />\n        <Trends />\n      </>\n    )}\n  </>\n);\n\nexport default @withRouter\nclass NavigationPortal extends React.PureComponent {\n\n  render () {\n    return (\n      <Switch>\n        <Route path='/@:acct' exact component={AccountNavigation} />\n        <Route path='/@:acct/tagged/:tagged?' exact component={AccountNavigation} />\n        <Route path='/@:acct/with_replies' exact component={AccountNavigation} />\n        <Route path='/@:acct/followers' exact component={AccountNavigation} />\n        <Route path='/@:acct/following' exact component={AccountNavigation} />\n        <Route path='/@:acct/media' exact component={AccountNavigation} />\n        <Route component={DefaultNavigation} />\n      </Switch>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport Logo from 'mastodon/components/logo';\nimport { timelinePreview, showTrends } from 'mastodon/initial_state';\nimport ColumnLink from './column_link';\nimport DisabledAccountBanner from './disabled_account_banner';\nimport FollowRequestsColumnLink from './follow_requests_column_link';\nimport ListPanel from './list_panel';\nimport NotificationsCounterIcon from './notifications_counter_icon';\nimport SignInBanner from './sign_in_banner';\nimport NavigationPortal from 'mastodon/components/navigation_portal';\n\nconst messages = defineMessages({\n  home: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  explore: { id: 'explore.title', defaultMessage: 'Explore' },\n  local: { id: 'tabs_bar.local_timeline', defaultMessage: 'Local' },\n  federated: { id: 'tabs_bar.federated_timeline', defaultMessage: 'Federated' },\n  direct: { id: 'navigation_bar.direct', defaultMessage: 'Direct messages' },\n  favourites: { id: 'navigation_bar.favourites', defaultMessage: 'Favourites' },\n  bookmarks: { id: 'navigation_bar.bookmarks', defaultMessage: 'Bookmarks' },\n  lists: { id: 'navigation_bar.lists', defaultMessage: 'Lists' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  followsAndFollowers: { id: 'navigation_bar.follows_and_followers', defaultMessage: 'Follows and followers' },\n  about: { id: 'navigation_bar.about', defaultMessage: 'About' },\n  search: { id: 'navigation_bar.search', defaultMessage: 'Search' },\n});\n\nexport default @injectIntl\nclass NavigationPanel extends React.Component {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n    identity: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { intl } = this.props;\n    const { signedIn, disabledAccountId } = this.context.identity;\n\n    return (\n      <div className='navigation-panel'>\n        <div className='navigation-panel__logo'>\n          <Link to='/' className='column-link column-link--logo'><Logo /></Link>\n          <hr />\n        </div>\n\n        {signedIn && (\n          <React.Fragment>\n            <ColumnLink transparent to='/home' icon='home' text={intl.formatMessage(messages.home)} />\n            <ColumnLink transparent to='/notifications' icon={<NotificationsCounterIcon className='column-link__icon' />} text={intl.formatMessage(messages.notifications)} />\n            <FollowRequestsColumnLink />\n          </React.Fragment>\n        )}\n\n        {showTrends ? (\n          <ColumnLink transparent to='/explore' icon='hashtag' text={intl.formatMessage(messages.explore)} />\n        ) : (\n          <ColumnLink transparent to='/search' icon='search' text={intl.formatMessage(messages.search)} />\n        )}\n\n        {(signedIn || timelinePreview) && (\n          <>\n            <ColumnLink transparent to='/public/local' icon='users' text={intl.formatMessage(messages.local)} />\n            <ColumnLink transparent exact to='/public' icon='globe' text={intl.formatMessage(messages.federated)} />\n          </>\n        )}\n\n        {!signedIn && (\n          <div className='navigation-panel__sign-in-banner'>\n            <hr />\n            { disabledAccountId ? <DisabledAccountBanner /> : <SignInBanner /> }\n          </div>\n        )}\n\n        {signedIn && (\n          <React.Fragment>\n            <ColumnLink transparent to='/conversations' icon='at' text={intl.formatMessage(messages.direct)} />\n            <ColumnLink transparent to='/bookmarks' icon='bookmark' text={intl.formatMessage(messages.bookmarks)} />\n            <ColumnLink transparent to='/favourites' icon='star' text={intl.formatMessage(messages.favourites)} />\n            <ColumnLink transparent to='/lists' icon='list-ul' text={intl.formatMessage(messages.lists)} />\n\n            <ListPanel />\n\n            <hr />\n\n            <ColumnLink transparent href='/settings/preferences' icon='cog' text={intl.formatMessage(messages.preferences)} />\n          </React.Fragment>\n        )}\n\n        <div className='navigation-panel__legal'>\n          <hr />\n          <ColumnLink transparent to='/about' icon='ellipsis-h' text={intl.formatMessage(messages.about)} />\n        </div>\n\n        <NavigationPortal />\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport BundleContainer from '../containers/bundle_container';\nimport ColumnLoading from './column_loading';\nimport DrawerLoading from './drawer_loading';\nimport BundleColumnError from './bundle_column_error';\nimport {\n  Compose,\n  Notifications,\n  HomeTimeline,\n  CommunityTimeline,\n  PublicTimeline,\n  HashtagTimeline,\n  DirectTimeline,\n  FavouritedStatuses,\n  BookmarkedStatuses,\n  ListTimeline,\n  Directory,\n} from '../../ui/util/async-components';\nimport ComposePanel from './compose_panel';\nimport NavigationPanel from './navigation_panel';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { scrollRight } from '../../../scroll';\n\nconst componentMap = {\n  'COMPOSE': Compose,\n  'HOME': HomeTimeline,\n  'NOTIFICATIONS': Notifications,\n  'PUBLIC': PublicTimeline,\n  'REMOTE': PublicTimeline,\n  'COMMUNITY': CommunityTimeline,\n  'HASHTAG': HashtagTimeline,\n  'DIRECT': DirectTimeline,\n  'FAVOURITES': FavouritedStatuses,\n  'BOOKMARKS': BookmarkedStatuses,\n  'LIST': ListTimeline,\n  'DIRECTORY': Directory,\n};\n\nexport default class ColumnsArea extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    columns: ImmutablePropTypes.list.isRequired,\n    isModalOpen: PropTypes.bool.isRequired,\n    singleColumn: PropTypes.bool,\n    children: PropTypes.node,\n  };\n\n  // Corresponds to (max-width: $no-gap-breakpoint + 285px - 1px) in SCSS\n  mediaQuery = 'matchMedia' in window && window.matchMedia('(max-width: 1174px)');\n\n  state = {\n    renderComposePanel: !(this.mediaQuery && this.mediaQuery.matches),\n  };\n\n  componentDidMount() {\n    if (!this.props.singleColumn) {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? { passive: true } : false);\n    }\n\n    if (this.mediaQuery) {\n      if (this.mediaQuery.addEventListener) {\n        this.mediaQuery.addEventListener('change', this.handleLayoutChange);\n      } else {\n        this.mediaQuery.addListener(this.handleLayoutChange);\n      }\n      this.setState({ renderComposePanel: !this.mediaQuery.matches });\n    }\n\n    this.isRtlLayout = document.getElementsByTagName('body')[0].classList.contains('rtl');\n  }\n\n  componentWillUpdate(nextProps) {\n    if (this.props.singleColumn !== nextProps.singleColumn && nextProps.singleColumn) {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.singleColumn !== prevProps.singleColumn && !this.props.singleColumn) {\n      this.node.addEventListener('wheel', this.handleWheel, supportsPassiveEvents ? { passive: true } : false);\n    }\n  }\n\n  componentWillUnmount () {\n    if (!this.props.singleColumn) {\n      this.node.removeEventListener('wheel', this.handleWheel);\n    }\n\n    if (this.mediaQuery) {\n      if (this.mediaQuery.removeEventListener) {\n        this.mediaQuery.removeEventListener('change', this.handleLayoutChange);\n      } else {\n        this.mediaQuery.removeListener(this.handleLayoutChange);\n      }\n    }\n  }\n\n  handleChildrenContentChange() {\n    if (!this.props.singleColumn) {\n      const modifier = this.isRtlLayout ? -1 : 1;\n      this._interruptScrollAnimation = scrollRight(this.node, (this.node.scrollWidth - window.innerWidth) * modifier);\n    }\n  }\n\n  handleLayoutChange = (e) => {\n    this.setState({ renderComposePanel: !e.matches });\n  };\n\n  handleWheel = () => {\n    if (typeof this._interruptScrollAnimation !== 'function') {\n      return;\n    }\n\n    this._interruptScrollAnimation();\n  };\n\n  setRef = (node) => {\n    this.node = node;\n  };\n\n  renderLoading = columnId => () => {\n    return columnId === 'COMPOSE' ? <DrawerLoading /> : <ColumnLoading multiColumn />;\n  };\n\n  renderError = (props) => {\n    return <BundleColumnError multiColumn errorType='network' {...props} />;\n  };\n\n  render () {\n    const { columns, children, singleColumn, isModalOpen } = this.props;\n    const { renderComposePanel } = this.state;\n\n    if (singleColumn) {\n      return (\n        <div className='columns-area__panels'>\n          <div className='columns-area__panels__pane columns-area__panels__pane--compositional'>\n            <div className='columns-area__panels__pane__inner'>\n              {renderComposePanel && <ComposePanel />}\n            </div>\n          </div>\n\n          <div className='columns-area__panels__main'>\n            <div className='tabs-bar__wrapper'><div id='tabs-bar__portal' /></div>\n            <div className='columns-area columns-area--mobile'>{children}</div>\n          </div>\n\n          <div className='columns-area__panels__pane columns-area__panels__pane--start columns-area__panels__pane--navigational'>\n            <div className='columns-area__panels__pane__inner'>\n              <NavigationPanel />\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className={`columns-area ${ isModalOpen ? 'unscrollable' : '' }`} ref={this.setRef}>\n        {columns.map(column => {\n          const params = column.get('params', null) === null ? null : column.get('params').toJS();\n          const other  = params && params.other ? params.other : {};\n\n          return (\n            <BundleContainer key={column.get('uuid')} fetchComponent={componentMap[column.get('id')]} loading={this.renderLoading(column.get('id'))} error={this.renderError}>\n              {SpecificComponent => <SpecificComponent columnId={column.get('uuid')} params={params} multiColumn {...other} />}\n            </BundleContainer>\n          );\n        })}\n\n        {React.Children.map(children, child => React.cloneElement(child, { multiColumn: true }))}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport ColumnsArea from '../components/columns_area';\n\nconst mapStateToProps = state => ({\n  columns: state.getIn(['settings', 'columns']),\n  isModalOpen: !!state.get('modal').modalType,\n});\n\nexport default connect(mapStateToProps, null, null, { forwardRef: true })(ColumnsArea);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport IconButton from 'mastodon/components/icon_button';\nimport { Link } from 'react-router-dom';\nimport Avatar from 'mastodon/components/avatar';\nimport DisplayName from 'mastodon/components/display_name';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nconst mapStateToProps = (state, { accountId }) => ({\n  account: state.getIn(['accounts', accountId]),\n});\n\nexport default @connect(mapStateToProps)\n@injectIntl\nclass Header extends ImmutablePureComponent {\n\n  static propTypes = {\n    accountId: PropTypes.string.isRequired,\n    statusId: PropTypes.string.isRequired,\n    account: ImmutablePropTypes.map.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { account, statusId, onClose, intl } = this.props;\n\n    return (\n      <div className='picture-in-picture__header'>\n        <Link to={`/@${account.get('acct')}/${statusId}`} className='picture-in-picture__header__account'>\n          <Avatar account={account} size={36} />\n          <DisplayName account={account} />\n        </Link>\n\n        <IconButton icon='times' onClick={onClose} title={intl.formatMessage(messages.close)} />\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Video from 'mastodon/features/video';\nimport Audio from 'mastodon/features/audio';\nimport { removePictureInPicture } from 'mastodon/actions/picture_in_picture';\nimport Header from './components/header';\nimport Footer from './components/footer';\n\nconst mapStateToProps = state => ({\n  ...state.get('picture_in_picture'),\n});\n\nexport default @connect(mapStateToProps)\nclass PictureInPicture extends React.Component {\n\n  static propTypes = {\n    statusId: PropTypes.string,\n    accountId: PropTypes.string,\n    type: PropTypes.string,\n    src: PropTypes.string,\n    muted: PropTypes.bool,\n    volume: PropTypes.number,\n    currentTime: PropTypes.number,\n    poster: PropTypes.string,\n    backgroundColor: PropTypes.string,\n    foregroundColor: PropTypes.string,\n    accentColor: PropTypes.string,\n    dispatch: PropTypes.func.isRequired,\n  };\n\n  handleClose = () => {\n    const { dispatch } = this.props;\n    dispatch(removePictureInPicture());\n  };\n\n  render () {\n    const { type, src, currentTime, accountId, statusId } = this.props;\n\n    if (!currentTime) {\n      return null;\n    }\n\n    let player;\n\n    if (type === 'video') {\n      player = (\n        <Video\n          src={src}\n          currentTime={this.props.currentTime}\n          volume={this.props.volume}\n          muted={this.props.muted}\n          autoPlay\n          inline\n          alwaysVisible\n        />\n      );\n    } else if (type === 'audio') {\n      player = (\n        <Audio\n          src={src}\n          currentTime={this.props.currentTime}\n          volume={this.props.volume}\n          muted={this.props.muted}\n          poster={this.props.poster}\n          backgroundColor={this.props.backgroundColor}\n          foregroundColor={this.props.foregroundColor}\n          accentColor={this.props.accentColor}\n          autoPlay\n        />\n      );\n    }\n\n    return (\n      <div className='picture-in-picture'>\n        <Header accountId={accountId} statusId={statusId} onClose={this.handleClose} />\n\n        {player}\n\n        <Footer statusId={statusId} />\n      </div>\n    );\n  }\n\n}\n","import { changeSetting, saveSettings } from './settings';\n\nexport const INTRODUCTION_VERSION = 20181216044202;\n\nexport const closeOnboarding = () => dispatch => {\n  dispatch(changeSetting(['introductionVersion'], INTRODUCTION_VERSION));\n  dispatch(saveSettings());\n};\n","import React from 'react';\nimport Logo from 'mastodon/components/logo';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { registrationsOpen, me } from 'mastodon/initial_state';\nimport Avatar from 'mastodon/components/avatar';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { openModal } from 'mastodon/actions/modal';\n\nconst Account = connect(state => ({\n  account: state.getIn(['accounts', me]),\n}))(({ account }) => (\n  <Link to={`/@${account.get('acct')}`} title={account.get('acct')}>\n    <Avatar account={account} size={35} />\n  </Link>\n));\n\nconst mapDispatchToProps = (dispatch) => ({\n  openClosedRegistrationsModal() {\n    dispatch(openModal('CLOSED_REGISTRATIONS'));\n  },\n});\n\nexport default @withRouter\n@connect(null, mapDispatchToProps)\nclass Header extends React.PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    openClosedRegistrationsModal: PropTypes.func,\n    location: PropTypes.object,\n  };\n\n  render () {\n    const { signedIn } = this.context.identity;\n    const { location, openClosedRegistrationsModal } = this.props;\n\n    let content;\n\n    if (signedIn) {\n      content = (\n        <>\n          {location.pathname !== '/publish' && <Link to='/publish' className='button'><FormattedMessage id='compose_form.publish_form' defaultMessage='Publish' /></Link>}\n          <Account />\n        </>\n      );\n    } else {\n      let signupButton;\n\n      if (registrationsOpen) {\n        signupButton = (\n          <a href='/auth/sign_up' className='button button-tertiary'>\n            <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n          </a>\n        );\n      } else {\n        signupButton = (\n          <button className='button button-tertiary' onClick={openClosedRegistrationsModal}>\n            <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n          </button>\n        );\n      }\n\n      content = (\n        <>\n          <a href='/auth/sign_in' className='button'><FormattedMessage id='sign_in_banner.sign_in' defaultMessage='Sign in' /></a>\n          {signupButton}\n        </>\n      );\n    }\n\n    return (\n      <div className='ui__header'>\n        <Link to='/' className='ui__header__logo'><Logo /></Link>\n\n        <div className='ui__header__links'>\n          {content}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { HotKeys } from 'react-hotkeys';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Redirect, Route, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport NotificationsContainer from './containers/notifications_container';\nimport LoadingBarContainer from './containers/loading_bar_container';\nimport ModalContainer from './containers/modal_container';\nimport { layoutFromWindow } from 'mastodon/is_mobile';\nimport { debounce } from 'lodash';\nimport { uploadCompose, resetCompose, changeComposeSpoilerness } from '../../actions/compose';\nimport { expandHomeTimeline } from '../../actions/timelines';\nimport { expandNotifications } from '../../actions/notifications';\nimport { fetchServer } from '../../actions/server';\nimport { clearHeight } from '../../actions/height_cache';\nimport { focusApp, unfocusApp, changeLayout } from 'mastodon/actions/app';\nimport { synchronouslySubmitMarkers, submitMarkers, fetchMarkers } from 'mastodon/actions/markers';\nimport { WrappedSwitch, WrappedRoute } from './util/react_router_helpers';\nimport BundleColumnError from './components/bundle_column_error';\nimport UploadArea from './components/upload_area';\nimport ColumnsAreaContainer from './containers/columns_area_container';\nimport PictureInPicture from 'mastodon/features/picture_in_picture';\nimport {\n  Compose,\n  Status,\n  GettingStarted,\n  KeyboardShortcuts,\n  PublicTimeline,\n  CommunityTimeline,\n  AccountTimeline,\n  AccountGallery,\n  HomeTimeline,\n  Followers,\n  Following,\n  Reblogs,\n  Favourites,\n  DirectTimeline,\n  HashtagTimeline,\n  Notifications,\n  FollowRequests,\n  FavouritedStatuses,\n  BookmarkedStatuses,\n  FollowedTags,\n  ListTimeline,\n  Blocks,\n  DomainBlocks,\n  Mutes,\n  PinnedStatuses,\n  Lists,\n  Directory,\n  Explore,\n  FollowRecommendations,\n  About,\n  PrivacyPolicy,\n} from './util/async-components';\nimport initialState, { me, owner, singleUserMode, showTrends, trendsAsLanding } from '../../initial_state';\nimport { closeOnboarding, INTRODUCTION_VERSION } from 'mastodon/actions/onboarding';\nimport Header from './components/header';\n\n// Dummy import, to make sure that <Status /> ends up in the application bundle.\n// Without this it ends up in ~8 very commonly used bundles.\nimport '../../components/status';\n\nconst messages = defineMessages({\n  beforeUnload: { id: 'ui.beforeunload', defaultMessage: 'Your draft will be lost if you leave Mastodon.' },\n});\n\nconst mapStateToProps = state => ({\n  layout: state.getIn(['meta', 'layout']),\n  isComposing: state.getIn(['compose', 'is_composing']),\n  hasComposingText: state.getIn(['compose', 'text']).trim().length !== 0,\n  hasMediaAttachments: state.getIn(['compose', 'media_attachments']).size > 0,\n  canUploadMore: !state.getIn(['compose', 'media_attachments']).some(x => ['audio', 'video'].includes(x.get('type'))) && state.getIn(['compose', 'media_attachments']).size < 4,\n  dropdownMenuIsOpen: state.getIn(['dropdown_menu', 'openId']) !== null,\n  firstLaunch: state.getIn(['settings', 'introductionVersion'], 0) < INTRODUCTION_VERSION,\n  username: state.getIn(['accounts', me, 'username']),\n});\n\nconst keyMap = {\n  help: '?',\n  new: 'n',\n  search: 's',\n  forceNew: 'option+n',\n  toggleComposeSpoilers: 'option+x',\n  focusColumn: ['1', '2', '3', '4', '5', '6', '7', '8', '9'],\n  reply: 'r',\n  favourite: 'f',\n  boost: 'b',\n  mention: 'm',\n  open: ['enter', 'o'],\n  openProfile: 'p',\n  moveDown: ['down', 'j'],\n  moveUp: ['up', 'k'],\n  back: 'backspace',\n  goToHome: 'g h',\n  goToNotifications: 'g n',\n  goToLocal: 'g l',\n  goToFederated: 'g t',\n  goToDirect: 'g d',\n  goToStart: 'g s',\n  goToFavourites: 'g f',\n  goToPinned: 'g p',\n  goToProfile: 'g u',\n  goToBlocked: 'g b',\n  goToMuted: 'g m',\n  goToRequests: 'g r',\n  toggleHidden: 'x',\n  toggleSensitive: 'h',\n  openMedia: 'e',\n};\n\nclass SwitchingColumnsArea extends React.PureComponent {\n\n  static contextTypes = {\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    children: PropTypes.node,\n    location: PropTypes.object,\n    mobile: PropTypes.bool,\n  };\n\n  componentWillMount () {\n    if (this.props.mobile) {\n      document.body.classList.toggle('layout-single-column', true);\n      document.body.classList.toggle('layout-multiple-columns', false);\n    } else {\n      document.body.classList.toggle('layout-single-column', false);\n      document.body.classList.toggle('layout-multiple-columns', true);\n    }\n  }\n\n  componentDidUpdate (prevProps) {\n    if (![this.props.location.pathname, '/'].includes(prevProps.location.pathname)) {\n      this.node.handleChildrenContentChange();\n    }\n\n    if (prevProps.mobile !== this.props.mobile) {\n      document.body.classList.toggle('layout-single-column', this.props.mobile);\n      document.body.classList.toggle('layout-multiple-columns', !this.props.mobile);\n    }\n  }\n\n  setRef = c => {\n    if (c) {\n      this.node = c;\n    }\n  };\n\n  render () {\n    const { children, mobile } = this.props;\n    const { signedIn } = this.context.identity;\n\n    let redirect;\n\n    if (signedIn) {\n      if (mobile) {\n        redirect = <Redirect from='/' to='/home' exact />;\n      } else {\n        redirect = <Redirect from='/' to='/getting-started' exact />;\n      }\n    } else if (singleUserMode && owner && initialState?.accounts[owner]) {\n      redirect = <Redirect from='/' to={`/@${initialState.accounts[owner].username}`} exact />;\n    } else if (showTrends && trendsAsLanding) {\n      redirect = <Redirect from='/' to='/explore' exact />;\n    } else {\n      redirect = <Redirect from='/' to='/about' exact />;\n    }\n\n    return (\n      <ColumnsAreaContainer ref={this.setRef} singleColumn={mobile}>\n        <WrappedSwitch>\n          {redirect}\n\n          <WrappedRoute path='/getting-started' component={GettingStarted} content={children} />\n          <WrappedRoute path='/keyboard-shortcuts' component={KeyboardShortcuts} content={children} />\n          <WrappedRoute path='/about' component={About} content={children} />\n          <WrappedRoute path='/privacy-policy' component={PrivacyPolicy} content={children} />\n\n          <WrappedRoute path={['/home', '/timelines/home']} component={HomeTimeline} content={children} />\n          <WrappedRoute path={['/public', '/timelines/public']} exact component={PublicTimeline} content={children} />\n          <WrappedRoute path={['/public/local', '/timelines/public/local']} exact component={CommunityTimeline} content={children} />\n          <WrappedRoute path={['/conversations', '/timelines/direct']} component={DirectTimeline} content={children} />\n          <WrappedRoute path='/tags/:id' component={HashtagTimeline} content={children} />\n          <WrappedRoute path='/lists/:id' component={ListTimeline} content={children} />\n          <WrappedRoute path='/notifications' component={Notifications} content={children} />\n          <WrappedRoute path='/favourites' component={FavouritedStatuses} content={children} />\n\n          <WrappedRoute path='/bookmarks' component={BookmarkedStatuses} content={children} />\n          <WrappedRoute path='/pinned' component={PinnedStatuses} content={children} />\n\n          <WrappedRoute path='/start' component={FollowRecommendations} content={children} />\n          <WrappedRoute path='/directory' component={Directory} content={children} />\n          <WrappedRoute path={['/explore', '/search']} component={Explore} content={children} />\n          <WrappedRoute path={['/publish', '/statuses/new']} component={Compose} content={children} />\n\n          <WrappedRoute path={['/@:acct', '/accounts/:id']} exact component={AccountTimeline} content={children} />\n          <WrappedRoute path='/@:acct/tagged/:tagged?' exact component={AccountTimeline} content={children} />\n          <WrappedRoute path={['/@:acct/with_replies', '/accounts/:id/with_replies']} component={AccountTimeline} content={children} componentParams={{ withReplies: true }} />\n          <WrappedRoute path={['/accounts/:id/followers', '/users/:acct/followers', '/@:acct/followers']} component={Followers} content={children} />\n          <WrappedRoute path={['/accounts/:id/following', '/users/:acct/following', '/@:acct/following']} component={Following} content={children} />\n          <WrappedRoute path={['/@:acct/media', '/accounts/:id/media']} component={AccountGallery} content={children} />\n          <WrappedRoute path='/@:acct/:statusId' exact component={Status} content={children} />\n          <WrappedRoute path='/@:acct/:statusId/reblogs' component={Reblogs} content={children} />\n          <WrappedRoute path='/@:acct/:statusId/favourites' component={Favourites} content={children} />\n\n          {/* Legacy routes, cannot be easily factored with other routes because they share a param name */}\n          <WrappedRoute path='/timelines/tag/:id' component={HashtagTimeline} content={children} />\n          <WrappedRoute path='/timelines/list/:id' component={ListTimeline} content={children} />\n          <WrappedRoute path='/statuses/:statusId' exact component={Status} content={children} />\n          <WrappedRoute path='/statuses/:statusId/reblogs' component={Reblogs} content={children} />\n          <WrappedRoute path='/statuses/:statusId/favourites' component={Favourites} content={children} />\n\n          <WrappedRoute path='/follow_requests' component={FollowRequests} content={children} />\n          <WrappedRoute path='/blocks' component={Blocks} content={children} />\n          <WrappedRoute path='/domain_blocks' component={DomainBlocks} content={children} />\n          <WrappedRoute path='/followed_tags' component={FollowedTags} content={children} />\n          <WrappedRoute path='/mutes' component={Mutes} content={children} />\n          <WrappedRoute path='/lists' component={Lists} content={children} />\n\n          <Route component={BundleColumnError} />\n        </WrappedSwitch>\n      </ColumnsAreaContainer>\n    );\n  }\n\n}\n\nexport default @connect(mapStateToProps)\n@injectIntl\n@withRouter\nclass UI extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object.isRequired,\n    identity: PropTypes.object.isRequired,\n  };\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    children: PropTypes.node,\n    isComposing: PropTypes.bool,\n    hasComposingText: PropTypes.bool,\n    hasMediaAttachments: PropTypes.bool,\n    canUploadMore: PropTypes.bool,\n    location: PropTypes.object,\n    intl: PropTypes.object.isRequired,\n    dropdownMenuIsOpen: PropTypes.bool,\n    layout: PropTypes.string.isRequired,\n    firstLaunch: PropTypes.bool,\n    username: PropTypes.string,\n  };\n\n  state = {\n    draggingOver: false,\n  };\n\n  handleBeforeUnload = e => {\n    const { intl, dispatch, isComposing, hasComposingText, hasMediaAttachments } = this.props;\n\n    dispatch(synchronouslySubmitMarkers());\n\n    if (isComposing && (hasComposingText || hasMediaAttachments)) {\n      e.preventDefault();\n      // Setting returnValue to any string causes confirmation dialog.\n      // Many browsers no longer display this text to users,\n      // but we set user-friendly message for other browsers, e.g. Edge.\n      e.returnValue = intl.formatMessage(messages.beforeUnload);\n    }\n  };\n\n  handleWindowFocus = () => {\n    this.props.dispatch(focusApp());\n    this.props.dispatch(submitMarkers({ immediate: true }));\n  };\n\n  handleWindowBlur = () => {\n    this.props.dispatch(unfocusApp());\n  };\n\n  handleDragEnter = (e) => {\n    e.preventDefault();\n\n    if (!this.dragTargets) {\n      this.dragTargets = [];\n    }\n\n    if (this.dragTargets.indexOf(e.target) === -1) {\n      this.dragTargets.push(e.target);\n    }\n\n    if (e.dataTransfer && Array.from(e.dataTransfer.types).includes('Files') && this.props.canUploadMore && this.context.identity.signedIn) {\n      this.setState({ draggingOver: true });\n    }\n  };\n\n  handleDragOver = (e) => {\n    if (this.dataTransferIsText(e.dataTransfer)) return false;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    try {\n      e.dataTransfer.dropEffect = 'copy';\n    } catch (err) {\n\n    }\n\n    return false;\n  };\n\n  handleDrop = (e) => {\n    if (this.dataTransferIsText(e.dataTransfer)) return;\n\n    e.preventDefault();\n\n    this.setState({ draggingOver: false });\n    this.dragTargets = [];\n\n    if (e.dataTransfer && e.dataTransfer.files.length >= 1 && this.props.canUploadMore && this.context.identity.signedIn) {\n      this.props.dispatch(uploadCompose(e.dataTransfer.files));\n    }\n  };\n\n  handleDragLeave = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    this.dragTargets = this.dragTargets.filter(el => el !== e.target && this.node.contains(el));\n\n    if (this.dragTargets.length > 0) {\n      return;\n    }\n\n    this.setState({ draggingOver: false });\n  };\n\n  dataTransferIsText = (dataTransfer) => {\n    return (dataTransfer && Array.from(dataTransfer.types).filter((type) => type === 'text/plain').length === 1);\n  };\n\n  closeUploadModal = () => {\n    this.setState({ draggingOver: false });\n  };\n\n  handleServiceWorkerPostMessage = ({ data }) => {\n    if (data.type === 'navigate') {\n      this.context.router.history.push(data.path);\n    } else {\n      console.warn('Unknown message type:', data.type);\n    }\n  };\n\n  handleLayoutChange = debounce(() => {\n    this.props.dispatch(clearHeight()); // The cached heights are no longer accurate, invalidate\n  }, 500, {\n    trailing: true,\n  });\n\n  handleResize = () => {\n    const layout = layoutFromWindow();\n\n    if (layout !== this.props.layout) {\n      this.handleLayoutChange.cancel();\n      this.props.dispatch(changeLayout(layout));\n    } else {\n      this.handleLayoutChange();\n    }\n  };\n\n  componentDidMount () {\n    const { signedIn } = this.context.identity;\n\n    window.addEventListener('focus', this.handleWindowFocus, false);\n    window.addEventListener('blur', this.handleWindowBlur, false);\n    window.addEventListener('beforeunload', this.handleBeforeUnload, false);\n    window.addEventListener('resize', this.handleResize, { passive: true });\n\n    document.addEventListener('dragenter', this.handleDragEnter, false);\n    document.addEventListener('dragover', this.handleDragOver, false);\n    document.addEventListener('drop', this.handleDrop, false);\n    document.addEventListener('dragleave', this.handleDragLeave, false);\n    document.addEventListener('dragend', this.handleDragEnd, false);\n\n    if ('serviceWorker' in  navigator) {\n      navigator.serviceWorker.addEventListener('message', this.handleServiceWorkerPostMessage);\n    }\n\n    // On first launch, redirect to the follow recommendations page\n    if (signedIn && this.props.firstLaunch) {\n      this.context.router.history.replace('/start');\n      this.props.dispatch(closeOnboarding());\n    }\n\n    if (signedIn) {\n      this.props.dispatch(fetchMarkers());\n      this.props.dispatch(expandHomeTimeline());\n      this.props.dispatch(expandNotifications());\n\n      setTimeout(() => this.props.dispatch(fetchServer()), 3000);\n    }\n\n    this.hotkeys.__mousetrap__.stopCallback = (e, element) => {\n      return ['TEXTAREA', 'SELECT', 'INPUT'].includes(element.tagName);\n    };\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('focus', this.handleWindowFocus);\n    window.removeEventListener('blur', this.handleWindowBlur);\n    window.removeEventListener('beforeunload', this.handleBeforeUnload);\n    window.removeEventListener('resize', this.handleResize);\n\n    document.removeEventListener('dragenter', this.handleDragEnter);\n    document.removeEventListener('dragover', this.handleDragOver);\n    document.removeEventListener('drop', this.handleDrop);\n    document.removeEventListener('dragleave', this.handleDragLeave);\n    document.removeEventListener('dragend', this.handleDragEnd);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  handleHotkeyNew = e => {\n    e.preventDefault();\n\n    const element = this.node.querySelector('.compose-form__autosuggest-wrapper textarea');\n\n    if (element) {\n      element.focus();\n    }\n  };\n\n  handleHotkeySearch = e => {\n    e.preventDefault();\n\n    const element = this.node.querySelector('.search__input');\n\n    if (element) {\n      element.focus();\n    }\n  };\n\n  handleHotkeyForceNew = e => {\n    this.handleHotkeyNew(e);\n    this.props.dispatch(resetCompose());\n  };\n\n  handleHotkeyToggleComposeSpoilers = e => {\n    e.preventDefault();\n    this.props.dispatch(changeComposeSpoilerness());\n  };\n\n  handleHotkeyFocusColumn = e => {\n    const index  = (e.key * 1) + 1; // First child is drawer, skip that\n    const column = this.node.querySelector(`.column:nth-child(${index})`);\n    if (!column) return;\n    const container = column.querySelector('.scrollable');\n\n    if (container) {\n      const status = container.querySelector('.focusable');\n\n      if (status) {\n        if (container.scrollTop > status.offsetTop) {\n          status.scrollIntoView(true);\n        }\n        status.focus();\n      }\n    }\n  };\n\n  handleHotkeyBack = () => {\n    if (window.history && window.history.state) {\n      this.context.router.history.goBack();\n    } else {\n      this.context.router.history.push('/');\n    }\n  };\n\n  setHotkeysRef = c => {\n    this.hotkeys = c;\n  };\n\n  handleHotkeyToggleHelp = () => {\n    if (this.props.location.pathname === '/keyboard-shortcuts') {\n      this.context.router.history.goBack();\n    } else {\n      this.context.router.history.push('/keyboard-shortcuts');\n    }\n  };\n\n  handleHotkeyGoToHome = () => {\n    this.context.router.history.push('/home');\n  };\n\n  handleHotkeyGoToNotifications = () => {\n    this.context.router.history.push('/notifications');\n  };\n\n  handleHotkeyGoToLocal = () => {\n    this.context.router.history.push('/public/local');\n  };\n\n  handleHotkeyGoToFederated = () => {\n    this.context.router.history.push('/public');\n  };\n\n  handleHotkeyGoToDirect = () => {\n    this.context.router.history.push('/conversations');\n  };\n\n  handleHotkeyGoToStart = () => {\n    this.context.router.history.push('/getting-started');\n  };\n\n  handleHotkeyGoToFavourites = () => {\n    this.context.router.history.push('/favourites');\n  };\n\n  handleHotkeyGoToPinned = () => {\n    this.context.router.history.push('/pinned');\n  };\n\n  handleHotkeyGoToProfile = () => {\n    this.context.router.history.push(`/@${this.props.username}`);\n  };\n\n  handleHotkeyGoToBlocked = () => {\n    this.context.router.history.push('/blocks');\n  };\n\n  handleHotkeyGoToMuted = () => {\n    this.context.router.history.push('/mutes');\n  };\n\n  handleHotkeyGoToRequests = () => {\n    this.context.router.history.push('/follow_requests');\n  };\n\n  render () {\n    const { draggingOver } = this.state;\n    const { children, isComposing, location, dropdownMenuIsOpen, layout } = this.props;\n\n    const handlers = {\n      help: this.handleHotkeyToggleHelp,\n      new: this.handleHotkeyNew,\n      search: this.handleHotkeySearch,\n      forceNew: this.handleHotkeyForceNew,\n      toggleComposeSpoilers: this.handleHotkeyToggleComposeSpoilers,\n      focusColumn: this.handleHotkeyFocusColumn,\n      back: this.handleHotkeyBack,\n      goToHome: this.handleHotkeyGoToHome,\n      goToNotifications: this.handleHotkeyGoToNotifications,\n      goToLocal: this.handleHotkeyGoToLocal,\n      goToFederated: this.handleHotkeyGoToFederated,\n      goToDirect: this.handleHotkeyGoToDirect,\n      goToStart: this.handleHotkeyGoToStart,\n      goToFavourites: this.handleHotkeyGoToFavourites,\n      goToPinned: this.handleHotkeyGoToPinned,\n      goToProfile: this.handleHotkeyGoToProfile,\n      goToBlocked: this.handleHotkeyGoToBlocked,\n      goToMuted: this.handleHotkeyGoToMuted,\n      goToRequests: this.handleHotkeyGoToRequests,\n    };\n\n    return (\n      <HotKeys keyMap={keyMap} handlers={handlers} ref={this.setHotkeysRef} attach={window} focused>\n        <div className={classNames('ui', { 'is-composing': isComposing })} ref={this.setRef} style={{ pointerEvents: dropdownMenuIsOpen ? 'none' : null }}>\n          <Header />\n\n          <SwitchingColumnsArea location={location} mobile={layout === 'mobile' || layout === 'single-column'}>\n            {children}\n          </SwitchingColumnsArea>\n\n          {layout !== 'mobile' && <PictureInPicture />}\n          <NotificationsContainer />\n          <LoadingBarContainer className='loading-bar' />\n          <ModalContainer />\n          <UploadArea active={draggingOver} onClose={this.closeUploadModal} />\n        </div>\n      </HotKeys>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { version, source_url } from 'mastodon/initial_state';\nimport StackTrace from 'stacktrace-js';\nimport { Helmet } from 'react-helmet';\n\nexport default class ErrorBoundary extends React.PureComponent {\n\n  static propTypes = {\n    children: PropTypes.node,\n  };\n\n  state = {\n    hasError: false,\n    errorMessage: undefined,\n    stackTrace: undefined,\n    mappedStackTrace: undefined,\n    componentStack: undefined,\n  };\n\n  componentDidCatch (error, info) {\n    this.setState({\n      hasError: true,\n      errorMessage: error.toString(),\n      stackTrace: error.stack,\n      componentStack: info && info.componentStack,\n      mappedStackTrace: undefined,\n    });\n\n    StackTrace.fromError(error).then((stackframes) => {\n      this.setState({\n        mappedStackTrace: stackframes.map((sf) => sf.toString()).join('\\n'),\n      });\n    }).catch(() => {\n      this.setState({\n        mappedStackTrace: undefined,\n      });\n    });\n  }\n\n  handleCopyStackTrace = () => {\n    const { errorMessage, stackTrace, mappedStackTrace } = this.state;\n    const textarea = document.createElement('textarea');\n\n    let contents = [errorMessage, stackTrace];\n    if (mappedStackTrace) {\n      contents.push(mappedStackTrace);\n    }\n\n    textarea.textContent    = contents.join('\\n\\n\\n');\n    textarea.style.position = 'fixed';\n\n    document.body.appendChild(textarea);\n\n    try {\n      textarea.select();\n      document.execCommand('copy');\n    } catch (e) {\n\n    } finally {\n      document.body.removeChild(textarea);\n    }\n\n    this.setState({ copied: true });\n    setTimeout(() => this.setState({ copied: false }), 700);\n  };\n\n  render() {\n    const { hasError, copied, errorMessage } = this.state;\n\n    if (!hasError) {\n      return this.props.children;\n    }\n\n    const likelyBrowserAddonIssue = errorMessage && errorMessage.includes('NotFoundError');\n\n    return (\n      <div className='error-boundary'>\n        <div>\n          <p className='error-boundary__error'>\n            { likelyBrowserAddonIssue ? (\n              <FormattedMessage id='error.unexpected_crash.explanation_addons' defaultMessage='This page could not be displayed correctly. This error is likely caused by a browser add-on or automatic translation tools.' />\n            ) : (\n              <FormattedMessage id='error.unexpected_crash.explanation' defaultMessage='Due to a bug in our code or a browser compatibility issue, this page could not be displayed correctly.' />\n            )}\n          </p>\n\n          <p>\n            { likelyBrowserAddonIssue ? (\n              <FormattedMessage id='error.unexpected_crash.next_steps_addons' defaultMessage='Try disabling them and refreshing the page. If that does not help, you may still be able to use Mastodon through a different browser or native app.' />\n            ) : (\n              <FormattedMessage id='error.unexpected_crash.next_steps' defaultMessage='Try refreshing the page. If that does not help, you may still be able to use Mastodon through a different browser or native app.' />\n            )}\n          </p>\n\n          <p className='error-boundary__footer'>Mastodon v{version} · <a href={source_url} rel='noopener noreferrer' target='_blank'><FormattedMessage id='errors.unexpected_crash.report_issue' defaultMessage='Report issue' /></a> · <button onClick={this.handleCopyStackTrace} className={copied ? 'copied' : ''}><FormattedMessage id='errors.unexpected_crash.copy_stacktrace' defaultMessage='Copy stacktrace to clipboard' /></button></p>\n        </div>\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </div>\n    );\n  }\n\n}\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { IntlProvider, addLocaleData } from 'react-intl';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { BrowserRouter, Route } from 'react-router-dom';\nimport { ScrollContext } from 'react-router-scroll-4';\nimport configureStore from 'mastodon/store/configureStore';\nimport UI from 'mastodon/features/ui';\nimport { fetchCustomEmojis } from 'mastodon/actions/custom_emojis';\nimport { hydrateStore } from 'mastodon/actions/store';\nimport { connectUserStream } from 'mastodon/actions/streaming';\nimport ErrorBoundary from 'mastodon/components/error_boundary';\nimport initialState, { title as siteTitle } from 'mastodon/initial_state';\nimport { getLocale } from 'mastodon/locales';\n\nconst { localeData, messages } = getLocale();\naddLocaleData(localeData);\n\nconst title = process.env.NODE_ENV === 'production' ? siteTitle : `${siteTitle} (Dev)`;\n\nexport const store = configureStore();\nconst hydrateAction = hydrateStore(initialState);\n\nstore.dispatch(hydrateAction);\nif (initialState.meta.me) {\n  store.dispatch(fetchCustomEmojis());\n}\n\nconst createIdentityContext = state => ({\n  signedIn: !!state.meta.me,\n  accountId: state.meta.me,\n  disabledAccountId: state.meta.disabled_account_id,\n  accessToken: state.meta.access_token,\n  permissions: state.role ? state.role.permissions : 0,\n});\n\nexport default class Mastodon extends React.PureComponent {\n\n  static propTypes = {\n    locale: PropTypes.string.isRequired,\n  };\n\n  static childContextTypes = {\n    identity: PropTypes.shape({\n      signedIn: PropTypes.bool.isRequired,\n      accountId: PropTypes.string,\n      disabledAccountId: PropTypes.string,\n      accessToken: PropTypes.string,\n    }).isRequired,\n  };\n\n  identity = createIdentityContext(initialState);\n\n  getChildContext() {\n    return {\n      identity: this.identity,\n    };\n  }\n\n  componentDidMount() {\n    if (this.identity.signedIn) {\n      this.disconnect = store.dispatch(connectUserStream());\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.disconnect) {\n      this.disconnect();\n      this.disconnect = null;\n    }\n  }\n\n  shouldUpdateScroll (prevRouterProps, { location }) {\n    return !(location.state?.mastodonModalKey && location.state?.mastodonModalKey !== prevRouterProps?.location?.state?.mastodonModalKey);\n  }\n\n  render () {\n    const { locale } = this.props;\n\n    return (\n      <IntlProvider locale={locale} messages={messages}>\n        <ReduxProvider store={store}>\n          <ErrorBoundary>\n            <BrowserRouter>\n              <ScrollContext shouldUpdateScroll={this.shouldUpdateScroll}>\n                <Route path='/' component={UI} />\n              </ScrollContext>\n            </BrowserRouter>\n\n            <Helmet defaultTitle={title} titleTemplate={`%s - ${title}`} />\n          </ErrorBoundary>\n        </ReduxProvider>\n      </IntlProvider>\n    );\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { setupBrowserNotifications } from 'mastodon/actions/notifications';\nimport Mastodon, { store } from 'mastodon/containers/mastodon';\nimport { me } from 'mastodon/initial_state';\nimport ready from 'mastodon/ready';\n\nconst perf = require('mastodon/performance');\n\n/**\n * @returns {Promise<void>}\n */\nfunction main() {\n  perf.start('main()');\n\n  return ready(async () => {\n    const mountNode = document.getElementById('mastodon');\n    const props = JSON.parse(mountNode.getAttribute('data-props'));\n\n    ReactDOM.render(<Mastodon {...props} />, mountNode);\n    store.dispatch(setupBrowserNotifications());\n\n    if (process.env.NODE_ENV === 'production' && me && 'serviceWorker' in navigator) {\n      const { Workbox } = await import('workbox-window');\n      const wb = new Workbox('/sw.js');\n      /** @type {ServiceWorkerRegistration} */\n      let registration;\n\n      try {\n        registration = await wb.register();\n      } catch (err) {\n        console.error(err);\n      }\n\n      if (registration) {\n        const registerPushNotifications = await import('mastodon/actions/push_notifications');\n\n        store.dispatch(registerPushNotifications.register());\n      }\n    }\n\n    perf.stop('main()');\n  });\n}\n\nexport default main;\n","//\n// Tools for performance debugging, only enabled in development mode.\n// Open up Chrome Dev Tools, then Timeline, then User Timing to see output.\n// Also see config/webpack/loaders/mark.js for the webpack loader marks.\n//\n\nlet marky;\n\nif (process.env.NODE_ENV === 'development') {\n  if (typeof performance !== 'undefined' && performance.setResourceTimingBufferSize) {\n    // Increase Firefox's performance entry limit; otherwise it's capped to 150.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1331135\n    performance.setResourceTimingBufferSize(Infinity);\n  }\n  marky = require('marky');\n  // allows us to easily do e.g. ReactPerf.printWasted() while debugging\n  //window.ReactPerf = require('react-addons-perf');\n  //window.ReactPerf.start();\n}\n\nexport function start(name) {\n  if (process.env.NODE_ENV === 'development') {\n    marky.mark(name);\n  }\n}\n\nexport function stop(name) {\n  if (process.env.NODE_ENV === 'development') {\n    marky.stop(name);\n  }\n}\n","export function EmojiPicker () {\n  return import(/* webpackChunkName: \"emoji_picker\" */'../../emoji/emoji_picker');\n}\n\nexport function Compose () {\n  return import(/* webpackChunkName: \"features/compose\" */'../../compose');\n}\n\nexport function Notifications () {\n  return import(/* webpackChunkName: \"features/notifications\" */'../../notifications');\n}\n\nexport function HomeTimeline () {\n  return import(/* webpackChunkName: \"features/home_timeline\" */'../../home_timeline');\n}\n\nexport function PublicTimeline () {\n  return import(/* webpackChunkName: \"features/public_timeline\" */'../../public_timeline');\n}\n\nexport function CommunityTimeline () {\n  return import(/* webpackChunkName: \"features/community_timeline\" */'../../community_timeline');\n}\n\nexport function HashtagTimeline () {\n  return import(/* webpackChunkName: \"features/hashtag_timeline\" */'../../hashtag_timeline');\n}\n\nexport function DirectTimeline() {\n  return import(/* webpackChunkName: \"features/direct_timeline\" */'../../direct_timeline');\n}\n\nexport function ListTimeline () {\n  return import(/* webpackChunkName: \"features/list_timeline\" */'../../list_timeline');\n}\n\nexport function Lists () {\n  return import(/* webpackChunkName: \"features/lists\" */'../../lists');\n}\n\nexport function Status () {\n  return import(/* webpackChunkName: \"features/status\" */'../../status');\n}\n\nexport function GettingStarted () {\n  return import(/* webpackChunkName: \"features/getting_started\" */'../../getting_started');\n}\n\nexport function KeyboardShortcuts () {\n  return import(/* webpackChunkName: \"features/keyboard_shortcuts\" */'../../keyboard_shortcuts');\n}\n\nexport function PinnedStatuses () {\n  return import(/* webpackChunkName: \"features/pinned_statuses\" */'../../pinned_statuses');\n}\n\nexport function AccountTimeline () {\n  return import(/* webpackChunkName: \"features/account_timeline\" */'../../account_timeline');\n}\n\nexport function AccountGallery () {\n  return import(/* webpackChunkName: \"features/account_gallery\" */'../../account_gallery');\n}\n\nexport function Followers () {\n  return import(/* webpackChunkName: \"features/followers\" */'../../followers');\n}\n\nexport function Following () {\n  return import(/* webpackChunkName: \"features/following\" */'../../following');\n}\n\nexport function Reblogs () {\n  return import(/* webpackChunkName: \"features/reblogs\" */'../../reblogs');\n}\n\nexport function Favourites () {\n  return import(/* webpackChunkName: \"features/favourites\" */'../../favourites');\n}\n\nexport function FollowRequests () {\n  return import(/* webpackChunkName: \"features/follow_requests\" */'../../follow_requests');\n}\n\nexport function GenericNotFound () {\n  return import(/* webpackChunkName: \"features/generic_not_found\" */'../../generic_not_found');\n}\n\nexport function FavouritedStatuses () {\n  return import(/* webpackChunkName: \"features/favourited_statuses\" */'../../favourited_statuses');\n}\n\nexport function FollowedTags () {\n  return import(/* webpackChunkName: \"features/followed_tags\" */'../../followed_tags');\n}\n\nexport function BookmarkedStatuses () {\n  return import(/* webpackChunkName: \"features/bookmarked_statuses\" */'../../bookmarked_statuses');\n}\n\nexport function Blocks () {\n  return import(/* webpackChunkName: \"features/blocks\" */'../../blocks');\n}\n\nexport function DomainBlocks () {\n  return import(/* webpackChunkName: \"features/domain_blocks\" */'../../domain_blocks');\n}\n\nexport function Mutes () {\n  return import(/* webpackChunkName: \"features/mutes\" */'../../mutes');\n}\n\nexport function MuteModal () {\n  return import(/* webpackChunkName: \"modals/mute_modal\" */'../components/mute_modal');\n}\n\nexport function BlockModal () {\n  return import(/* webpackChunkName: \"modals/block_modal\" */'../components/block_modal');\n}\n\nexport function ReportModal () {\n  return import(/* webpackChunkName: \"modals/report_modal\" */'../components/report_modal');\n}\n\nexport function MediaGallery () {\n  return import(/* webpackChunkName: \"status/media_gallery\" */'../../../components/media_gallery');\n}\n\nexport function Video () {\n  return import(/* webpackChunkName: \"features/video\" */'../../video');\n}\n\nexport function EmbedModal () {\n  return import(/* webpackChunkName: \"modals/embed_modal\" */'../components/embed_modal');\n}\n\nexport function ListEditor () {\n  return import(/* webpackChunkName: \"features/list_editor\" */'../../list_editor');\n}\n\nexport function ListAdder () {\n  return import(/*webpackChunkName: \"features/list_adder\" */'../../list_adder');\n}\n\nexport function Tesseract () {\n  return import(/*webpackChunkName: \"tesseract\" */'tesseract.js');\n}\n\nexport function Audio () {\n  return import(/* webpackChunkName: \"features/audio\" */'../../audio');\n}\n\nexport function Directory () {\n  return import(/* webpackChunkName: \"features/directory\" */'../../directory');\n}\n\nexport function FollowRecommendations () {\n  return import(/* webpackChunkName: \"features/follow_recommendations\" */'../../follow_recommendations');\n}\n\nexport function CompareHistoryModal () {\n  return import(/*webpackChunkName: \"modals/compare_history_modal\" */'../components/compare_history_modal');\n}\n\nexport function Explore () {\n  return import(/* webpackChunkName: \"features/explore\" */'../../explore');\n}\n\nexport function FilterModal () {\n  return import(/*webpackChunkName: \"modals/filter_modal\" */'../components/filter_modal');\n}\n\nexport function InteractionModal () {\n  return import(/*webpackChunkName: \"modals/interaction_modal\" */'../../interaction_modal');\n}\n\nexport function SubscribedLanguagesModal () {\n  return import(/*webpackChunkName: \"modals/subscribed_languages_modal\" */'../../subscribed_languages_modal');\n}\n\nexport function ClosedRegistrationsModal () {\n  return import(/*webpackChunkName: \"modals/closed_registrations_modal\" */'../../closed_registrations_modal');\n}\n\nexport function About () {\n  return import(/*webpackChunkName: \"features/about\" */'../../about');\n}\n\nexport function PrivacyPolicy () {\n  return import(/*webpackChunkName: \"features/privacy_policy\" */'../../privacy_policy');\n}\n","import api from '../api';\n\nimport { deleteFromTimelines } from './timelines';\nimport { importFetchedStatus, importFetchedStatuses, importFetchedAccount } from './importer';\nimport { ensureComposeIsVisible, setComposeToStatus } from './compose';\n\nexport const STATUS_FETCH_REQUEST = 'STATUS_FETCH_REQUEST';\nexport const STATUS_FETCH_SUCCESS = 'STATUS_FETCH_SUCCESS';\nexport const STATUS_FETCH_FAIL    = 'STATUS_FETCH_FAIL';\n\nexport const STATUS_DELETE_REQUEST = 'STATUS_DELETE_REQUEST';\nexport const STATUS_DELETE_SUCCESS = 'STATUS_DELETE_SUCCESS';\nexport const STATUS_DELETE_FAIL    = 'STATUS_DELETE_FAIL';\n\nexport const CONTEXT_FETCH_REQUEST = 'CONTEXT_FETCH_REQUEST';\nexport const CONTEXT_FETCH_SUCCESS = 'CONTEXT_FETCH_SUCCESS';\nexport const CONTEXT_FETCH_FAIL    = 'CONTEXT_FETCH_FAIL';\n\nexport const STATUS_MUTE_REQUEST = 'STATUS_MUTE_REQUEST';\nexport const STATUS_MUTE_SUCCESS = 'STATUS_MUTE_SUCCESS';\nexport const STATUS_MUTE_FAIL    = 'STATUS_MUTE_FAIL';\n\nexport const STATUS_UNMUTE_REQUEST = 'STATUS_UNMUTE_REQUEST';\nexport const STATUS_UNMUTE_SUCCESS = 'STATUS_UNMUTE_SUCCESS';\nexport const STATUS_UNMUTE_FAIL    = 'STATUS_UNMUTE_FAIL';\n\nexport const STATUS_REVEAL   = 'STATUS_REVEAL';\nexport const STATUS_HIDE     = 'STATUS_HIDE';\nexport const STATUS_COLLAPSE = 'STATUS_COLLAPSE';\n\nexport const REDRAFT = 'REDRAFT';\n\nexport const STATUS_FETCH_SOURCE_REQUEST = 'STATUS_FETCH_SOURCE_REQUEST';\nexport const STATUS_FETCH_SOURCE_SUCCESS = 'STATUS_FETCH_SOURCE_SUCCESS';\nexport const STATUS_FETCH_SOURCE_FAIL    = 'STATUS_FETCH_SOURCE_FAIL';\n\nexport const STATUS_TRANSLATE_REQUEST = 'STATUS_TRANSLATE_REQUEST';\nexport const STATUS_TRANSLATE_SUCCESS = 'STATUS_TRANSLATE_SUCCESS';\nexport const STATUS_TRANSLATE_FAIL    = 'STATUS_TRANSLATE_FAIL';\nexport const STATUS_TRANSLATE_UNDO    = 'STATUS_TRANSLATE_UNDO';\n\nexport function fetchStatusRequest(id, skipLoading) {\n  return {\n    type: STATUS_FETCH_REQUEST,\n    id,\n    skipLoading,\n  };\n}\n\nexport function fetchStatus(id, forceFetch = false) {\n  return (dispatch, getState) => {\n    const skipLoading = !forceFetch && getState().getIn(['statuses', id], null) !== null;\n\n    dispatch(fetchContext(id));\n\n    if (skipLoading) {\n      return;\n    }\n\n    dispatch(fetchStatusRequest(id, skipLoading));\n\n    api(getState).get(`/api/v1/statuses/${id}`).then(response => {\n      dispatch(importFetchedStatus(response.data));\n      dispatch(fetchStatusSuccess(skipLoading));\n    }).catch(error => {\n      dispatch(fetchStatusFail(id, error, skipLoading));\n    });\n  };\n}\n\nexport function fetchStatusSuccess(skipLoading) {\n  return {\n    type: STATUS_FETCH_SUCCESS,\n    skipLoading,\n  };\n}\n\nexport function fetchStatusFail(id, error, skipLoading) {\n  return {\n    type: STATUS_FETCH_FAIL,\n    id,\n    error,\n    skipLoading,\n    skipAlert: true,\n  };\n}\n\nexport function redraft(status, raw_text) {\n  return {\n    type: REDRAFT,\n    status,\n    raw_text,\n  };\n}\n\nexport const editStatus = (id, routerHistory) => (dispatch, getState) => {\n  let status = getState().getIn(['statuses', id]);\n\n  if (status.get('poll')) {\n    status = status.set('poll', getState().getIn(['polls', status.get('poll')]));\n  }\n\n  dispatch(fetchStatusSourceRequest());\n\n  api(getState).get(`/api/v1/statuses/${id}/source`).then(response => {\n    dispatch(fetchStatusSourceSuccess());\n    ensureComposeIsVisible(getState, routerHistory);\n    dispatch(setComposeToStatus(status, response.data.text, response.data.spoiler_text));\n  }).catch(error => {\n    dispatch(fetchStatusSourceFail(error));\n  });\n};\n\nexport const fetchStatusSourceRequest = () => ({\n  type: STATUS_FETCH_SOURCE_REQUEST,\n});\n\nexport const fetchStatusSourceSuccess = () => ({\n  type: STATUS_FETCH_SOURCE_SUCCESS,\n});\n\nexport const fetchStatusSourceFail = error => ({\n  type: STATUS_FETCH_SOURCE_FAIL,\n  error,\n});\n\nexport function deleteStatus(id, routerHistory, withRedraft = false) {\n  return (dispatch, getState) => {\n    let status = getState().getIn(['statuses', id]);\n\n    if (status.get('poll')) {\n      status = status.set('poll', getState().getIn(['polls', status.get('poll')]));\n    }\n\n    dispatch(deleteStatusRequest(id));\n\n    api(getState).delete(`/api/v1/statuses/${id}`).then(response => {\n      dispatch(deleteStatusSuccess(id));\n      dispatch(deleteFromTimelines(id));\n      dispatch(importFetchedAccount(response.data.account));\n\n      if (withRedraft) {\n        dispatch(redraft(status, response.data.text));\n        ensureComposeIsVisible(getState, routerHistory);\n      }\n    }).catch(error => {\n      dispatch(deleteStatusFail(id, error));\n    });\n  };\n}\n\nexport function deleteStatusRequest(id) {\n  return {\n    type: STATUS_DELETE_REQUEST,\n    id: id,\n  };\n}\n\nexport function deleteStatusSuccess(id) {\n  return {\n    type: STATUS_DELETE_SUCCESS,\n    id: id,\n  };\n}\n\nexport function deleteStatusFail(id, error) {\n  return {\n    type: STATUS_DELETE_FAIL,\n    id: id,\n    error: error,\n  };\n}\n\nexport const updateStatus = status => dispatch =>\n  dispatch(importFetchedStatus(status));\n\nexport function fetchContext(id) {\n  return (dispatch, getState) => {\n    dispatch(fetchContextRequest(id));\n\n    api(getState).get(`/api/v1/statuses/${id}/context`).then(response => {\n      dispatch(importFetchedStatuses(response.data.ancestors.concat(response.data.descendants)));\n      dispatch(fetchContextSuccess(id, response.data.ancestors, response.data.descendants));\n\n    }).catch(error => {\n      if (error.response && error.response.status === 404) {\n        dispatch(deleteFromTimelines(id));\n      }\n\n      dispatch(fetchContextFail(id, error));\n    });\n  };\n}\n\nexport function fetchContextRequest(id) {\n  return {\n    type: CONTEXT_FETCH_REQUEST,\n    id,\n  };\n}\n\nexport function fetchContextSuccess(id, ancestors, descendants) {\n  return {\n    type: CONTEXT_FETCH_SUCCESS,\n    id,\n    ancestors,\n    descendants,\n    statuses: ancestors.concat(descendants),\n  };\n}\n\nexport function fetchContextFail(id, error) {\n  return {\n    type: CONTEXT_FETCH_FAIL,\n    id,\n    error,\n    skipAlert: true,\n  };\n}\n\nexport function muteStatus(id) {\n  return (dispatch, getState) => {\n    dispatch(muteStatusRequest(id));\n\n    api(getState).post(`/api/v1/statuses/${id}/mute`).then(() => {\n      dispatch(muteStatusSuccess(id));\n    }).catch(error => {\n      dispatch(muteStatusFail(id, error));\n    });\n  };\n}\n\nexport function muteStatusRequest(id) {\n  return {\n    type: STATUS_MUTE_REQUEST,\n    id,\n  };\n}\n\nexport function muteStatusSuccess(id) {\n  return {\n    type: STATUS_MUTE_SUCCESS,\n    id,\n  };\n}\n\nexport function muteStatusFail(id, error) {\n  return {\n    type: STATUS_MUTE_FAIL,\n    id,\n    error,\n  };\n}\n\nexport function unmuteStatus(id) {\n  return (dispatch, getState) => {\n    dispatch(unmuteStatusRequest(id));\n\n    api(getState).post(`/api/v1/statuses/${id}/unmute`).then(() => {\n      dispatch(unmuteStatusSuccess(id));\n    }).catch(error => {\n      dispatch(unmuteStatusFail(id, error));\n    });\n  };\n}\n\nexport function unmuteStatusRequest(id) {\n  return {\n    type: STATUS_UNMUTE_REQUEST,\n    id,\n  };\n}\n\nexport function unmuteStatusSuccess(id) {\n  return {\n    type: STATUS_UNMUTE_SUCCESS,\n    id,\n  };\n}\n\nexport function unmuteStatusFail(id, error) {\n  return {\n    type: STATUS_UNMUTE_FAIL,\n    id,\n    error,\n  };\n}\n\nexport function hideStatus(ids) {\n  if (!Array.isArray(ids)) {\n    ids = [ids];\n  }\n\n  return {\n    type: STATUS_HIDE,\n    ids,\n  };\n}\n\nexport function revealStatus(ids) {\n  if (!Array.isArray(ids)) {\n    ids = [ids];\n  }\n\n  return {\n    type: STATUS_REVEAL,\n    ids,\n  };\n}\n\nexport function toggleStatusCollapse(id, isCollapsed) {\n  return {\n    type: STATUS_COLLAPSE,\n    id,\n    isCollapsed,\n  };\n}\n\nexport const translateStatus = id => (dispatch, getState) => {\n  dispatch(translateStatusRequest(id));\n\n  api(getState).post(`/api/v1/statuses/${id}/translate`).then(response => {\n    dispatch(translateStatusSuccess(id, response.data));\n  }).catch(error => {\n    dispatch(translateStatusFail(id, error));\n  });\n};\n\nexport const translateStatusRequest = id => ({\n  type: STATUS_TRANSLATE_REQUEST,\n  id,\n});\n\nexport const translateStatusSuccess = (id, translation) => ({\n  type: STATUS_TRANSLATE_SUCCESS,\n  id,\n  translation,\n});\n\nexport const translateStatusFail = (id, error) => ({\n  type: STATUS_TRANSLATE_FAIL,\n  id,\n  error,\n});\n\nexport const undoStatusTranslation = id => ({\n  type: STATUS_TRANSLATE_UNDO,\n  id,\n});\n","import api, { getLinks } from '../api';\nimport { importFetchedStatuses } from './importer';\n\nexport const TRENDS_TAGS_FETCH_REQUEST = 'TRENDS_TAGS_FETCH_REQUEST';\nexport const TRENDS_TAGS_FETCH_SUCCESS = 'TRENDS_TAGS_FETCH_SUCCESS';\nexport const TRENDS_TAGS_FETCH_FAIL    = 'TRENDS_TAGS_FETCH_FAIL';\n\nexport const TRENDS_LINKS_FETCH_REQUEST = 'TRENDS_LINKS_FETCH_REQUEST';\nexport const TRENDS_LINKS_FETCH_SUCCESS = 'TRENDS_LINKS_FETCH_SUCCESS';\nexport const TRENDS_LINKS_FETCH_FAIL    = 'TRENDS_LINKS_FETCH_FAIL';\n\nexport const TRENDS_STATUSES_FETCH_REQUEST = 'TRENDS_STATUSES_FETCH_REQUEST';\nexport const TRENDS_STATUSES_FETCH_SUCCESS = 'TRENDS_STATUSES_FETCH_SUCCESS';\nexport const TRENDS_STATUSES_FETCH_FAIL    = 'TRENDS_STATUSES_FETCH_FAIL';\n\nexport const TRENDS_STATUSES_EXPAND_REQUEST = 'TRENDS_STATUSES_EXPAND_REQUEST';\nexport const TRENDS_STATUSES_EXPAND_SUCCESS = 'TRENDS_STATUSES_EXPAND_SUCCESS';\nexport const TRENDS_STATUSES_EXPAND_FAIL    = 'TRENDS_STATUSES_EXPAND_FAIL';\n\nexport const fetchTrendingHashtags = () => (dispatch, getState) => {\n  dispatch(fetchTrendingHashtagsRequest());\n\n  api(getState)\n    .get('/api/v1/trends/tags')\n    .then(({ data }) => dispatch(fetchTrendingHashtagsSuccess(data)))\n    .catch(err => dispatch(fetchTrendingHashtagsFail(err)));\n};\n\nexport const fetchTrendingHashtagsRequest = () => ({\n  type: TRENDS_TAGS_FETCH_REQUEST,\n  skipLoading: true,\n});\n\nexport const fetchTrendingHashtagsSuccess = trends => ({\n  type: TRENDS_TAGS_FETCH_SUCCESS,\n  trends,\n  skipLoading: true,\n});\n\nexport const fetchTrendingHashtagsFail = error => ({\n  type: TRENDS_TAGS_FETCH_FAIL,\n  error,\n  skipLoading: true,\n  skipAlert: true,\n});\n\nexport const fetchTrendingLinks = () => (dispatch, getState) => {\n  dispatch(fetchTrendingLinksRequest());\n\n  api(getState)\n    .get('/api/v1/trends/links')\n    .then(({ data }) => dispatch(fetchTrendingLinksSuccess(data)))\n    .catch(err => dispatch(fetchTrendingLinksFail(err)));\n};\n\nexport const fetchTrendingLinksRequest = () => ({\n  type: TRENDS_LINKS_FETCH_REQUEST,\n  skipLoading: true,\n});\n\nexport const fetchTrendingLinksSuccess = trends => ({\n  type: TRENDS_LINKS_FETCH_SUCCESS,\n  trends,\n  skipLoading: true,\n});\n\nexport const fetchTrendingLinksFail = error => ({\n  type: TRENDS_LINKS_FETCH_FAIL,\n  error,\n  skipLoading: true,\n  skipAlert: true,\n});\n\nexport const fetchTrendingStatuses = () => (dispatch, getState) => {\n  if (getState().getIn(['status_lists', 'trending', 'isLoading'])) {\n    return;\n  }\n\n  dispatch(fetchTrendingStatusesRequest());\n\n  api(getState).get('/api/v1/trends/statuses').then(response => {\n    const next = getLinks(response).refs.find(link => link.rel === 'next');\n    dispatch(importFetchedStatuses(response.data));\n    dispatch(fetchTrendingStatusesSuccess(response.data, next ? next.uri : null));\n  }).catch(err => dispatch(fetchTrendingStatusesFail(err)));\n};\n\nexport const fetchTrendingStatusesRequest = () => ({\n  type: TRENDS_STATUSES_FETCH_REQUEST,\n  skipLoading: true,\n});\n\nexport const fetchTrendingStatusesSuccess = (statuses, next) => ({\n  type: TRENDS_STATUSES_FETCH_SUCCESS,\n  statuses,\n  next,\n  skipLoading: true,\n});\n\nexport const fetchTrendingStatusesFail = error => ({\n  type: TRENDS_STATUSES_FETCH_FAIL,\n  error,\n  skipLoading: true,\n  skipAlert: true,\n});\n\n\nexport const expandTrendingStatuses = () => (dispatch, getState) => {\n  const url = getState().getIn(['status_lists', 'trending', 'next'], null);\n\n  if (url === null || getState().getIn(['status_lists', 'trending', 'isLoading'])) {\n    return;\n  }\n\n  dispatch(expandTrendingStatusesRequest());\n\n  api(getState).get(url).then(response => {\n    const next = getLinks(response).refs.find(link => link.rel === 'next');\n    dispatch(importFetchedStatuses(response.data));\n    dispatch(expandTrendingStatusesSuccess(response.data, next ? next.uri : null));\n  }).catch(error => {\n    dispatch(expandTrendingStatusesFail(error));\n  });\n};\n\nexport const expandTrendingStatusesRequest = () => ({\n  type: TRENDS_STATUSES_EXPAND_REQUEST,\n});\n\nexport const expandTrendingStatusesSuccess = (statuses, next) => ({\n  type: TRENDS_STATUSES_EXPAND_SUCCESS,\n  statuses,\n  next,\n});\n\nexport const expandTrendingStatusesFail = error => ({\n  type: TRENDS_STATUSES_EXPAND_FAIL,\n  error,\n});\n","import api, { getLinks } from '../api';\n\nexport const DOMAIN_BLOCK_REQUEST = 'DOMAIN_BLOCK_REQUEST';\nexport const DOMAIN_BLOCK_SUCCESS = 'DOMAIN_BLOCK_SUCCESS';\nexport const DOMAIN_BLOCK_FAIL    = 'DOMAIN_BLOCK_FAIL';\n\nexport const DOMAIN_UNBLOCK_REQUEST = 'DOMAIN_UNBLOCK_REQUEST';\nexport const DOMAIN_UNBLOCK_SUCCESS = 'DOMAIN_UNBLOCK_SUCCESS';\nexport const DOMAIN_UNBLOCK_FAIL    = 'DOMAIN_UNBLOCK_FAIL';\n\nexport const DOMAIN_BLOCKS_FETCH_REQUEST = 'DOMAIN_BLOCKS_FETCH_REQUEST';\nexport const DOMAIN_BLOCKS_FETCH_SUCCESS = 'DOMAIN_BLOCKS_FETCH_SUCCESS';\nexport const DOMAIN_BLOCKS_FETCH_FAIL    = 'DOMAIN_BLOCKS_FETCH_FAIL';\n\nexport const DOMAIN_BLOCKS_EXPAND_REQUEST = 'DOMAIN_BLOCKS_EXPAND_REQUEST';\nexport const DOMAIN_BLOCKS_EXPAND_SUCCESS = 'DOMAIN_BLOCKS_EXPAND_SUCCESS';\nexport const DOMAIN_BLOCKS_EXPAND_FAIL    = 'DOMAIN_BLOCKS_EXPAND_FAIL';\n\nexport function blockDomain(domain) {\n  return (dispatch, getState) => {\n    dispatch(blockDomainRequest(domain));\n\n    api(getState).post('/api/v1/domain_blocks', { domain }).then(() => {\n      const at_domain = '@' + domain;\n      const accounts = getState().get('accounts').filter(item => item.get('acct').endsWith(at_domain)).valueSeq().map(item => item.get('id'));\n\n      dispatch(blockDomainSuccess(domain, accounts));\n    }).catch(err => {\n      dispatch(blockDomainFail(domain, err));\n    });\n  };\n}\n\nexport function blockDomainRequest(domain) {\n  return {\n    type: DOMAIN_BLOCK_REQUEST,\n    domain,\n  };\n}\n\nexport function blockDomainSuccess(domain, accounts) {\n  return {\n    type: DOMAIN_BLOCK_SUCCESS,\n    domain,\n    accounts,\n  };\n}\n\nexport function blockDomainFail(domain, error) {\n  return {\n    type: DOMAIN_BLOCK_FAIL,\n    domain,\n    error,\n  };\n}\n\nexport function unblockDomain(domain) {\n  return (dispatch, getState) => {\n    dispatch(unblockDomainRequest(domain));\n\n    api(getState).delete('/api/v1/domain_blocks', { params: { domain } }).then(() => {\n      const at_domain = '@' + domain;\n      const accounts = getState().get('accounts').filter(item => item.get('acct').endsWith(at_domain)).valueSeq().map(item => item.get('id'));\n      dispatch(unblockDomainSuccess(domain, accounts));\n    }).catch(err => {\n      dispatch(unblockDomainFail(domain, err));\n    });\n  };\n}\n\nexport function unblockDomainRequest(domain) {\n  return {\n    type: DOMAIN_UNBLOCK_REQUEST,\n    domain,\n  };\n}\n\nexport function unblockDomainSuccess(domain, accounts) {\n  return {\n    type: DOMAIN_UNBLOCK_SUCCESS,\n    domain,\n    accounts,\n  };\n}\n\nexport function unblockDomainFail(domain, error) {\n  return {\n    type: DOMAIN_UNBLOCK_FAIL,\n    domain,\n    error,\n  };\n}\n\nexport function fetchDomainBlocks() {\n  return (dispatch, getState) => {\n    dispatch(fetchDomainBlocksRequest());\n\n    api(getState).get('/api/v1/domain_blocks').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(fetchDomainBlocksSuccess(response.data, next ? next.uri : null));\n    }).catch(err => {\n      dispatch(fetchDomainBlocksFail(err));\n    });\n  };\n}\n\nexport function fetchDomainBlocksRequest() {\n  return {\n    type: DOMAIN_BLOCKS_FETCH_REQUEST,\n  };\n}\n\nexport function fetchDomainBlocksSuccess(domains, next) {\n  return {\n    type: DOMAIN_BLOCKS_FETCH_SUCCESS,\n    domains,\n    next,\n  };\n}\n\nexport function fetchDomainBlocksFail(error) {\n  return {\n    type: DOMAIN_BLOCKS_FETCH_FAIL,\n    error,\n  };\n}\n\nexport function expandDomainBlocks() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['domain_lists', 'blocks', 'next']);\n\n    if (!url) {\n      return;\n    }\n\n    dispatch(expandDomainBlocksRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(expandDomainBlocksSuccess(response.data, next ? next.uri : null));\n    }).catch(err => {\n      dispatch(expandDomainBlocksFail(err));\n    });\n  };\n}\n\nexport function expandDomainBlocksRequest() {\n  return {\n    type: DOMAIN_BLOCKS_EXPAND_REQUEST,\n  };\n}\n\nexport function expandDomainBlocksSuccess(domains, next) {\n  return {\n    type: DOMAIN_BLOCKS_EXPAND_SUCCESS,\n    domains,\n    next,\n  };\n}\n\nexport function expandDomainBlocksFail(error) {\n  return {\n    type: DOMAIN_BLOCKS_EXPAND_FAIL,\n    error,\n  };\n}\n","import api, { getLinks } from '../api';\n\nexport const HASHTAG_FETCH_REQUEST = 'HASHTAG_FETCH_REQUEST';\nexport const HASHTAG_FETCH_SUCCESS = 'HASHTAG_FETCH_SUCCESS';\nexport const HASHTAG_FETCH_FAIL    = 'HASHTAG_FETCH_FAIL';\n\nexport const FOLLOWED_HASHTAGS_FETCH_REQUEST = 'FOLLOWED_HASHTAGS_FETCH_REQUEST';\nexport const FOLLOWED_HASHTAGS_FETCH_SUCCESS = 'FOLLOWED_HASHTAGS_FETCH_SUCCESS';\nexport const FOLLOWED_HASHTAGS_FETCH_FAIL    = 'FOLLOWED_HASHTAGS_FETCH_FAIL';\n\nexport const FOLLOWED_HASHTAGS_EXPAND_REQUEST = 'FOLLOWED_HASHTAGS_EXPAND_REQUEST';\nexport const FOLLOWED_HASHTAGS_EXPAND_SUCCESS = 'FOLLOWED_HASHTAGS_EXPAND_SUCCESS';\nexport const FOLLOWED_HASHTAGS_EXPAND_FAIL    = 'FOLLOWED_HASHTAGS_EXPAND_FAIL';\n\nexport const HASHTAG_FOLLOW_REQUEST = 'HASHTAG_FOLLOW_REQUEST';\nexport const HASHTAG_FOLLOW_SUCCESS = 'HASHTAG_FOLLOW_SUCCESS';\nexport const HASHTAG_FOLLOW_FAIL    = 'HASHTAG_FOLLOW_FAIL';\n\nexport const HASHTAG_UNFOLLOW_REQUEST = 'HASHTAG_UNFOLLOW_REQUEST';\nexport const HASHTAG_UNFOLLOW_SUCCESS = 'HASHTAG_UNFOLLOW_SUCCESS';\nexport const HASHTAG_UNFOLLOW_FAIL    = 'HASHTAG_UNFOLLOW_FAIL';\n\nexport const fetchHashtag = name => (dispatch, getState) => {\n  dispatch(fetchHashtagRequest());\n\n  api(getState).get(`/api/v1/tags/${name}`).then(({ data }) => {\n    dispatch(fetchHashtagSuccess(name, data));\n  }).catch(err => {\n    dispatch(fetchHashtagFail(err));\n  });\n};\n\nexport const fetchHashtagRequest = () => ({\n  type: HASHTAG_FETCH_REQUEST,\n});\n\nexport const fetchHashtagSuccess = (name, tag) => ({\n  type: HASHTAG_FETCH_SUCCESS,\n  name,\n  tag,\n});\n\nexport const fetchHashtagFail = error => ({\n  type: HASHTAG_FETCH_FAIL,\n  error,\n});\n\nexport const fetchFollowedHashtags = () => (dispatch, getState) => {\n  dispatch(fetchFollowedHashtagsRequest());\n\n  api(getState).get('/api/v1/followed_tags').then(response => {\n    const next = getLinks(response).refs.find(link => link.rel === 'next');\n    dispatch(fetchFollowedHashtagsSuccess(response.data, next ? next.uri : null));\n  }).catch(err => {\n    dispatch(fetchFollowedHashtagsFail(err));\n  });\n};\n\nexport function fetchFollowedHashtagsRequest() {\n  return {\n    type: FOLLOWED_HASHTAGS_FETCH_REQUEST,\n  };\n}\n\nexport function fetchFollowedHashtagsSuccess(followed_tags, next) {\n  return {\n    type: FOLLOWED_HASHTAGS_FETCH_SUCCESS,\n    followed_tags,\n    next,\n  };\n}\n\nexport function fetchFollowedHashtagsFail(error) {\n  return {\n    type: FOLLOWED_HASHTAGS_FETCH_FAIL,\n    error,\n  };\n}\n\nexport function expandFollowedHashtags() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['followed_tags', 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandFollowedHashtagsRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(expandFollowedHashtagsSuccess(response.data, next ? next.uri : null));\n    }).catch(error => {\n      dispatch(expandFollowedHashtagsFail(error));\n    });\n  };\n}\n\nexport function expandFollowedHashtagsRequest() {\n  return {\n    type: FOLLOWED_HASHTAGS_EXPAND_REQUEST,\n  };\n}\n\nexport function expandFollowedHashtagsSuccess(followed_tags, next) {\n  return {\n    type: FOLLOWED_HASHTAGS_EXPAND_SUCCESS,\n    followed_tags,\n    next,\n  };\n}\n\nexport function expandFollowedHashtagsFail(error) {\n  return {\n    type: FOLLOWED_HASHTAGS_EXPAND_FAIL,\n    error,\n  };\n}\n\nexport const followHashtag = name => (dispatch, getState) => {\n  dispatch(followHashtagRequest(name));\n\n  api(getState).post(`/api/v1/tags/${name}/follow`).then(({ data }) => {\n    dispatch(followHashtagSuccess(name, data));\n  }).catch(err => {\n    dispatch(followHashtagFail(name, err));\n  });\n};\n\nexport const followHashtagRequest = name => ({\n  type: HASHTAG_FOLLOW_REQUEST,\n  name,\n});\n\nexport const followHashtagSuccess = (name, tag) => ({\n  type: HASHTAG_FOLLOW_SUCCESS,\n  name,\n  tag,\n});\n\nexport const followHashtagFail = (name, error) => ({\n  type: HASHTAG_FOLLOW_FAIL,\n  name,\n  error,\n});\n\nexport const unfollowHashtag = name => (dispatch, getState) => {\n  dispatch(unfollowHashtagRequest(name));\n\n  api(getState).post(`/api/v1/tags/${name}/unfollow`).then(({ data }) => {\n    dispatch(unfollowHashtagSuccess(name, data));\n  }).catch(err => {\n    dispatch(unfollowHashtagFail(name, err));\n  });\n};\n\nexport const unfollowHashtagRequest = name => ({\n  type: HASHTAG_UNFOLLOW_REQUEST,\n  name,\n});\n\nexport const unfollowHashtagSuccess = (name, tag) => ({\n  type: HASHTAG_UNFOLLOW_SUCCESS,\n  name,\n  tag,\n});\n\nexport const unfollowHashtagFail = (name, error) => ({\n  type: HASHTAG_UNFOLLOW_FAIL,\n  name,\n  error,\n});\n","import api from '../api';\nimport { normalizeAnnouncement } from './importer/normalizer';\n\nexport const ANNOUNCEMENTS_FETCH_REQUEST = 'ANNOUNCEMENTS_FETCH_REQUEST';\nexport const ANNOUNCEMENTS_FETCH_SUCCESS = 'ANNOUNCEMENTS_FETCH_SUCCESS';\nexport const ANNOUNCEMENTS_FETCH_FAIL    = 'ANNOUNCEMENTS_FETCH_FAIL';\nexport const ANNOUNCEMENTS_UPDATE        = 'ANNOUNCEMENTS_UPDATE';\nexport const ANNOUNCEMENTS_DELETE        = 'ANNOUNCEMENTS_DELETE';\n\nexport const ANNOUNCEMENTS_DISMISS_REQUEST = 'ANNOUNCEMENTS_DISMISS_REQUEST';\nexport const ANNOUNCEMENTS_DISMISS_SUCCESS = 'ANNOUNCEMENTS_DISMISS_SUCCESS';\nexport const ANNOUNCEMENTS_DISMISS_FAIL    = 'ANNOUNCEMENTS_DISMISS_FAIL';\n\nexport const ANNOUNCEMENTS_REACTION_ADD_REQUEST = 'ANNOUNCEMENTS_REACTION_ADD_REQUEST';\nexport const ANNOUNCEMENTS_REACTION_ADD_SUCCESS = 'ANNOUNCEMENTS_REACTION_ADD_SUCCESS';\nexport const ANNOUNCEMENTS_REACTION_ADD_FAIL    = 'ANNOUNCEMENTS_REACTION_ADD_FAIL';\n\nexport const ANNOUNCEMENTS_REACTION_REMOVE_REQUEST = 'ANNOUNCEMENTS_REACTION_REMOVE_REQUEST';\nexport const ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS = 'ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS';\nexport const ANNOUNCEMENTS_REACTION_REMOVE_FAIL    = 'ANNOUNCEMENTS_REACTION_REMOVE_FAIL';\n\nexport const ANNOUNCEMENTS_REACTION_UPDATE = 'ANNOUNCEMENTS_REACTION_UPDATE';\n\nexport const ANNOUNCEMENTS_TOGGLE_SHOW = 'ANNOUNCEMENTS_TOGGLE_SHOW';\n\nconst noOp = () => {};\n\nexport const fetchAnnouncements = (done = noOp) => (dispatch, getState) => {\n  dispatch(fetchAnnouncementsRequest());\n\n  api(getState).get('/api/v1/announcements').then(response => {\n    dispatch(fetchAnnouncementsSuccess(response.data.map(x => normalizeAnnouncement(x))));\n  }).catch(error => {\n    dispatch(fetchAnnouncementsFail(error));\n  }).finally(() => {\n    done();\n  });\n};\n\nexport const fetchAnnouncementsRequest = () => ({\n  type: ANNOUNCEMENTS_FETCH_REQUEST,\n  skipLoading: true,\n});\n\nexport const fetchAnnouncementsSuccess = announcements => ({\n  type: ANNOUNCEMENTS_FETCH_SUCCESS,\n  announcements,\n  skipLoading: true,\n});\n\nexport const fetchAnnouncementsFail= error => ({\n  type: ANNOUNCEMENTS_FETCH_FAIL,\n  error,\n  skipLoading: true,\n  skipAlert: true,\n});\n\nexport const updateAnnouncements = announcement => ({\n  type: ANNOUNCEMENTS_UPDATE,\n  announcement: normalizeAnnouncement(announcement),\n});\n\nexport const dismissAnnouncement = announcementId => (dispatch, getState) => {\n  dispatch(dismissAnnouncementRequest(announcementId));\n\n  api(getState).post(`/api/v1/announcements/${announcementId}/dismiss`).then(() => {\n    dispatch(dismissAnnouncementSuccess(announcementId));\n  }).catch(error => {\n    dispatch(dismissAnnouncementFail(announcementId, error));\n  });\n};\n\nexport const dismissAnnouncementRequest = announcementId => ({\n  type: ANNOUNCEMENTS_DISMISS_REQUEST,\n  id: announcementId,\n});\n\nexport const dismissAnnouncementSuccess = announcementId => ({\n  type: ANNOUNCEMENTS_DISMISS_SUCCESS,\n  id: announcementId,\n});\n\nexport const dismissAnnouncementFail = (announcementId, error) => ({\n  type: ANNOUNCEMENTS_DISMISS_FAIL,\n  id: announcementId,\n  error,\n});\n\nexport const addReaction = (announcementId, name) => (dispatch, getState) => {\n  const announcement = getState().getIn(['announcements', 'items']).find(x => x.get('id') === announcementId);\n\n  let alreadyAdded = false;\n\n  if (announcement) {\n    const reaction = announcement.get('reactions').find(x => x.get('name') === name);\n    if (reaction && reaction.get('me')) {\n      alreadyAdded = true;\n    }\n  }\n\n  if (!alreadyAdded) {\n    dispatch(addReactionRequest(announcementId, name, alreadyAdded));\n  }\n\n  api(getState).put(`/api/v1/announcements/${announcementId}/reactions/${encodeURIComponent(name)}`).then(() => {\n    dispatch(addReactionSuccess(announcementId, name, alreadyAdded));\n  }).catch(err => {\n    if (!alreadyAdded) {\n      dispatch(addReactionFail(announcementId, name, err));\n    }\n  });\n};\n\nexport const addReactionRequest = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_ADD_REQUEST,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const addReactionSuccess = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_ADD_SUCCESS,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const addReactionFail = (announcementId, name, error) => ({\n  type: ANNOUNCEMENTS_REACTION_ADD_FAIL,\n  id: announcementId,\n  name,\n  error,\n  skipLoading: true,\n});\n\nexport const removeReaction = (announcementId, name) => (dispatch, getState) => {\n  dispatch(removeReactionRequest(announcementId, name));\n\n  api(getState).delete(`/api/v1/announcements/${announcementId}/reactions/${encodeURIComponent(name)}`).then(() => {\n    dispatch(removeReactionSuccess(announcementId, name));\n  }).catch(err => {\n    dispatch(removeReactionFail(announcementId, name, err));\n  });\n};\n\nexport const removeReactionRequest = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_REMOVE_REQUEST,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const removeReactionSuccess = (announcementId, name) => ({\n  type: ANNOUNCEMENTS_REACTION_REMOVE_SUCCESS,\n  id: announcementId,\n  name,\n  skipLoading: true,\n});\n\nexport const removeReactionFail = (announcementId, name, error) => ({\n  type: ANNOUNCEMENTS_REACTION_REMOVE_FAIL,\n  id: announcementId,\n  name,\n  error,\n  skipLoading: true,\n});\n\nexport const updateReaction = reaction => ({\n  type: ANNOUNCEMENTS_REACTION_UPDATE,\n  reaction,\n});\n\nexport const toggleShowAnnouncements = () => ({\n  type: ANNOUNCEMENTS_TOGGLE_SHOW,\n});\n\nexport const deleteAnnouncement = id => ({\n  type: ANNOUNCEMENTS_DELETE,\n  id,\n});\n","import { Iterable, fromJS } from 'immutable';\nimport { hydrateCompose } from './compose';\nimport { importFetchedAccounts } from './importer';\n\nexport const STORE_HYDRATE = 'STORE_HYDRATE';\nexport const STORE_HYDRATE_LAZY = 'STORE_HYDRATE_LAZY';\n\nconst convertState = rawState =>\n  fromJS(rawState, (k, v) =>\n    Iterable.isIndexed(v) ? v.toList() : v.toMap());\n\nexport function hydrateStore(rawState) {\n  return dispatch => {\n    const state = convertState(rawState);\n\n    dispatch({\n      type: STORE_HYDRATE,\n      state,\n    });\n\n    dispatch(hydrateCompose());\n    dispatch(importFetchedAccounts(Object.values(rawState.accounts)));\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport default class Button extends React.PureComponent {\n\n  static propTypes = {\n    text: PropTypes.node,\n    type: PropTypes.string,\n    onClick: PropTypes.func,\n    disabled: PropTypes.bool,\n    block: PropTypes.bool,\n    secondary: PropTypes.bool,\n    className: PropTypes.string,\n    title: PropTypes.string,\n    children: PropTypes.node,\n  };\n\n  static defaultProps = {\n    type: 'button',\n  };\n\n  handleClick = (e) => {\n    if (!this.props.disabled && this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  setRef = (c) => {\n    this.node = c;\n  };\n\n  focus() {\n    this.node.focus();\n  }\n\n  render () {\n    const className = classNames('button', this.props.className, {\n      'button-secondary': this.props.secondary,\n      'button--block': this.props.block,\n    });\n\n    return (\n      <button\n        className={className}\n        disabled={this.props.disabled}\n        onClick={this.handleClick}\n        ref={this.setRef}\n        title={this.props.title}\n        type={this.props.type}\n      >\n        {this.props.text || this.props.children}\n      </button>\n    );\n  }\n\n}\n","import api, { getLinks } from '../api';\nimport { fetchRelationships } from './accounts';\nimport { importFetchedAccounts } from './importer';\nimport { openModal } from './modal';\n\nexport const MUTES_FETCH_REQUEST = 'MUTES_FETCH_REQUEST';\nexport const MUTES_FETCH_SUCCESS = 'MUTES_FETCH_SUCCESS';\nexport const MUTES_FETCH_FAIL    = 'MUTES_FETCH_FAIL';\n\nexport const MUTES_EXPAND_REQUEST = 'MUTES_EXPAND_REQUEST';\nexport const MUTES_EXPAND_SUCCESS = 'MUTES_EXPAND_SUCCESS';\nexport const MUTES_EXPAND_FAIL    = 'MUTES_EXPAND_FAIL';\n\nexport const MUTES_INIT_MODAL = 'MUTES_INIT_MODAL';\nexport const MUTES_TOGGLE_HIDE_NOTIFICATIONS = 'MUTES_TOGGLE_HIDE_NOTIFICATIONS';\nexport const MUTES_CHANGE_DURATION = 'MUTES_CHANGE_DURATION';\n\nexport function fetchMutes() {\n  return (dispatch, getState) => {\n    dispatch(fetchMutesRequest());\n\n    api(getState).get('/api/v1/mutes').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchMutesSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => dispatch(fetchMutesFail(error)));\n  };\n}\n\nexport function fetchMutesRequest() {\n  return {\n    type: MUTES_FETCH_REQUEST,\n  };\n}\n\nexport function fetchMutesSuccess(accounts, next) {\n  return {\n    type: MUTES_FETCH_SUCCESS,\n    accounts,\n    next,\n  };\n}\n\nexport function fetchMutesFail(error) {\n  return {\n    type: MUTES_FETCH_FAIL,\n    error,\n  };\n}\n\nexport function expandMutes() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['user_lists', 'mutes', 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandMutesRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandMutesSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => dispatch(expandMutesFail(error)));\n  };\n}\n\nexport function expandMutesRequest() {\n  return {\n    type: MUTES_EXPAND_REQUEST,\n  };\n}\n\nexport function expandMutesSuccess(accounts, next) {\n  return {\n    type: MUTES_EXPAND_SUCCESS,\n    accounts,\n    next,\n  };\n}\n\nexport function expandMutesFail(error) {\n  return {\n    type: MUTES_EXPAND_FAIL,\n    error,\n  };\n}\n\nexport function initMuteModal(account) {\n  return dispatch => {\n    dispatch({\n      type: MUTES_INIT_MODAL,\n      account,\n    });\n\n    dispatch(openModal('MUTE'));\n  };\n}\n\nexport function toggleHideNotifications() {\n  return dispatch => {\n    dispatch({ type: MUTES_TOGGLE_HIDE_NOTIFICATIONS });\n  };\n}\n\nexport function changeMuteDuration(duration) {\n  return dispatch => {\n    dispatch({\n      type: MUTES_CHANGE_DURATION,\n      duration,\n    });\n  };\n}\n","import api from '../api';\nimport { importFetchedAccount } from './importer';\n\nexport const SERVER_FETCH_REQUEST = 'Server_FETCH_REQUEST';\nexport const SERVER_FETCH_SUCCESS = 'Server_FETCH_SUCCESS';\nexport const SERVER_FETCH_FAIL    = 'Server_FETCH_FAIL';\n\nexport const EXTENDED_DESCRIPTION_REQUEST = 'EXTENDED_DESCRIPTION_REQUEST';\nexport const EXTENDED_DESCRIPTION_SUCCESS = 'EXTENDED_DESCRIPTION_SUCCESS';\nexport const EXTENDED_DESCRIPTION_FAIL    = 'EXTENDED_DESCRIPTION_FAIL';\n\nexport const SERVER_DOMAIN_BLOCKS_FETCH_REQUEST = 'SERVER_DOMAIN_BLOCKS_FETCH_REQUEST';\nexport const SERVER_DOMAIN_BLOCKS_FETCH_SUCCESS = 'SERVER_DOMAIN_BLOCKS_FETCH_SUCCESS';\nexport const SERVER_DOMAIN_BLOCKS_FETCH_FAIL    = 'SERVER_DOMAIN_BLOCKS_FETCH_FAIL';\n\nexport const fetchServer = () => (dispatch, getState) => {\n  dispatch(fetchServerRequest());\n\n  api(getState)\n    .get('/api/v2/instance').then(({ data }) => {\n      if (data.contact.account) dispatch(importFetchedAccount(data.contact.account));\n      dispatch(fetchServerSuccess(data));\n    }).catch(err => dispatch(fetchServerFail(err)));\n};\n\nconst fetchServerRequest = () => ({\n  type: SERVER_FETCH_REQUEST,\n});\n\nconst fetchServerSuccess = server => ({\n  type: SERVER_FETCH_SUCCESS,\n  server,\n});\n\nconst fetchServerFail = error => ({\n  type: SERVER_FETCH_FAIL,\n  error,\n});\n\nexport const fetchExtendedDescription = () => (dispatch, getState) => {\n  dispatch(fetchExtendedDescriptionRequest());\n\n  api(getState)\n    .get('/api/v1/instance/extended_description')\n    .then(({ data }) => dispatch(fetchExtendedDescriptionSuccess(data)))\n    .catch(err => dispatch(fetchExtendedDescriptionFail(err)));\n};\n\nconst fetchExtendedDescriptionRequest = () => ({\n  type: EXTENDED_DESCRIPTION_REQUEST,\n});\n\nconst fetchExtendedDescriptionSuccess = description => ({\n  type: EXTENDED_DESCRIPTION_SUCCESS,\n  description,\n});\n\nconst fetchExtendedDescriptionFail = error => ({\n  type: EXTENDED_DESCRIPTION_FAIL,\n  error,\n});\n\nexport const fetchDomainBlocks = () => (dispatch, getState) => {\n  dispatch(fetchDomainBlocksRequest());\n\n  api(getState)\n    .get('/api/v1/instance/domain_blocks')\n    .then(({ data }) => dispatch(fetchDomainBlocksSuccess(true, data)))\n    .catch(err => {\n      if (err.response.status === 404) {\n        dispatch(fetchDomainBlocksSuccess(false, []));\n      } else {\n        dispatch(fetchDomainBlocksFail(err));\n      }\n    });\n};\n\nconst fetchDomainBlocksRequest = () => ({\n  type: SERVER_DOMAIN_BLOCKS_FETCH_REQUEST,\n});\n\nconst fetchDomainBlocksSuccess = (isAvailable, blocks) => ({\n  type: SERVER_DOMAIN_BLOCKS_FETCH_SUCCESS,\n  isAvailable,\n  blocks,\n});\n\nconst fetchDomainBlocksFail = error => ({\n  type: SERVER_DOMAIN_BLOCKS_FETCH_FAIL,\n  error,\n});\n","import api, { getLinks } from '../api';\nimport { importFetchedAccount, importFetchedAccounts } from './importer';\n\nexport const ACCOUNT_FETCH_REQUEST = 'ACCOUNT_FETCH_REQUEST';\nexport const ACCOUNT_FETCH_SUCCESS = 'ACCOUNT_FETCH_SUCCESS';\nexport const ACCOUNT_FETCH_FAIL    = 'ACCOUNT_FETCH_FAIL';\n\nexport const ACCOUNT_LOOKUP_REQUEST = 'ACCOUNT_LOOKUP_REQUEST';\nexport const ACCOUNT_LOOKUP_SUCCESS = 'ACCOUNT_LOOKUP_SUCCESS';\nexport const ACCOUNT_LOOKUP_FAIL    = 'ACCOUNT_LOOKUP_FAIL';\n\nexport const ACCOUNT_FOLLOW_REQUEST = 'ACCOUNT_FOLLOW_REQUEST';\nexport const ACCOUNT_FOLLOW_SUCCESS = 'ACCOUNT_FOLLOW_SUCCESS';\nexport const ACCOUNT_FOLLOW_FAIL    = 'ACCOUNT_FOLLOW_FAIL';\n\nexport const ACCOUNT_UNFOLLOW_REQUEST = 'ACCOUNT_UNFOLLOW_REQUEST';\nexport const ACCOUNT_UNFOLLOW_SUCCESS = 'ACCOUNT_UNFOLLOW_SUCCESS';\nexport const ACCOUNT_UNFOLLOW_FAIL    = 'ACCOUNT_UNFOLLOW_FAIL';\n\nexport const ACCOUNT_BLOCK_REQUEST = 'ACCOUNT_BLOCK_REQUEST';\nexport const ACCOUNT_BLOCK_SUCCESS = 'ACCOUNT_BLOCK_SUCCESS';\nexport const ACCOUNT_BLOCK_FAIL    = 'ACCOUNT_BLOCK_FAIL';\n\nexport const ACCOUNT_UNBLOCK_REQUEST = 'ACCOUNT_UNBLOCK_REQUEST';\nexport const ACCOUNT_UNBLOCK_SUCCESS = 'ACCOUNT_UNBLOCK_SUCCESS';\nexport const ACCOUNT_UNBLOCK_FAIL    = 'ACCOUNT_UNBLOCK_FAIL';\n\nexport const ACCOUNT_MUTE_REQUEST = 'ACCOUNT_MUTE_REQUEST';\nexport const ACCOUNT_MUTE_SUCCESS = 'ACCOUNT_MUTE_SUCCESS';\nexport const ACCOUNT_MUTE_FAIL    = 'ACCOUNT_MUTE_FAIL';\n\nexport const ACCOUNT_UNMUTE_REQUEST = 'ACCOUNT_UNMUTE_REQUEST';\nexport const ACCOUNT_UNMUTE_SUCCESS = 'ACCOUNT_UNMUTE_SUCCESS';\nexport const ACCOUNT_UNMUTE_FAIL    = 'ACCOUNT_UNMUTE_FAIL';\n\nexport const ACCOUNT_PIN_REQUEST = 'ACCOUNT_PIN_REQUEST';\nexport const ACCOUNT_PIN_SUCCESS = 'ACCOUNT_PIN_SUCCESS';\nexport const ACCOUNT_PIN_FAIL    = 'ACCOUNT_PIN_FAIL';\n\nexport const ACCOUNT_UNPIN_REQUEST = 'ACCOUNT_UNPIN_REQUEST';\nexport const ACCOUNT_UNPIN_SUCCESS = 'ACCOUNT_UNPIN_SUCCESS';\nexport const ACCOUNT_UNPIN_FAIL    = 'ACCOUNT_UNPIN_FAIL';\n\nexport const FOLLOWERS_FETCH_REQUEST = 'FOLLOWERS_FETCH_REQUEST';\nexport const FOLLOWERS_FETCH_SUCCESS = 'FOLLOWERS_FETCH_SUCCESS';\nexport const FOLLOWERS_FETCH_FAIL    = 'FOLLOWERS_FETCH_FAIL';\n\nexport const FOLLOWERS_EXPAND_REQUEST = 'FOLLOWERS_EXPAND_REQUEST';\nexport const FOLLOWERS_EXPAND_SUCCESS = 'FOLLOWERS_EXPAND_SUCCESS';\nexport const FOLLOWERS_EXPAND_FAIL    = 'FOLLOWERS_EXPAND_FAIL';\n\nexport const FOLLOWING_FETCH_REQUEST = 'FOLLOWING_FETCH_REQUEST';\nexport const FOLLOWING_FETCH_SUCCESS = 'FOLLOWING_FETCH_SUCCESS';\nexport const FOLLOWING_FETCH_FAIL    = 'FOLLOWING_FETCH_FAIL';\n\nexport const FOLLOWING_EXPAND_REQUEST = 'FOLLOWING_EXPAND_REQUEST';\nexport const FOLLOWING_EXPAND_SUCCESS = 'FOLLOWING_EXPAND_SUCCESS';\nexport const FOLLOWING_EXPAND_FAIL    = 'FOLLOWING_EXPAND_FAIL';\n\nexport const RELATIONSHIPS_FETCH_REQUEST = 'RELATIONSHIPS_FETCH_REQUEST';\nexport const RELATIONSHIPS_FETCH_SUCCESS = 'RELATIONSHIPS_FETCH_SUCCESS';\nexport const RELATIONSHIPS_FETCH_FAIL    = 'RELATIONSHIPS_FETCH_FAIL';\n\nexport const FOLLOW_REQUESTS_FETCH_REQUEST = 'FOLLOW_REQUESTS_FETCH_REQUEST';\nexport const FOLLOW_REQUESTS_FETCH_SUCCESS = 'FOLLOW_REQUESTS_FETCH_SUCCESS';\nexport const FOLLOW_REQUESTS_FETCH_FAIL    = 'FOLLOW_REQUESTS_FETCH_FAIL';\n\nexport const FOLLOW_REQUESTS_EXPAND_REQUEST = 'FOLLOW_REQUESTS_EXPAND_REQUEST';\nexport const FOLLOW_REQUESTS_EXPAND_SUCCESS = 'FOLLOW_REQUESTS_EXPAND_SUCCESS';\nexport const FOLLOW_REQUESTS_EXPAND_FAIL    = 'FOLLOW_REQUESTS_EXPAND_FAIL';\n\nexport const FOLLOW_REQUEST_AUTHORIZE_REQUEST = 'FOLLOW_REQUEST_AUTHORIZE_REQUEST';\nexport const FOLLOW_REQUEST_AUTHORIZE_SUCCESS = 'FOLLOW_REQUEST_AUTHORIZE_SUCCESS';\nexport const FOLLOW_REQUEST_AUTHORIZE_FAIL    = 'FOLLOW_REQUEST_AUTHORIZE_FAIL';\n\nexport const FOLLOW_REQUEST_REJECT_REQUEST = 'FOLLOW_REQUEST_REJECT_REQUEST';\nexport const FOLLOW_REQUEST_REJECT_SUCCESS = 'FOLLOW_REQUEST_REJECT_SUCCESS';\nexport const FOLLOW_REQUEST_REJECT_FAIL    = 'FOLLOW_REQUEST_REJECT_FAIL';\n\nexport const ACCOUNT_REVEAL = 'ACCOUNT_REVEAL';\n\nexport function fetchAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(fetchRelationships([id]));\n    dispatch(fetchAccountRequest(id));\n\n    api(getState).get(`/api/v1/accounts/${id}`).then(response => {\n      dispatch(importFetchedAccount(response.data));\n      dispatch(fetchAccountSuccess());\n    }).catch(error => {\n      dispatch(fetchAccountFail(id, error));\n    });\n  };\n}\n\nexport const lookupAccount = acct => (dispatch, getState) => {\n  dispatch(lookupAccountRequest(acct));\n\n  api(getState).get('/api/v1/accounts/lookup', { params: { acct } }).then(response => {\n    dispatch(fetchRelationships([response.data.id]));\n    dispatch(importFetchedAccount(response.data));\n    dispatch(lookupAccountSuccess());\n  }).catch(error => {\n    dispatch(lookupAccountFail(acct, error));\n  });\n};\n\nexport const lookupAccountRequest = (acct) => ({\n  type: ACCOUNT_LOOKUP_REQUEST,\n  acct,\n});\n\nexport const lookupAccountSuccess = () => ({\n  type: ACCOUNT_LOOKUP_SUCCESS,\n});\n\nexport const lookupAccountFail = (acct, error) => ({\n  type: ACCOUNT_LOOKUP_FAIL,\n  acct,\n  error,\n  skipAlert: true,\n});\n\nexport function fetchAccountRequest(id) {\n  return {\n    type: ACCOUNT_FETCH_REQUEST,\n    id,\n  };\n}\n\nexport function fetchAccountSuccess() {\n  return {\n    type: ACCOUNT_FETCH_SUCCESS,\n  };\n}\n\nexport function fetchAccountFail(id, error) {\n  return {\n    type: ACCOUNT_FETCH_FAIL,\n    id,\n    error,\n    skipAlert: true,\n  };\n}\n\nexport function followAccount(id, options = { reblogs: true }) {\n  return (dispatch, getState) => {\n    const alreadyFollowing = getState().getIn(['relationships', id, 'following']);\n    const locked = getState().getIn(['accounts', id, 'locked'], false);\n\n    dispatch(followAccountRequest(id, locked));\n\n    api(getState).post(`/api/v1/accounts/${id}/follow`, options).then(response => {\n      dispatch(followAccountSuccess(response.data, alreadyFollowing));\n    }).catch(error => {\n      dispatch(followAccountFail(error, locked));\n    });\n  };\n}\n\nexport function unfollowAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(unfollowAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/unfollow`).then(response => {\n      dispatch(unfollowAccountSuccess(response.data, getState().get('statuses')));\n    }).catch(error => {\n      dispatch(unfollowAccountFail(error));\n    });\n  };\n}\n\nexport function followAccountRequest(id, locked) {\n  return {\n    type: ACCOUNT_FOLLOW_REQUEST,\n    id,\n    locked,\n    skipLoading: true,\n  };\n}\n\nexport function followAccountSuccess(relationship, alreadyFollowing) {\n  return {\n    type: ACCOUNT_FOLLOW_SUCCESS,\n    relationship,\n    alreadyFollowing,\n    skipLoading: true,\n  };\n}\n\nexport function followAccountFail(error, locked) {\n  return {\n    type: ACCOUNT_FOLLOW_FAIL,\n    error,\n    locked,\n    skipLoading: true,\n  };\n}\n\nexport function unfollowAccountRequest(id) {\n  return {\n    type: ACCOUNT_UNFOLLOW_REQUEST,\n    id,\n    skipLoading: true,\n  };\n}\n\nexport function unfollowAccountSuccess(relationship, statuses) {\n  return {\n    type: ACCOUNT_UNFOLLOW_SUCCESS,\n    relationship,\n    statuses,\n    skipLoading: true,\n  };\n}\n\nexport function unfollowAccountFail(error) {\n  return {\n    type: ACCOUNT_UNFOLLOW_FAIL,\n    error,\n    skipLoading: true,\n  };\n}\n\nexport function blockAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(blockAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/block`).then(response => {\n      // Pass in entire statuses map so we can use it to filter stuff in different parts of the reducers\n      dispatch(blockAccountSuccess(response.data, getState().get('statuses')));\n    }).catch(error => {\n      dispatch(blockAccountFail(id, error));\n    });\n  };\n}\n\nexport function unblockAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(unblockAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/unblock`).then(response => {\n      dispatch(unblockAccountSuccess(response.data));\n    }).catch(error => {\n      dispatch(unblockAccountFail(id, error));\n    });\n  };\n}\n\nexport function blockAccountRequest(id) {\n  return {\n    type: ACCOUNT_BLOCK_REQUEST,\n    id,\n  };\n}\n\nexport function blockAccountSuccess(relationship, statuses) {\n  return {\n    type: ACCOUNT_BLOCK_SUCCESS,\n    relationship,\n    statuses,\n  };\n}\n\nexport function blockAccountFail(error) {\n  return {\n    type: ACCOUNT_BLOCK_FAIL,\n    error,\n  };\n}\n\nexport function unblockAccountRequest(id) {\n  return {\n    type: ACCOUNT_UNBLOCK_REQUEST,\n    id,\n  };\n}\n\nexport function unblockAccountSuccess(relationship) {\n  return {\n    type: ACCOUNT_UNBLOCK_SUCCESS,\n    relationship,\n  };\n}\n\nexport function unblockAccountFail(error) {\n  return {\n    type: ACCOUNT_UNBLOCK_FAIL,\n    error,\n  };\n}\n\n\nexport function muteAccount(id, notifications, duration=0) {\n  return (dispatch, getState) => {\n    dispatch(muteAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/mute`, { notifications, duration }).then(response => {\n      // Pass in entire statuses map so we can use it to filter stuff in different parts of the reducers\n      dispatch(muteAccountSuccess(response.data, getState().get('statuses')));\n    }).catch(error => {\n      dispatch(muteAccountFail(id, error));\n    });\n  };\n}\n\nexport function unmuteAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(unmuteAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/unmute`).then(response => {\n      dispatch(unmuteAccountSuccess(response.data));\n    }).catch(error => {\n      dispatch(unmuteAccountFail(id, error));\n    });\n  };\n}\n\nexport function muteAccountRequest(id) {\n  return {\n    type: ACCOUNT_MUTE_REQUEST,\n    id,\n  };\n}\n\nexport function muteAccountSuccess(relationship, statuses) {\n  return {\n    type: ACCOUNT_MUTE_SUCCESS,\n    relationship,\n    statuses,\n  };\n}\n\nexport function muteAccountFail(error) {\n  return {\n    type: ACCOUNT_MUTE_FAIL,\n    error,\n  };\n}\n\nexport function unmuteAccountRequest(id) {\n  return {\n    type: ACCOUNT_UNMUTE_REQUEST,\n    id,\n  };\n}\n\nexport function unmuteAccountSuccess(relationship) {\n  return {\n    type: ACCOUNT_UNMUTE_SUCCESS,\n    relationship,\n  };\n}\n\nexport function unmuteAccountFail(error) {\n  return {\n    type: ACCOUNT_UNMUTE_FAIL,\n    error,\n  };\n}\n\n\nexport function fetchFollowers(id) {\n  return (dispatch, getState) => {\n    dispatch(fetchFollowersRequest(id));\n\n    api(getState).get(`/api/v1/accounts/${id}/followers`).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchFollowersSuccess(id, response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => {\n      dispatch(fetchFollowersFail(id, error));\n    });\n  };\n}\n\nexport function fetchFollowersRequest(id) {\n  return {\n    type: FOLLOWERS_FETCH_REQUEST,\n    id,\n  };\n}\n\nexport function fetchFollowersSuccess(id, accounts, next) {\n  return {\n    type: FOLLOWERS_FETCH_SUCCESS,\n    id,\n    accounts,\n    next,\n  };\n}\n\nexport function fetchFollowersFail(id, error) {\n  return {\n    type: FOLLOWERS_FETCH_FAIL,\n    id,\n    error,\n    skipNotFound: true,\n  };\n}\n\nexport function expandFollowers(id) {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['user_lists', 'followers', id, 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandFollowersRequest(id));\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandFollowersSuccess(id, response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => {\n      dispatch(expandFollowersFail(id, error));\n    });\n  };\n}\n\nexport function expandFollowersRequest(id) {\n  return {\n    type: FOLLOWERS_EXPAND_REQUEST,\n    id,\n  };\n}\n\nexport function expandFollowersSuccess(id, accounts, next) {\n  return {\n    type: FOLLOWERS_EXPAND_SUCCESS,\n    id,\n    accounts,\n    next,\n  };\n}\n\nexport function expandFollowersFail(id, error) {\n  return {\n    type: FOLLOWERS_EXPAND_FAIL,\n    id,\n    error,\n  };\n}\n\nexport function fetchFollowing(id) {\n  return (dispatch, getState) => {\n    dispatch(fetchFollowingRequest(id));\n\n    api(getState).get(`/api/v1/accounts/${id}/following`).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchFollowingSuccess(id, response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => {\n      dispatch(fetchFollowingFail(id, error));\n    });\n  };\n}\n\nexport function fetchFollowingRequest(id) {\n  return {\n    type: FOLLOWING_FETCH_REQUEST,\n    id,\n  };\n}\n\nexport function fetchFollowingSuccess(id, accounts, next) {\n  return {\n    type: FOLLOWING_FETCH_SUCCESS,\n    id,\n    accounts,\n    next,\n  };\n}\n\nexport function fetchFollowingFail(id, error) {\n  return {\n    type: FOLLOWING_FETCH_FAIL,\n    id,\n    error,\n    skipNotFound: true,\n  };\n}\n\nexport function expandFollowing(id) {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['user_lists', 'following', id, 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandFollowingRequest(id));\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandFollowingSuccess(id, response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => {\n      dispatch(expandFollowingFail(id, error));\n    });\n  };\n}\n\nexport function expandFollowingRequest(id) {\n  return {\n    type: FOLLOWING_EXPAND_REQUEST,\n    id,\n  };\n}\n\nexport function expandFollowingSuccess(id, accounts, next) {\n  return {\n    type: FOLLOWING_EXPAND_SUCCESS,\n    id,\n    accounts,\n    next,\n  };\n}\n\nexport function expandFollowingFail(id, error) {\n  return {\n    type: FOLLOWING_EXPAND_FAIL,\n    id,\n    error,\n  };\n}\n\nexport function fetchRelationships(accountIds) {\n  return (dispatch, getState) => {\n    const state = getState();\n    const loadedRelationships = state.get('relationships');\n    const newAccountIds = accountIds.filter(id => loadedRelationships.get(id, null) === null);\n    const signedIn = !!state.getIn(['meta', 'me']);\n\n    if (!signedIn || newAccountIds.length === 0) {\n      return;\n    }\n\n    dispatch(fetchRelationshipsRequest(newAccountIds));\n\n    api(getState).get(`/api/v1/accounts/relationships?${newAccountIds.map(id => `id[]=${id}`).join('&')}`).then(response => {\n      dispatch(fetchRelationshipsSuccess(response.data));\n    }).catch(error => {\n      dispatch(fetchRelationshipsFail(error));\n    });\n  };\n}\n\nexport function fetchRelationshipsRequest(ids) {\n  return {\n    type: RELATIONSHIPS_FETCH_REQUEST,\n    ids,\n    skipLoading: true,\n  };\n}\n\nexport function fetchRelationshipsSuccess(relationships) {\n  return {\n    type: RELATIONSHIPS_FETCH_SUCCESS,\n    relationships,\n    skipLoading: true,\n  };\n}\n\nexport function fetchRelationshipsFail(error) {\n  return {\n    type: RELATIONSHIPS_FETCH_FAIL,\n    error,\n    skipLoading: true,\n    skipNotFound: true,\n  };\n}\n\nexport function fetchFollowRequests() {\n  return (dispatch, getState) => {\n    dispatch(fetchFollowRequestsRequest());\n\n    api(getState).get('/api/v1/follow_requests').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchFollowRequestsSuccess(response.data, next ? next.uri : null));\n    }).catch(error => dispatch(fetchFollowRequestsFail(error)));\n  };\n}\n\nexport function fetchFollowRequestsRequest() {\n  return {\n    type: FOLLOW_REQUESTS_FETCH_REQUEST,\n  };\n}\n\nexport function fetchFollowRequestsSuccess(accounts, next) {\n  return {\n    type: FOLLOW_REQUESTS_FETCH_SUCCESS,\n    accounts,\n    next,\n  };\n}\n\nexport function fetchFollowRequestsFail(error) {\n  return {\n    type: FOLLOW_REQUESTS_FETCH_FAIL,\n    error,\n  };\n}\n\nexport function expandFollowRequests() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['user_lists', 'follow_requests', 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandFollowRequestsRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandFollowRequestsSuccess(response.data, next ? next.uri : null));\n    }).catch(error => dispatch(expandFollowRequestsFail(error)));\n  };\n}\n\nexport function expandFollowRequestsRequest() {\n  return {\n    type: FOLLOW_REQUESTS_EXPAND_REQUEST,\n  };\n}\n\nexport function expandFollowRequestsSuccess(accounts, next) {\n  return {\n    type: FOLLOW_REQUESTS_EXPAND_SUCCESS,\n    accounts,\n    next,\n  };\n}\n\nexport function expandFollowRequestsFail(error) {\n  return {\n    type: FOLLOW_REQUESTS_EXPAND_FAIL,\n    error,\n  };\n}\n\nexport function authorizeFollowRequest(id) {\n  return (dispatch, getState) => {\n    dispatch(authorizeFollowRequestRequest(id));\n\n    api(getState)\n      .post(`/api/v1/follow_requests/${id}/authorize`)\n      .then(() => dispatch(authorizeFollowRequestSuccess(id)))\n      .catch(error => dispatch(authorizeFollowRequestFail(id, error)));\n  };\n}\n\nexport function authorizeFollowRequestRequest(id) {\n  return {\n    type: FOLLOW_REQUEST_AUTHORIZE_REQUEST,\n    id,\n  };\n}\n\nexport function authorizeFollowRequestSuccess(id) {\n  return {\n    type: FOLLOW_REQUEST_AUTHORIZE_SUCCESS,\n    id,\n  };\n}\n\nexport function authorizeFollowRequestFail(id, error) {\n  return {\n    type: FOLLOW_REQUEST_AUTHORIZE_FAIL,\n    id,\n    error,\n  };\n}\n\n\nexport function rejectFollowRequest(id) {\n  return (dispatch, getState) => {\n    dispatch(rejectFollowRequestRequest(id));\n\n    api(getState)\n      .post(`/api/v1/follow_requests/${id}/reject`)\n      .then(() => dispatch(rejectFollowRequestSuccess(id)))\n      .catch(error => dispatch(rejectFollowRequestFail(id, error)));\n  };\n}\n\nexport function rejectFollowRequestRequest(id) {\n  return {\n    type: FOLLOW_REQUEST_REJECT_REQUEST,\n    id,\n  };\n}\n\nexport function rejectFollowRequestSuccess(id) {\n  return {\n    type: FOLLOW_REQUEST_REJECT_SUCCESS,\n    id,\n  };\n}\n\nexport function rejectFollowRequestFail(id, error) {\n  return {\n    type: FOLLOW_REQUEST_REJECT_FAIL,\n    id,\n    error,\n  };\n}\n\nexport function pinAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(pinAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/pin`).then(response => {\n      dispatch(pinAccountSuccess(response.data));\n    }).catch(error => {\n      dispatch(pinAccountFail(error));\n    });\n  };\n}\n\nexport function unpinAccount(id) {\n  return (dispatch, getState) => {\n    dispatch(unpinAccountRequest(id));\n\n    api(getState).post(`/api/v1/accounts/${id}/unpin`).then(response => {\n      dispatch(unpinAccountSuccess(response.data));\n    }).catch(error => {\n      dispatch(unpinAccountFail(error));\n    });\n  };\n}\n\nexport function pinAccountRequest(id) {\n  return {\n    type: ACCOUNT_PIN_REQUEST,\n    id,\n  };\n}\n\nexport function pinAccountSuccess(relationship) {\n  return {\n    type: ACCOUNT_PIN_SUCCESS,\n    relationship,\n  };\n}\n\nexport function pinAccountFail(error) {\n  return {\n    type: ACCOUNT_PIN_FAIL,\n    error,\n  };\n}\n\nexport function unpinAccountRequest(id) {\n  return {\n    type: ACCOUNT_UNPIN_REQUEST,\n    id,\n  };\n}\n\nexport function unpinAccountSuccess(relationship) {\n  return {\n    type: ACCOUNT_UNPIN_SUCCESS,\n    relationship,\n  };\n}\n\nexport function unpinAccountFail(error) {\n  return {\n    type: ACCOUNT_UNPIN_FAIL,\n    error,\n  };\n}\n\nexport const revealAccount = id => ({\n  type: ACCOUNT_REVEAL,\n  id,\n});\n","import api, { getLinks } from '../api';\nimport { fetchRelationships } from './accounts';\nimport { importFetchedAccounts } from './importer';\nimport { openModal } from './modal';\n\nexport const BLOCKS_FETCH_REQUEST = 'BLOCKS_FETCH_REQUEST';\nexport const BLOCKS_FETCH_SUCCESS = 'BLOCKS_FETCH_SUCCESS';\nexport const BLOCKS_FETCH_FAIL    = 'BLOCKS_FETCH_FAIL';\n\nexport const BLOCKS_EXPAND_REQUEST = 'BLOCKS_EXPAND_REQUEST';\nexport const BLOCKS_EXPAND_SUCCESS = 'BLOCKS_EXPAND_SUCCESS';\nexport const BLOCKS_EXPAND_FAIL    = 'BLOCKS_EXPAND_FAIL';\n\nexport const BLOCKS_INIT_MODAL = 'BLOCKS_INIT_MODAL';\n\nexport function fetchBlocks() {\n  return (dispatch, getState) => {\n    dispatch(fetchBlocksRequest());\n\n    api(getState).get('/api/v1/blocks').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(fetchBlocksSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => dispatch(fetchBlocksFail(error)));\n  };\n}\n\nexport function fetchBlocksRequest() {\n  return {\n    type: BLOCKS_FETCH_REQUEST,\n  };\n}\n\nexport function fetchBlocksSuccess(accounts, next) {\n  return {\n    type: BLOCKS_FETCH_SUCCESS,\n    accounts,\n    next,\n  };\n}\n\nexport function fetchBlocksFail(error) {\n  return {\n    type: BLOCKS_FETCH_FAIL,\n    error,\n  };\n}\n\nexport function expandBlocks() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['user_lists', 'blocks', 'next']);\n\n    if (url === null) {\n      return;\n    }\n\n    dispatch(expandBlocksRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedAccounts(response.data));\n      dispatch(expandBlocksSuccess(response.data, next ? next.uri : null));\n      dispatch(fetchRelationships(response.data.map(item => item.id)));\n    }).catch(error => dispatch(expandBlocksFail(error)));\n  };\n}\n\nexport function expandBlocksRequest() {\n  return {\n    type: BLOCKS_EXPAND_REQUEST,\n  };\n}\n\nexport function expandBlocksSuccess(accounts, next) {\n  return {\n    type: BLOCKS_EXPAND_SUCCESS,\n    accounts,\n    next,\n  };\n}\n\nexport function expandBlocksFail(error) {\n  return {\n    type: BLOCKS_EXPAND_FAIL,\n    error,\n  };\n}\n\nexport function initBlockModal(account) {\n  return dispatch => {\n    dispatch({\n      type: BLOCKS_INIT_MODAL,\n      account,\n    });\n\n    dispatch(openModal('BLOCK'));\n  };\n}\n","import api, { getLinks } from '../api';\nimport {\n  importFetchedAccounts,\n  importFetchedStatuses,\n  importFetchedStatus,\n} from './importer';\n\nexport const CONVERSATIONS_MOUNT   = 'CONVERSATIONS_MOUNT';\nexport const CONVERSATIONS_UNMOUNT = 'CONVERSATIONS_UNMOUNT';\n\nexport const CONVERSATIONS_FETCH_REQUEST = 'CONVERSATIONS_FETCH_REQUEST';\nexport const CONVERSATIONS_FETCH_SUCCESS = 'CONVERSATIONS_FETCH_SUCCESS';\nexport const CONVERSATIONS_FETCH_FAIL    = 'CONVERSATIONS_FETCH_FAIL';\nexport const CONVERSATIONS_UPDATE        = 'CONVERSATIONS_UPDATE';\n\nexport const CONVERSATIONS_READ = 'CONVERSATIONS_READ';\n\nexport const CONVERSATIONS_DELETE_REQUEST = 'CONVERSATIONS_DELETE_REQUEST';\nexport const CONVERSATIONS_DELETE_SUCCESS = 'CONVERSATIONS_DELETE_SUCCESS';\nexport const CONVERSATIONS_DELETE_FAIL    = 'CONVERSATIONS_DELETE_FAIL';\n\nexport const mountConversations = () => ({\n  type: CONVERSATIONS_MOUNT,\n});\n\nexport const unmountConversations = () => ({\n  type: CONVERSATIONS_UNMOUNT,\n});\n\nexport const markConversationRead = conversationId => (dispatch, getState) => {\n  dispatch({\n    type: CONVERSATIONS_READ,\n    id: conversationId,\n  });\n\n  api(getState).post(`/api/v1/conversations/${conversationId}/read`);\n};\n\nexport const expandConversations = ({ maxId } = {}) => (dispatch, getState) => {\n  dispatch(expandConversationsRequest());\n\n  const params = { max_id: maxId };\n\n  if (!maxId) {\n    params.since_id = getState().getIn(['conversations', 'items', 0, 'last_status']);\n  }\n\n  const isLoadingRecent = !!params.since_id;\n\n  api(getState).get('/api/v1/conversations', { params })\n    .then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n\n      dispatch(importFetchedAccounts(response.data.reduce((aggr, item) => aggr.concat(item.accounts), [])));\n      dispatch(importFetchedStatuses(response.data.map(item => item.last_status).filter(x => !!x)));\n      dispatch(expandConversationsSuccess(response.data, next ? next.uri : null, isLoadingRecent));\n    })\n    .catch(err => dispatch(expandConversationsFail(err)));\n};\n\nexport const expandConversationsRequest = () => ({\n  type: CONVERSATIONS_FETCH_REQUEST,\n});\n\nexport const expandConversationsSuccess = (conversations, next, isLoadingRecent) => ({\n  type: CONVERSATIONS_FETCH_SUCCESS,\n  conversations,\n  next,\n  isLoadingRecent,\n});\n\nexport const expandConversationsFail = error => ({\n  type: CONVERSATIONS_FETCH_FAIL,\n  error,\n});\n\nexport const updateConversations = conversation => dispatch => {\n  dispatch(importFetchedAccounts(conversation.accounts));\n\n  if (conversation.last_status) {\n    dispatch(importFetchedStatus(conversation.last_status));\n  }\n\n  dispatch({\n    type: CONVERSATIONS_UPDATE,\n    conversation,\n  });\n};\n\nexport const deleteConversation = conversationId => (dispatch, getState) => {\n  dispatch(deleteConversationRequest(conversationId));\n\n  api(getState).delete(`/api/v1/conversations/${conversationId}`)\n    .then(() => dispatch(deleteConversationSuccess(conversationId)))\n    .catch(error => dispatch(deleteConversationFail(conversationId, error)));\n};\n\nexport const deleteConversationRequest = id => ({\n  type: CONVERSATIONS_DELETE_REQUEST,\n  id,\n});\n\nexport const deleteConversationSuccess = id => ({\n  type: CONVERSATIONS_DELETE_SUCCESS,\n  id,\n});\n\nexport const deleteConversationFail = (id, error) => ({\n  type: CONVERSATIONS_DELETE_FAIL,\n  id,\n  error,\n});\n","export const APP_FOCUS   = 'APP_FOCUS';\nexport const APP_UNFOCUS = 'APP_UNFOCUS';\n\nexport const focusApp = () => ({\n  type: APP_FOCUS,\n});\n\nexport const unfocusApp = () => ({\n  type: APP_UNFOCUS,\n});\n\nexport const APP_LAYOUT_CHANGE = 'APP_LAYOUT_CHANGE';\n\nexport const changeLayout = layout => ({\n  type: APP_LAYOUT_CHANGE,\n  layout,\n});\n","import api from '../api';\nimport { fetchRelationships } from './accounts';\nimport { importFetchedAccounts, importFetchedStatuses } from './importer';\n\nexport const SEARCH_CHANGE = 'SEARCH_CHANGE';\nexport const SEARCH_CLEAR  = 'SEARCH_CLEAR';\nexport const SEARCH_SHOW   = 'SEARCH_SHOW';\n\nexport const SEARCH_FETCH_REQUEST = 'SEARCH_FETCH_REQUEST';\nexport const SEARCH_FETCH_SUCCESS = 'SEARCH_FETCH_SUCCESS';\nexport const SEARCH_FETCH_FAIL    = 'SEARCH_FETCH_FAIL';\n\nexport const SEARCH_EXPAND_REQUEST = 'SEARCH_EXPAND_REQUEST';\nexport const SEARCH_EXPAND_SUCCESS = 'SEARCH_EXPAND_SUCCESS';\nexport const SEARCH_EXPAND_FAIL    = 'SEARCH_EXPAND_FAIL';\n\nexport function changeSearch(value) {\n  return {\n    type: SEARCH_CHANGE,\n    value,\n  };\n}\n\nexport function clearSearch() {\n  return {\n    type: SEARCH_CLEAR,\n  };\n}\n\nexport function submitSearch() {\n  return (dispatch, getState) => {\n    const value    = getState().getIn(['search', 'value']);\n    const signedIn = !!getState().getIn(['meta', 'me']);\n\n    if (value.length === 0) {\n      dispatch(fetchSearchSuccess({ accounts: [], statuses: [], hashtags: [] }, ''));\n      return;\n    }\n\n    dispatch(fetchSearchRequest());\n\n    api(getState).get('/api/v2/search', {\n      params: {\n        q: value,\n        resolve: signedIn,\n        limit: 5,\n      },\n    }).then(response => {\n      if (response.data.accounts) {\n        dispatch(importFetchedAccounts(response.data.accounts));\n      }\n\n      if (response.data.statuses) {\n        dispatch(importFetchedStatuses(response.data.statuses));\n      }\n\n      dispatch(fetchSearchSuccess(response.data, value));\n      dispatch(fetchRelationships(response.data.accounts.map(item => item.id)));\n    }).catch(error => {\n      dispatch(fetchSearchFail(error));\n    });\n  };\n}\n\nexport function fetchSearchRequest() {\n  return {\n    type: SEARCH_FETCH_REQUEST,\n  };\n}\n\nexport function fetchSearchSuccess(results, searchTerm) {\n  return {\n    type: SEARCH_FETCH_SUCCESS,\n    results,\n    searchTerm,\n  };\n}\n\nexport function fetchSearchFail(error) {\n  return {\n    type: SEARCH_FETCH_FAIL,\n    error,\n  };\n}\n\nexport const expandSearch = type => (dispatch, getState) => {\n  const value  = getState().getIn(['search', 'value']);\n  const offset = getState().getIn(['search', 'results', type]).size;\n\n  dispatch(expandSearchRequest());\n\n  api(getState).get('/api/v2/search', {\n    params: {\n      q: value,\n      type,\n      offset,\n    },\n  }).then(({ data }) => {\n    if (data.accounts) {\n      dispatch(importFetchedAccounts(data.accounts));\n    }\n\n    if (data.statuses) {\n      dispatch(importFetchedStatuses(data.statuses));\n    }\n\n    dispatch(expandSearchSuccess(data, value, type));\n    dispatch(fetchRelationships(data.accounts.map(item => item.id)));\n  }).catch(error => {\n    dispatch(expandSearchFail(error));\n  });\n};\n\nexport const expandSearchRequest = () => ({\n  type: SEARCH_EXPAND_REQUEST,\n});\n\nexport const expandSearchSuccess = (results, searchTerm, searchType) => ({\n  type: SEARCH_EXPAND_SUCCESS,\n  results,\n  searchTerm,\n  searchType,\n});\n\nexport const expandSearchFail = error => ({\n  type: SEARCH_EXPAND_FAIL,\n  error,\n});\n\nexport const showSearch = () => ({\n  type: SEARCH_SHOW,\n});\n","import api from '../api';\nimport { importFetchedAccounts } from './importer';\nimport { fetchRelationships } from './accounts';\n\nexport const DIRECTORY_FETCH_REQUEST = 'DIRECTORY_FETCH_REQUEST';\nexport const DIRECTORY_FETCH_SUCCESS = 'DIRECTORY_FETCH_SUCCESS';\nexport const DIRECTORY_FETCH_FAIL    = 'DIRECTORY_FETCH_FAIL';\n\nexport const DIRECTORY_EXPAND_REQUEST = 'DIRECTORY_EXPAND_REQUEST';\nexport const DIRECTORY_EXPAND_SUCCESS = 'DIRECTORY_EXPAND_SUCCESS';\nexport const DIRECTORY_EXPAND_FAIL    = 'DIRECTORY_EXPAND_FAIL';\n\nexport const fetchDirectory = params => (dispatch, getState) => {\n  dispatch(fetchDirectoryRequest());\n\n  api(getState).get('/api/v1/directory', { params: { ...params, limit: 20 } }).then(({ data }) => {\n    dispatch(importFetchedAccounts(data));\n    dispatch(fetchDirectorySuccess(data));\n    dispatch(fetchRelationships(data.map(x => x.id)));\n  }).catch(error => dispatch(fetchDirectoryFail(error)));\n};\n\nexport const fetchDirectoryRequest = () => ({\n  type: DIRECTORY_FETCH_REQUEST,\n});\n\nexport const fetchDirectorySuccess = accounts => ({\n  type: DIRECTORY_FETCH_SUCCESS,\n  accounts,\n});\n\nexport const fetchDirectoryFail = error => ({\n  type: DIRECTORY_FETCH_FAIL,\n  error,\n});\n\nexport const expandDirectory = params => (dispatch, getState) => {\n  dispatch(expandDirectoryRequest());\n\n  const loadedItems = getState().getIn(['user_lists', 'directory', 'items']).size;\n\n  api(getState).get('/api/v1/directory', { params: { ...params, offset: loadedItems, limit: 20 } }).then(({ data }) => {\n    dispatch(importFetchedAccounts(data));\n    dispatch(expandDirectorySuccess(data));\n    dispatch(fetchRelationships(data.map(x => x.id)));\n  }).catch(error => dispatch(expandDirectoryFail(error)));\n};\n\nexport const expandDirectoryRequest = () => ({\n  type: DIRECTORY_EXPAND_REQUEST,\n});\n\nexport const expandDirectorySuccess = accounts => ({\n  type: DIRECTORY_EXPAND_SUCCESS,\n  accounts,\n});\n\nexport const expandDirectoryFail = error => ({\n  type: DIRECTORY_EXPAND_FAIL,\n  error,\n});\n","import api, { getLinks } from '../api';\nimport { importFetchedStatuses } from './importer';\n\nexport const FAVOURITED_STATUSES_FETCH_REQUEST = 'FAVOURITED_STATUSES_FETCH_REQUEST';\nexport const FAVOURITED_STATUSES_FETCH_SUCCESS = 'FAVOURITED_STATUSES_FETCH_SUCCESS';\nexport const FAVOURITED_STATUSES_FETCH_FAIL    = 'FAVOURITED_STATUSES_FETCH_FAIL';\n\nexport const FAVOURITED_STATUSES_EXPAND_REQUEST = 'FAVOURITED_STATUSES_EXPAND_REQUEST';\nexport const FAVOURITED_STATUSES_EXPAND_SUCCESS = 'FAVOURITED_STATUSES_EXPAND_SUCCESS';\nexport const FAVOURITED_STATUSES_EXPAND_FAIL    = 'FAVOURITED_STATUSES_EXPAND_FAIL';\n\nexport function fetchFavouritedStatuses() {\n  return (dispatch, getState) => {\n    if (getState().getIn(['status_lists', 'favourites', 'isLoading'])) {\n      return;\n    }\n\n    dispatch(fetchFavouritedStatusesRequest());\n\n    api(getState).get('/api/v1/favourites').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(fetchFavouritedStatusesSuccess(response.data, next ? next.uri : null));\n    }).catch(error => {\n      dispatch(fetchFavouritedStatusesFail(error));\n    });\n  };\n}\n\nexport function fetchFavouritedStatusesRequest() {\n  return {\n    type: FAVOURITED_STATUSES_FETCH_REQUEST,\n    skipLoading: true,\n  };\n}\n\nexport function fetchFavouritedStatusesSuccess(statuses, next) {\n  return {\n    type: FAVOURITED_STATUSES_FETCH_SUCCESS,\n    statuses,\n    next,\n    skipLoading: true,\n  };\n}\n\nexport function fetchFavouritedStatusesFail(error) {\n  return {\n    type: FAVOURITED_STATUSES_FETCH_FAIL,\n    error,\n    skipLoading: true,\n  };\n}\n\nexport function expandFavouritedStatuses() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['status_lists', 'favourites', 'next'], null);\n\n    if (url === null || getState().getIn(['status_lists', 'favourites', 'isLoading'])) {\n      return;\n    }\n\n    dispatch(expandFavouritedStatusesRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(expandFavouritedStatusesSuccess(response.data, next ? next.uri : null));\n    }).catch(error => {\n      dispatch(expandFavouritedStatusesFail(error));\n    });\n  };\n}\n\nexport function expandFavouritedStatusesRequest() {\n  return {\n    type: FAVOURITED_STATUSES_EXPAND_REQUEST,\n  };\n}\n\nexport function expandFavouritedStatusesSuccess(statuses, next) {\n  return {\n    type: FAVOURITED_STATUSES_EXPAND_SUCCESS,\n    statuses,\n    next,\n  };\n}\n\nexport function expandFavouritedStatusesFail(error) {\n  return {\n    type: FAVOURITED_STATUSES_EXPAND_FAIL,\n    error,\n  };\n}\n","import api, { getLinks } from '../api';\nimport { importFetchedStatuses } from './importer';\n\nexport const BOOKMARKED_STATUSES_FETCH_REQUEST = 'BOOKMARKED_STATUSES_FETCH_REQUEST';\nexport const BOOKMARKED_STATUSES_FETCH_SUCCESS = 'BOOKMARKED_STATUSES_FETCH_SUCCESS';\nexport const BOOKMARKED_STATUSES_FETCH_FAIL    = 'BOOKMARKED_STATUSES_FETCH_FAIL';\n\nexport const BOOKMARKED_STATUSES_EXPAND_REQUEST = 'BOOKMARKED_STATUSES_EXPAND_REQUEST';\nexport const BOOKMARKED_STATUSES_EXPAND_SUCCESS = 'BOOKMARKED_STATUSES_EXPAND_SUCCESS';\nexport const BOOKMARKED_STATUSES_EXPAND_FAIL    = 'BOOKMARKED_STATUSES_EXPAND_FAIL';\n\nexport function fetchBookmarkedStatuses() {\n  return (dispatch, getState) => {\n    if (getState().getIn(['status_lists', 'bookmarks', 'isLoading'])) {\n      return;\n    }\n\n    dispatch(fetchBookmarkedStatusesRequest());\n\n    api(getState).get('/api/v1/bookmarks').then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(fetchBookmarkedStatusesSuccess(response.data, next ? next.uri : null));\n    }).catch(error => {\n      dispatch(fetchBookmarkedStatusesFail(error));\n    });\n  };\n}\n\nexport function fetchBookmarkedStatusesRequest() {\n  return {\n    type: BOOKMARKED_STATUSES_FETCH_REQUEST,\n  };\n}\n\nexport function fetchBookmarkedStatusesSuccess(statuses, next) {\n  return {\n    type: BOOKMARKED_STATUSES_FETCH_SUCCESS,\n    statuses,\n    next,\n  };\n}\n\nexport function fetchBookmarkedStatusesFail(error) {\n  return {\n    type: BOOKMARKED_STATUSES_FETCH_FAIL,\n    error,\n  };\n}\n\nexport function expandBookmarkedStatuses() {\n  return (dispatch, getState) => {\n    const url = getState().getIn(['status_lists', 'bookmarks', 'next'], null);\n\n    if (url === null || getState().getIn(['status_lists', 'bookmarks', 'isLoading'])) {\n      return;\n    }\n\n    dispatch(expandBookmarkedStatusesRequest());\n\n    api(getState).get(url).then(response => {\n      const next = getLinks(response).refs.find(link => link.rel === 'next');\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(expandBookmarkedStatusesSuccess(response.data, next ? next.uri : null));\n    }).catch(error => {\n      dispatch(expandBookmarkedStatusesFail(error));\n    });\n  };\n}\n\nexport function expandBookmarkedStatusesRequest() {\n  return {\n    type: BOOKMARKED_STATUSES_EXPAND_REQUEST,\n  };\n}\n\nexport function expandBookmarkedStatusesSuccess(statuses, next) {\n  return {\n    type: BOOKMARKED_STATUSES_EXPAND_SUCCESS,\n    statuses,\n    next,\n  };\n}\n\nexport function expandBookmarkedStatusesFail(error) {\n  return {\n    type: BOOKMARKED_STATUSES_EXPAND_FAIL,\n    error,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { autoPlayGif } from '../initial_state';\nimport classNames from 'classnames';\n\nexport default class Avatar extends React.PureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map,\n    size: PropTypes.number.isRequired,\n    style: PropTypes.object,\n    inline: PropTypes.bool,\n    animate: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    animate: autoPlayGif,\n    size: 20,\n    inline: false,\n  };\n\n  state = {\n    hovering: false,\n  };\n\n  handleMouseEnter = () => {\n    if (this.props.animate) return;\n    this.setState({ hovering: true });\n  };\n\n  handleMouseLeave = () => {\n    if (this.props.animate) return;\n    this.setState({ hovering: false });\n  };\n\n  render () {\n    const { account, size, animate, inline } = this.props;\n    const { hovering } = this.state;\n\n    const style = {\n      ...this.props.style,\n      width: `${size}px`,\n      height: `${size}px`,\n    };\n\n    let src;\n\n    if (hovering || animate) {\n      src = account?.get('avatar');\n    } else {\n      src = account?.get('avatar_static');\n    }\n\n    return (\n      <div className={classNames('account__avatar', { 'account__avatar-inline': inline })} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave} style={style}>\n        {src && <img src={src} alt={account?.get('acct')} />}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { autoPlayGif } from 'mastodon/initial_state';\nimport Skeleton from 'mastodon/components/skeleton';\n\nexport default class DisplayName extends React.PureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map,\n    others: ImmutablePropTypes.list,\n    localDomain: PropTypes.string,\n  };\n\n  handleMouseEnter = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-original');\n    }\n  };\n\n  handleMouseLeave = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-static');\n    }\n  };\n\n  render () {\n    const { others, localDomain } = this.props;\n\n    let displayName, suffix, account;\n\n    if (others && others.size > 1) {\n      displayName = others.take(2).map(a => <bdi key={a.get('id')}><strong className='display-name__html' dangerouslySetInnerHTML={{ __html: a.get('display_name_html') }} /></bdi>).reduce((prev, cur) => [prev, ', ', cur]);\n\n      if (others.size - 2 > 0) {\n        suffix = `+${others.size - 2}`;\n      }\n    } else if ((others && others.size > 0) || this.props.account) {\n      if (others && others.size > 0) {\n        account = others.first();\n      } else {\n        account = this.props.account;\n      }\n\n      let acct = account.get('acct');\n\n      if (acct.indexOf('@') === -1 && localDomain) {\n        acct = `${acct}@${localDomain}`;\n      }\n\n      displayName = <bdi><strong className='display-name__html' dangerouslySetInnerHTML={{ __html: account.get('display_name_html') }} /></bdi>;\n      suffix      = <span className='display-name__account'>@{acct}</span>;\n    } else {\n      displayName = <bdi><strong className='display-name__html'><Skeleton width='10ch' /></strong></bdi>;\n      suffix = <span className='display-name__account'><Skeleton width='7ch' /></span>;\n    }\n\n    return (\n      <span className='display-name' onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n        {displayName} {suffix}\n      </span>\n    );\n  }\n\n}\n","import { saveSettings } from './settings';\n\nexport const COLUMN_ADD           = 'COLUMN_ADD';\nexport const COLUMN_REMOVE        = 'COLUMN_REMOVE';\nexport const COLUMN_MOVE          = 'COLUMN_MOVE';\nexport const COLUMN_PARAMS_CHANGE = 'COLUMN_PARAMS_CHANGE';\n\nexport function addColumn(id, params) {\n  return dispatch => {\n    dispatch({\n      type: COLUMN_ADD,\n      id,\n      params,\n    });\n\n    dispatch(saveSettings());\n  };\n}\n\nexport function removeColumn(uuid) {\n  return dispatch => {\n    dispatch({\n      type: COLUMN_REMOVE,\n      uuid,\n    });\n\n    dispatch(saveSettings());\n  };\n}\n\nexport function moveColumn(uuid, direction) {\n  return dispatch => {\n    dispatch({\n      type: COLUMN_MOVE,\n      uuid,\n      direction,\n    });\n\n    dispatch(saveSettings());\n  };\n}\n\nexport function changeColumnParams(uuid, path, value) {\n  return dispatch => {\n    dispatch({\n      type: COLUMN_PARAMS_CHANGE,\n      uuid,\n      path,\n      value,\n    });\n\n    dispatch(saveSettings());\n  };\n}\n","import api from '../api';\nimport { importFetchedAccounts } from './importer';\nimport { fetchRelationships } from './accounts';\n\nexport const SUGGESTIONS_FETCH_REQUEST = 'SUGGESTIONS_FETCH_REQUEST';\nexport const SUGGESTIONS_FETCH_SUCCESS = 'SUGGESTIONS_FETCH_SUCCESS';\nexport const SUGGESTIONS_FETCH_FAIL    = 'SUGGESTIONS_FETCH_FAIL';\n\nexport const SUGGESTIONS_DISMISS = 'SUGGESTIONS_DISMISS';\n\nexport function fetchSuggestions(withRelationships = false) {\n  return (dispatch, getState) => {\n    dispatch(fetchSuggestionsRequest());\n\n    api(getState).get('/api/v2/suggestions', { params: { limit: 20 } }).then(response => {\n      dispatch(importFetchedAccounts(response.data.map(x => x.account)));\n      dispatch(fetchSuggestionsSuccess(response.data));\n\n      if (withRelationships) {\n        dispatch(fetchRelationships(response.data.map(item => item.account.id)));\n      }\n    }).catch(error => dispatch(fetchSuggestionsFail(error)));\n  };\n}\n\nexport function fetchSuggestionsRequest() {\n  return {\n    type: SUGGESTIONS_FETCH_REQUEST,\n    skipLoading: true,\n  };\n}\n\nexport function fetchSuggestionsSuccess(suggestions) {\n  return {\n    type: SUGGESTIONS_FETCH_SUCCESS,\n    suggestions,\n    skipLoading: true,\n  };\n}\n\nexport function fetchSuggestionsFail(error) {\n  return {\n    type: SUGGESTIONS_FETCH_FAIL,\n    error,\n    skipLoading: true,\n    skipAlert: true,\n  };\n}\n\nexport const dismissSuggestion = accountId => (dispatch, getState) => {\n  dispatch({\n    type: SUGGESTIONS_DISMISS,\n    id: accountId,\n  });\n\n  api(getState).delete(`/api/v1/suggestions/${accountId}`).then(() => {\n    dispatch(fetchSuggestionsRequest());\n\n    api(getState).get('/api/v2/suggestions').then(response => {\n      dispatch(importFetchedAccounts(response.data.map(x => x.account)));\n      dispatch(fetchSuggestionsSuccess(response.data));\n    }).catch(error => dispatch(fetchSuggestionsFail(error)));\n  }).catch(() => {});\n};\n","export const SET_BROWSER_SUPPORT = 'PUSH_NOTIFICATIONS_SET_BROWSER_SUPPORT';\nexport const SET_SUBSCRIPTION = 'PUSH_NOTIFICATIONS_SET_SUBSCRIPTION';\nexport const CLEAR_SUBSCRIPTION = 'PUSH_NOTIFICATIONS_CLEAR_SUBSCRIPTION';\nexport const SET_ALERTS = 'PUSH_NOTIFICATIONS_SET_ALERTS';\n\nexport function setBrowserSupport (value) {\n  return {\n    type: SET_BROWSER_SUPPORT,\n    value,\n  };\n}\n\nexport function setSubscription (subscription) {\n  return {\n    type: SET_SUBSCRIPTION,\n    subscription,\n  };\n}\n\nexport function clearSubscription () {\n  return {\n    type: CLEAR_SUBSCRIPTION,\n  };\n}\n\nexport function setAlerts (path, value) {\n  return dispatch => {\n    dispatch({\n      type: SET_ALERTS,\n      path,\n      value,\n    });\n  };\n}\n","import api from '../../api';\nimport { decode as decodeBase64 } from '../../utils/base64';\nimport { pushNotificationsSetting } from '../../settings';\nimport { setBrowserSupport, setSubscription, clearSubscription } from './setter';\nimport { me } from '../../initial_state';\n\n// Taken from https://www.npmjs.com/package/web-push\nconst urlBase64ToUint8Array = (base64String) => {\n  const padding = '='.repeat((4 - base64String.length % 4) % 4);\n  const base64 = (base64String + padding)\n    .replace(/-/g, '+')\n    .replace(/_/g, '/');\n\n  return decodeBase64(base64);\n};\n\nconst getApplicationServerKey = () => document.querySelector('[name=\"applicationServerKey\"]').getAttribute('content');\n\nconst getRegistration = () => navigator.serviceWorker.ready;\n\nconst getPushSubscription = (registration) =>\n  registration.pushManager.getSubscription()\n    .then(subscription => ({ registration, subscription }));\n\nconst subscribe = (registration) =>\n  registration.pushManager.subscribe({\n    userVisibleOnly: true,\n    applicationServerKey: urlBase64ToUint8Array(getApplicationServerKey()),\n  });\n\nconst unsubscribe = ({ registration, subscription }) =>\n  subscription ? subscription.unsubscribe().then(() => registration) : registration;\n\nconst sendSubscriptionToBackend = (subscription) => {\n  const params = { subscription };\n\n  if (me) {\n    const data = pushNotificationsSetting.get(me);\n    if (data) {\n      params.data = data;\n    }\n  }\n\n  return api().post('/api/web/push_subscriptions', params).then(response => response.data);\n};\n\n// Last one checks for payload support: https://web-push-book.gauntface.com/chapter-06/01-non-standards-browsers/#no-payload\nconst supportsPushNotifications = ('serviceWorker' in navigator && 'PushManager' in window && 'getKey' in PushSubscription.prototype);\n\nexport function register () {\n  return (dispatch, getState) => {\n    dispatch(setBrowserSupport(supportsPushNotifications));\n\n    if (supportsPushNotifications) {\n      if (!getApplicationServerKey()) {\n        console.error('The VAPID public key is not set. You will not be able to receive Web Push Notifications.');\n        return;\n      }\n\n      getRegistration()\n        .then(getPushSubscription)\n        .then(({ registration, subscription }) => {\n          if (subscription !== null) {\n            // We have a subscription, check if it is still valid\n            const currentServerKey = (new Uint8Array(subscription.options.applicationServerKey)).toString();\n            const subscriptionServerKey = urlBase64ToUint8Array(getApplicationServerKey()).toString();\n            const serverEndpoint = getState().getIn(['push_notifications', 'subscription', 'endpoint']);\n\n            // If the VAPID public key did not change and the endpoint corresponds\n            // to the endpoint saved in the backend, the subscription is valid\n            if (subscriptionServerKey === currentServerKey && subscription.endpoint === serverEndpoint) {\n              return subscription;\n            } else {\n              // Something went wrong, try to subscribe again\n              return unsubscribe({ registration, subscription }).then(subscribe).then(\n                subscription => sendSubscriptionToBackend(subscription));\n            }\n          }\n\n          // No subscription, try to subscribe\n          return subscribe(registration).then(\n            subscription => sendSubscriptionToBackend(subscription));\n        })\n        .then(subscription => {\n          // If we got a PushSubscription (and not a subscription object from the backend)\n          // it means that the backend subscription is valid (and was set during hydration)\n          if (!(subscription instanceof PushSubscription)) {\n            dispatch(setSubscription(subscription));\n            if (me) {\n              pushNotificationsSetting.set(me, { alerts: subscription.alerts });\n            }\n          }\n        })\n        .catch(error => {\n          if (error.code === 20 && error.name === 'AbortError') {\n            console.warn('Your browser supports Web Push Notifications, but does not seem to implement the VAPID protocol.');\n          } else if (error.code === 5 && error.name === 'InvalidCharacterError') {\n            console.error('The VAPID public key seems to be invalid:', getApplicationServerKey());\n          }\n\n          // Clear alerts and hide UI settings\n          dispatch(clearSubscription());\n          if (me) {\n            pushNotificationsSetting.remove(me);\n          }\n\n          return getRegistration()\n            .then(getPushSubscription)\n            .then(unsubscribe);\n        })\n        .catch(console.warn);\n    } else {\n      console.warn('Your browser does not support Web Push Notifications.');\n    }\n  };\n}\n\nexport function saveSettings() {\n  return (_, getState) => {\n    const state = getState().get('push_notifications');\n    const subscription = state.get('subscription');\n    const alerts = state.get('alerts');\n    const data = { alerts };\n\n    api().put(`/api/web/push_subscriptions/${subscription.get('id')}`, {\n      data,\n    }).then(() => {\n      if (me) {\n        pushNotificationsSetting.set(me, data);\n      }\n    }).catch(console.warn);\n  };\n}\n","import { setAlerts } from './setter';\nimport { saveSettings } from './registerer';\n\nexport function changeAlerts(path, value) {\n  return dispatch => {\n    dispatch(setAlerts(path, value));\n    dispatch(saveSettings());\n  };\n}\n\nexport {\n  CLEAR_SUBSCRIPTION,\n  SET_BROWSER_SUPPORT,\n  SET_SUBSCRIPTION,\n  SET_ALERTS,\n} from './setter';\nexport { register } from './registerer';\n","import api from '../api';\nimport { importFetchedAccounts } from './importer';\nimport { showAlertForError } from './alerts';\n\nexport const LIST_FETCH_REQUEST = 'LIST_FETCH_REQUEST';\nexport const LIST_FETCH_SUCCESS = 'LIST_FETCH_SUCCESS';\nexport const LIST_FETCH_FAIL    = 'LIST_FETCH_FAIL';\n\nexport const LISTS_FETCH_REQUEST = 'LISTS_FETCH_REQUEST';\nexport const LISTS_FETCH_SUCCESS = 'LISTS_FETCH_SUCCESS';\nexport const LISTS_FETCH_FAIL    = 'LISTS_FETCH_FAIL';\n\nexport const LIST_EDITOR_TITLE_CHANGE = 'LIST_EDITOR_TITLE_CHANGE';\nexport const LIST_EDITOR_RESET        = 'LIST_EDITOR_RESET';\nexport const LIST_EDITOR_SETUP        = 'LIST_EDITOR_SETUP';\n\nexport const LIST_CREATE_REQUEST = 'LIST_CREATE_REQUEST';\nexport const LIST_CREATE_SUCCESS = 'LIST_CREATE_SUCCESS';\nexport const LIST_CREATE_FAIL    = 'LIST_CREATE_FAIL';\n\nexport const LIST_UPDATE_REQUEST = 'LIST_UPDATE_REQUEST';\nexport const LIST_UPDATE_SUCCESS = 'LIST_UPDATE_SUCCESS';\nexport const LIST_UPDATE_FAIL    = 'LIST_UPDATE_FAIL';\n\nexport const LIST_DELETE_REQUEST = 'LIST_DELETE_REQUEST';\nexport const LIST_DELETE_SUCCESS = 'LIST_DELETE_SUCCESS';\nexport const LIST_DELETE_FAIL    = 'LIST_DELETE_FAIL';\n\nexport const LIST_ACCOUNTS_FETCH_REQUEST = 'LIST_ACCOUNTS_FETCH_REQUEST';\nexport const LIST_ACCOUNTS_FETCH_SUCCESS = 'LIST_ACCOUNTS_FETCH_SUCCESS';\nexport const LIST_ACCOUNTS_FETCH_FAIL    = 'LIST_ACCOUNTS_FETCH_FAIL';\n\nexport const LIST_EDITOR_SUGGESTIONS_CHANGE = 'LIST_EDITOR_SUGGESTIONS_CHANGE';\nexport const LIST_EDITOR_SUGGESTIONS_READY  = 'LIST_EDITOR_SUGGESTIONS_READY';\nexport const LIST_EDITOR_SUGGESTIONS_CLEAR  = 'LIST_EDITOR_SUGGESTIONS_CLEAR';\n\nexport const LIST_EDITOR_ADD_REQUEST = 'LIST_EDITOR_ADD_REQUEST';\nexport const LIST_EDITOR_ADD_SUCCESS = 'LIST_EDITOR_ADD_SUCCESS';\nexport const LIST_EDITOR_ADD_FAIL    = 'LIST_EDITOR_ADD_FAIL';\n\nexport const LIST_EDITOR_REMOVE_REQUEST = 'LIST_EDITOR_REMOVE_REQUEST';\nexport const LIST_EDITOR_REMOVE_SUCCESS = 'LIST_EDITOR_REMOVE_SUCCESS';\nexport const LIST_EDITOR_REMOVE_FAIL    = 'LIST_EDITOR_REMOVE_FAIL';\n\nexport const LIST_ADDER_RESET = 'LIST_ADDER_RESET';\nexport const LIST_ADDER_SETUP = 'LIST_ADDER_SETUP';\n\nexport const LIST_ADDER_LISTS_FETCH_REQUEST = 'LIST_ADDER_LISTS_FETCH_REQUEST';\nexport const LIST_ADDER_LISTS_FETCH_SUCCESS = 'LIST_ADDER_LISTS_FETCH_SUCCESS';\nexport const LIST_ADDER_LISTS_FETCH_FAIL    = 'LIST_ADDER_LISTS_FETCH_FAIL';\n\nexport const fetchList = id => (dispatch, getState) => {\n  if (getState().getIn(['lists', id])) {\n    return;\n  }\n\n  dispatch(fetchListRequest(id));\n\n  api(getState).get(`/api/v1/lists/${id}`)\n    .then(({ data }) => dispatch(fetchListSuccess(data)))\n    .catch(err => dispatch(fetchListFail(id, err)));\n};\n\nexport const fetchListRequest = id => ({\n  type: LIST_FETCH_REQUEST,\n  id,\n});\n\nexport const fetchListSuccess = list => ({\n  type: LIST_FETCH_SUCCESS,\n  list,\n});\n\nexport const fetchListFail = (id, error) => ({\n  type: LIST_FETCH_FAIL,\n  id,\n  error,\n});\n\nexport const fetchLists = () => (dispatch, getState) => {\n  dispatch(fetchListsRequest());\n\n  api(getState).get('/api/v1/lists')\n    .then(({ data }) => dispatch(fetchListsSuccess(data)))\n    .catch(err => dispatch(fetchListsFail(err)));\n};\n\nexport const fetchListsRequest = () => ({\n  type: LISTS_FETCH_REQUEST,\n});\n\nexport const fetchListsSuccess = lists => ({\n  type: LISTS_FETCH_SUCCESS,\n  lists,\n});\n\nexport const fetchListsFail = error => ({\n  type: LISTS_FETCH_FAIL,\n  error,\n});\n\nexport const submitListEditor = shouldReset => (dispatch, getState) => {\n  const listId = getState().getIn(['listEditor', 'listId']);\n  const title  = getState().getIn(['listEditor', 'title']);\n\n  if (listId === null) {\n    dispatch(createList(title, shouldReset));\n  } else {\n    dispatch(updateList(listId, title, shouldReset));\n  }\n};\n\nexport const setupListEditor = listId => (dispatch, getState) => {\n  dispatch({\n    type: LIST_EDITOR_SETUP,\n    list: getState().getIn(['lists', listId]),\n  });\n\n  dispatch(fetchListAccounts(listId));\n};\n\nexport const changeListEditorTitle = value => ({\n  type: LIST_EDITOR_TITLE_CHANGE,\n  value,\n});\n\nexport const createList = (title, shouldReset) => (dispatch, getState) => {\n  dispatch(createListRequest());\n\n  api(getState).post('/api/v1/lists', { title }).then(({ data }) => {\n    dispatch(createListSuccess(data));\n\n    if (shouldReset) {\n      dispatch(resetListEditor());\n    }\n  }).catch(err => dispatch(createListFail(err)));\n};\n\nexport const createListRequest = () => ({\n  type: LIST_CREATE_REQUEST,\n});\n\nexport const createListSuccess = list => ({\n  type: LIST_CREATE_SUCCESS,\n  list,\n});\n\nexport const createListFail = error => ({\n  type: LIST_CREATE_FAIL,\n  error,\n});\n\nexport const updateList = (id, title, shouldReset, replies_policy) => (dispatch, getState) => {\n  dispatch(updateListRequest(id));\n\n  api(getState).put(`/api/v1/lists/${id}`, { title, replies_policy }).then(({ data }) => {\n    dispatch(updateListSuccess(data));\n\n    if (shouldReset) {\n      dispatch(resetListEditor());\n    }\n  }).catch(err => dispatch(updateListFail(id, err)));\n};\n\nexport const updateListRequest = id => ({\n  type: LIST_UPDATE_REQUEST,\n  id,\n});\n\nexport const updateListSuccess = list => ({\n  type: LIST_UPDATE_SUCCESS,\n  list,\n});\n\nexport const updateListFail = (id, error) => ({\n  type: LIST_UPDATE_FAIL,\n  id,\n  error,\n});\n\nexport const resetListEditor = () => ({\n  type: LIST_EDITOR_RESET,\n});\n\nexport const deleteList = id => (dispatch, getState) => {\n  dispatch(deleteListRequest(id));\n\n  api(getState).delete(`/api/v1/lists/${id}`)\n    .then(() => dispatch(deleteListSuccess(id)))\n    .catch(err => dispatch(deleteListFail(id, err)));\n};\n\nexport const deleteListRequest = id => ({\n  type: LIST_DELETE_REQUEST,\n  id,\n});\n\nexport const deleteListSuccess = id => ({\n  type: LIST_DELETE_SUCCESS,\n  id,\n});\n\nexport const deleteListFail = (id, error) => ({\n  type: LIST_DELETE_FAIL,\n  id,\n  error,\n});\n\nexport const fetchListAccounts = listId => (dispatch, getState) => {\n  dispatch(fetchListAccountsRequest(listId));\n\n  api(getState).get(`/api/v1/lists/${listId}/accounts`, { params: { limit: 0 } }).then(({ data }) => {\n    dispatch(importFetchedAccounts(data));\n    dispatch(fetchListAccountsSuccess(listId, data));\n  }).catch(err => dispatch(fetchListAccountsFail(listId, err)));\n};\n\nexport const fetchListAccountsRequest = id => ({\n  type: LIST_ACCOUNTS_FETCH_REQUEST,\n  id,\n});\n\nexport const fetchListAccountsSuccess = (id, accounts, next) => ({\n  type: LIST_ACCOUNTS_FETCH_SUCCESS,\n  id,\n  accounts,\n  next,\n});\n\nexport const fetchListAccountsFail = (id, error) => ({\n  type: LIST_ACCOUNTS_FETCH_FAIL,\n  id,\n  error,\n});\n\nexport const fetchListSuggestions = q => (dispatch, getState) => {\n  const params = {\n    q,\n    resolve: false,\n    limit: 4,\n    following: true,\n  };\n\n  api(getState).get('/api/v1/accounts/search', { params }).then(({ data }) => {\n    dispatch(importFetchedAccounts(data));\n    dispatch(fetchListSuggestionsReady(q, data));\n  }).catch(error => dispatch(showAlertForError(error)));\n};\n\nexport const fetchListSuggestionsReady = (query, accounts) => ({\n  type: LIST_EDITOR_SUGGESTIONS_READY,\n  query,\n  accounts,\n});\n\nexport const clearListSuggestions = () => ({\n  type: LIST_EDITOR_SUGGESTIONS_CLEAR,\n});\n\nexport const changeListSuggestions = value => ({\n  type: LIST_EDITOR_SUGGESTIONS_CHANGE,\n  value,\n});\n\nexport const addToListEditor = accountId => (dispatch, getState) => {\n  dispatch(addToList(getState().getIn(['listEditor', 'listId']), accountId));\n};\n\nexport const addToList = (listId, accountId) => (dispatch, getState) => {\n  dispatch(addToListRequest(listId, accountId));\n\n  api(getState).post(`/api/v1/lists/${listId}/accounts`, { account_ids: [accountId] })\n    .then(() => dispatch(addToListSuccess(listId, accountId)))\n    .catch(err => dispatch(addToListFail(listId, accountId, err)));\n};\n\nexport const addToListRequest = (listId, accountId) => ({\n  type: LIST_EDITOR_ADD_REQUEST,\n  listId,\n  accountId,\n});\n\nexport const addToListSuccess = (listId, accountId) => ({\n  type: LIST_EDITOR_ADD_SUCCESS,\n  listId,\n  accountId,\n});\n\nexport const addToListFail = (listId, accountId, error) => ({\n  type: LIST_EDITOR_ADD_FAIL,\n  listId,\n  accountId,\n  error,\n});\n\nexport const removeFromListEditor = accountId => (dispatch, getState) => {\n  dispatch(removeFromList(getState().getIn(['listEditor', 'listId']), accountId));\n};\n\nexport const removeFromList = (listId, accountId) => (dispatch, getState) => {\n  dispatch(removeFromListRequest(listId, accountId));\n\n  api(getState).delete(`/api/v1/lists/${listId}/accounts`, { params: { account_ids: [accountId] } })\n    .then(() => dispatch(removeFromListSuccess(listId, accountId)))\n    .catch(err => dispatch(removeFromListFail(listId, accountId, err)));\n};\n\nexport const removeFromListRequest = (listId, accountId) => ({\n  type: LIST_EDITOR_REMOVE_REQUEST,\n  listId,\n  accountId,\n});\n\nexport const removeFromListSuccess = (listId, accountId) => ({\n  type: LIST_EDITOR_REMOVE_SUCCESS,\n  listId,\n  accountId,\n});\n\nexport const removeFromListFail = (listId, accountId, error) => ({\n  type: LIST_EDITOR_REMOVE_FAIL,\n  listId,\n  accountId,\n  error,\n});\n\nexport const resetListAdder = () => ({\n  type: LIST_ADDER_RESET,\n});\n\nexport const setupListAdder = accountId => (dispatch, getState) => {\n  dispatch({\n    type: LIST_ADDER_SETUP,\n    account: getState().getIn(['accounts', accountId]),\n  });\n  dispatch(fetchLists());\n  dispatch(fetchAccountLists(accountId));\n};\n\nexport const fetchAccountLists = accountId => (dispatch, getState) => {\n  dispatch(fetchAccountListsRequest(accountId));\n\n  api(getState).get(`/api/v1/accounts/${accountId}/lists`)\n    .then(({ data }) => dispatch(fetchAccountListsSuccess(accountId, data)))\n    .catch(err => dispatch(fetchAccountListsFail(accountId, err)));\n};\n\nexport const fetchAccountListsRequest = id => ({\n  type:LIST_ADDER_LISTS_FETCH_REQUEST,\n  id,\n});\n\nexport const fetchAccountListsSuccess = (id, lists) => ({\n  type: LIST_ADDER_LISTS_FETCH_SUCCESS,\n  id,\n  lists,\n});\n\nexport const fetchAccountListsFail = (id, err) => ({\n  type: LIST_ADDER_LISTS_FETCH_FAIL,\n  id,\n  err,\n});\n\nexport const addToListAdder = listId => (dispatch, getState) => {\n  dispatch(addToList(listId, getState().getIn(['listAdder', 'accountId'])));\n};\n\nexport const removeFromListAdder = listId => (dispatch, getState) => {\n  dispatch(removeFromList(listId, getState().getIn(['listAdder', 'accountId'])));\n};\n\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { FormattedMessage } from 'react-intl';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nconst filename = url => url.split('/').pop().split('#')[0].split('?')[0];\n\nexport default class AttachmentList extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.list.isRequired,\n    compact: PropTypes.bool,\n  };\n\n  render () {\n    const { media, compact } = this.props;\n\n    return (\n      <div className={classNames('attachment-list', { compact })}>\n        {!compact && (\n          <div className='attachment-list__icon'>\n            <Icon id='link' />\n          </div>\n        )}\n\n        <ul className='attachment-list__list'>\n          {media.map(attachment => {\n            const displayUrl = attachment.get('remote_url') || attachment.get('url');\n\n            return (\n              <li key={attachment.get('id')}>\n                <a href={displayUrl} target='_blank' rel='noopener noreferrer'>\n                  {compact && <Icon id='link' />}\n                  {compact && ' ' }\n                  {displayUrl ? filename(displayUrl) : <FormattedMessage id='attachments_list.unprocessed' defaultMessage='(unprocessed)' />}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n}\n","import { saveSettings } from './settings';\n\nexport const LANGUAGE_USE = 'LANGUAGE_USE';\n\nexport const useLanguage = language => dispatch => {\n  dispatch({\n    type: LANGUAGE_USE,\n    language,\n  });\n\n  dispatch(saveSettings());\n};\n","import api from '../api';\n\nexport const CUSTOM_EMOJIS_FETCH_REQUEST = 'CUSTOM_EMOJIS_FETCH_REQUEST';\nexport const CUSTOM_EMOJIS_FETCH_SUCCESS = 'CUSTOM_EMOJIS_FETCH_SUCCESS';\nexport const CUSTOM_EMOJIS_FETCH_FAIL = 'CUSTOM_EMOJIS_FETCH_FAIL';\n\nexport function fetchCustomEmojis() {\n  return (dispatch, getState) => {\n    dispatch(fetchCustomEmojisRequest());\n\n    api(getState).get('/api/v1/custom_emojis').then(response => {\n      dispatch(fetchCustomEmojisSuccess(response.data));\n    }).catch(error => {\n      dispatch(fetchCustomEmojisFail(error));\n    });\n  };\n}\n\nexport function fetchCustomEmojisRequest() {\n  return {\n    type: CUSTOM_EMOJIS_FETCH_REQUEST,\n    skipLoading: true,\n  };\n}\n\nexport function fetchCustomEmojisSuccess(custom_emojis) {\n  return {\n    type: CUSTOM_EMOJIS_FETCH_SUCCESS,\n    custom_emojis,\n    skipLoading: true,\n  };\n}\n\nexport function fetchCustomEmojisFail(error) {\n  return {\n    type: CUSTOM_EMOJIS_FETCH_FAIL,\n    error,\n    skipLoading: true,\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { length } from 'stringz';\n\nexport default class CharacterCounter extends React.PureComponent {\n\n  static propTypes = {\n    text: PropTypes.string.isRequired,\n    max: PropTypes.number.isRequired,\n  };\n\n  checkRemainingText (diff) {\n    if (diff < 0) {\n      return <span className='character-counter character-counter--over'>{diff}</span>;\n    }\n\n    return <span className='character-counter'>{diff}</span>;\n  }\n\n  render () {\n    const diff = this.props.max - length(this.props.text);\n    return this.checkRemainingText(diff);\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport IconButton from '../../../components/icon_button';\nimport Overlay from 'react-overlays/Overlay';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport classNames from 'classnames';\nimport Icon from 'mastodon/components/icon';\n\nconst messages = defineMessages({\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  public_long: { id: 'privacy.public.long', defaultMessage: 'Visible for all' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  unlisted_long: { id: 'privacy.unlisted.long', defaultMessage: 'Visible for all, but opted-out of discovery features' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers only' },\n  private_long: { id: 'privacy.private.long', defaultMessage: 'Visible for followers only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Mentioned people only' },\n  direct_long: { id: 'privacy.direct.long', defaultMessage: 'Visible for mentioned users only' },\n  change_privacy: { id: 'privacy.change', defaultMessage: 'Adjust status privacy' },\n});\n\nconst listenerOptions = supportsPassiveEvents ? { passive: true } : false;\n\nclass PrivacyDropdownMenu extends React.PureComponent {\n\n  static propTypes = {\n    style: PropTypes.object,\n    items: PropTypes.array.isRequired,\n    value: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  };\n\n  handleKeyDown = e => {\n    const { items } = this.props;\n    const value = e.currentTarget.getAttribute('data-index');\n    const index = items.findIndex(item => {\n      return (item.value === value);\n    });\n    let element = null;\n\n    switch(e.key) {\n    case 'Escape':\n      this.props.onClose();\n      break;\n    case 'Enter':\n      this.handleClick(e);\n      break;\n    case 'ArrowDown':\n      element = this.node.childNodes[index + 1] || this.node.firstChild;\n      break;\n    case 'ArrowUp':\n      element = this.node.childNodes[index - 1] || this.node.lastChild;\n      break;\n    case 'Tab':\n      if (e.shiftKey) {\n        element = this.node.childNodes[index - 1] || this.node.lastChild;\n      } else {\n        element = this.node.childNodes[index + 1] || this.node.firstChild;\n      }\n      break;\n    case 'Home':\n      element = this.node.firstChild;\n      break;\n    case 'End':\n      element = this.node.lastChild;\n      break;\n    }\n\n    if (element) {\n      element.focus();\n      this.props.onChange(element.getAttribute('data-index'));\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  handleClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onClose();\n    this.props.onChange(value);\n  };\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n    if (this.focusedItem) this.focusedItem.focus({ preventScroll: true });\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  setFocusRef = c => {\n    this.focusedItem = c;\n  };\n\n  render () {\n    const { style, items, value } = this.props;\n\n    return (\n      <div style={{ ...style }} role='listbox' ref={this.setRef}>\n        {items.map(item => (\n          <div role='option' tabIndex='0' key={item.value} data-index={item.value} onKeyDown={this.handleKeyDown} onClick={this.handleClick} className={classNames('privacy-dropdown__option', { active: item.value === value })} aria-selected={item.value === value} ref={item.value === value ? this.setFocusRef : null}>\n            <div className='privacy-dropdown__option__icon'>\n              <Icon id={item.icon} fixedWidth />\n            </div>\n\n            <div className='privacy-dropdown__option__content'>\n              <strong>{item.text}</strong>\n              {item.meta}\n            </div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass PrivacyDropdown extends React.PureComponent {\n\n  static propTypes = {\n    isUserTouching: PropTypes.func,\n    onModalOpen: PropTypes.func,\n    onModalClose: PropTypes.func,\n    value: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    noDirect: PropTypes.bool,\n    container: PropTypes.func,\n    disabled: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    open: false,\n    placement: 'bottom',\n  };\n\n  handleToggle = () => {\n    if (this.props.isUserTouching && this.props.isUserTouching()) {\n      if (this.state.open) {\n        this.props.onModalClose();\n      } else {\n        this.props.onModalOpen({\n          actions: this.options.map(option => ({ ...option, active: option.value === this.props.value })),\n          onClick: this.handleModalActionClick,\n        });\n      }\n    } else {\n      if (this.state.open && this.activeElement) {\n        this.activeElement.focus({ preventScroll: true });\n      }\n      this.setState({ open: !this.state.open });\n    }\n  };\n\n  handleModalActionClick = (e) => {\n    e.preventDefault();\n\n    const { value } = this.options[e.currentTarget.getAttribute('data-index')];\n\n    this.props.onModalClose();\n    this.props.onChange(value);\n  };\n\n  handleKeyDown = e => {\n    switch(e.key) {\n    case 'Escape':\n      this.handleClose();\n      break;\n    }\n  };\n\n  handleMouseDown = () => {\n    if (!this.state.open) {\n      this.activeElement = document.activeElement;\n    }\n  };\n\n  handleButtonKeyDown = (e) => {\n    switch(e.key) {\n    case ' ':\n    case 'Enter':\n      this.handleMouseDown();\n      break;\n    }\n  };\n\n  handleClose = () => {\n    if (this.state.open && this.activeElement) {\n      this.activeElement.focus({ preventScroll: true });\n    }\n    this.setState({ open: false });\n  };\n\n  handleChange = value => {\n    this.props.onChange(value);\n  };\n\n  componentWillMount () {\n    const { intl: { formatMessage } } = this.props;\n\n    this.options = [\n      { icon: 'globe', value: 'public', text: formatMessage(messages.public_short), meta: formatMessage(messages.public_long) },\n      { icon: 'unlock', value: 'unlisted', text: formatMessage(messages.unlisted_short), meta: formatMessage(messages.unlisted_long) },\n      { icon: 'lock', value: 'private', text: formatMessage(messages.private_short), meta: formatMessage(messages.private_long) },\n    ];\n\n    if (!this.props.noDirect) {\n      this.options.push(\n        { icon: 'at', value: 'direct', text: formatMessage(messages.direct_short), meta: formatMessage(messages.direct_long) },\n      );\n    }\n  }\n\n  setTargetRef = c => {\n    this.target = c;\n  };\n\n  findTarget = () => {\n    return this.target;\n  };\n\n  handleOverlayEnter = (state) => {\n    this.setState({ placement: state.placement });\n  };\n\n  render () {\n    const { value, container, disabled, intl } = this.props;\n    const { open, placement } = this.state;\n\n    const valueOption = this.options.find(item => item.value === value);\n\n    return (\n      <div className={classNames('privacy-dropdown', placement, { active: open })} onKeyDown={this.handleKeyDown}>\n        <div className={classNames('privacy-dropdown__value', { active: this.options.indexOf(valueOption) === (placement === 'bottom' ? 0 : (this.options.length - 1)) })} ref={this.setTargetRef}>\n          <IconButton\n            className='privacy-dropdown__value-icon'\n            icon={valueOption.icon}\n            title={intl.formatMessage(messages.change_privacy)}\n            size={18}\n            expanded={open}\n            active={open}\n            inverted\n            onClick={this.handleToggle}\n            onMouseDown={this.handleMouseDown}\n            onKeyDown={this.handleButtonKeyDown}\n            style={{ height: null, lineHeight: '27px' }}\n            disabled={disabled}\n          />\n        </div>\n\n        <Overlay show={open} placement={'bottom'} flip target={this.findTarget} container={container} popperConfig={{ strategy: 'fixed', onFirstUpdate: this.handleOverlayEnter }}>\n          {({ props, placement }) => (\n            <div {...props}>\n              <div className={`dropdown-animation privacy-dropdown__dropdown ${placement}`}>\n                <PrivacyDropdownMenu\n                  items={this.options}\n                  value={value}\n                  onClose={this.handleClose}\n                  onChange={this.handleChange}\n                />\n              </div>\n            </div>\n          )}\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport Icon from 'mastodon/components/icon';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class UploadProgress extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    progress: PropTypes.number,\n    isProcessing: PropTypes.bool,\n  };\n\n  render () {\n    const { active, progress, isProcessing } = this.props;\n\n    if (!active) {\n      return null;\n    }\n\n    let message;\n\n    if (isProcessing) {\n      message = <FormattedMessage id='upload_progress.processing' defaultMessage='Processing…' />;\n    } else {\n      message = <FormattedMessage id='upload_progress.label' defaultMessage='Uploading…' />;\n    }\n\n    return (\n      <div className='upload-progress'>\n        <div className='upload-progress__icon'>\n          <Icon id='upload' />\n        </div>\n\n        <div className='upload-progress__message'>\n          {message}\n\n          <div className='upload-progress__backdrop'>\n            <Motion defaultStyle={{ width: 0 }} style={{ width: spring(progress) }}>\n              {({ width }) =>\n                <div className='upload-progress__tracker' style={{ width: `${width}%` }} />\n              }\n            </Motion>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import api from '../api';\n\nexport const FEATURED_TAGS_FETCH_REQUEST = 'FEATURED_TAGS_FETCH_REQUEST';\nexport const FEATURED_TAGS_FETCH_SUCCESS = 'FEATURED_TAGS_FETCH_SUCCESS';\nexport const FEATURED_TAGS_FETCH_FAIL    = 'FEATURED_TAGS_FETCH_FAIL';\n\nexport const fetchFeaturedTags = (id) => (dispatch, getState) => {\n  if (getState().getIn(['user_lists', 'featured_tags', id, 'items'])) {\n    return;\n  }\n\n  dispatch(fetchFeaturedTagsRequest(id));\n\n  api(getState).get(`/api/v1/accounts/${id}/featured_tags`)\n    .then(({ data }) => dispatch(fetchFeaturedTagsSuccess(id, data)))\n    .catch(err => dispatch(fetchFeaturedTagsFail(id, err)));\n};\n\nexport const fetchFeaturedTagsRequest = (id) => ({\n  type: FEATURED_TAGS_FETCH_REQUEST,\n  id,\n});\n\nexport const fetchFeaturedTagsSuccess = (id, tags) => ({\n  type: FEATURED_TAGS_FETCH_SUCCESS,\n  id,\n  tags,\n});\n\nexport const fetchFeaturedTagsFail = (id, error) => ({\n  type: FEATURED_TAGS_FETCH_FAIL,\n  id,\n  error,\n});\n","import api from '../api';\nimport { importFetchedAccounts } from './importer';\n\nexport const HISTORY_FETCH_REQUEST = 'HISTORY_FETCH_REQUEST';\nexport const HISTORY_FETCH_SUCCESS = 'HISTORY_FETCH_SUCCESS';\nexport const HISTORY_FETCH_FAIL    = 'HISTORY_FETCH_FAIL';\n\nexport const fetchHistory = statusId => (dispatch, getState) => {\n  const loading = getState().getIn(['history', statusId, 'loading']);\n\n  if (loading) {\n    return;\n  }\n\n  dispatch(fetchHistoryRequest(statusId));\n\n  api(getState).get(`/api/v1/statuses/${statusId}/history`).then(({ data }) => {\n    dispatch(importFetchedAccounts(data.map(x => x.account)));\n    dispatch(fetchHistorySuccess(statusId, data));\n  }).catch(error => dispatch(fetchHistoryFail(error)));\n};\n\nexport const fetchHistoryRequest = statusId => ({\n  type: HISTORY_FETCH_REQUEST,\n  statusId,\n});\n\nexport const fetchHistorySuccess = (statusId, history) => ({\n  type: HISTORY_FETCH_SUCCESS,\n  statusId,\n  history,\n});\n\nexport const fetchHistoryFail = error => ({\n  type: HISTORY_FETCH_FAIL,\n  error,\n});\n","// @ts-check\n\nexport const PICTURE_IN_PICTURE_DEPLOY = 'PICTURE_IN_PICTURE_DEPLOY';\nexport const PICTURE_IN_PICTURE_REMOVE = 'PICTURE_IN_PICTURE_REMOVE';\n\n/**\n * @typedef MediaProps\n * @property {string} src\n * @property {boolean} muted\n * @property {number} volume\n * @property {number} currentTime\n * @property {string} poster\n * @property {string} backgroundColor\n * @property {string} foregroundColor\n * @property {string} accentColor\n */\n\n/**\n * @param {string} statusId\n * @param {string} accountId\n * @param {string} playerType\n * @param {MediaProps} props\n * @return {object}\n */\nexport const deployPictureInPicture = (statusId, accountId, playerType, props) => {\n  return (dispatch, getState) => {\n    // Do not open a player for a toot that does not exist\n    if (getState().hasIn(['statuses', statusId])) {\n      dispatch({\n        type: PICTURE_IN_PICTURE_DEPLOY,\n        statusId,\n        accountId,\n        playerType,\n        props,\n      });\n    }\n  };\n};\n\n/*\n * @return {object}\n */\nexport const removePictureInPicture = () => ({\n  type: PICTURE_IN_PICTURE_REMOVE,\n});\n","export const DROPDOWN_MENU_OPEN = 'DROPDOWN_MENU_OPEN';\nexport const DROPDOWN_MENU_CLOSE = 'DROPDOWN_MENU_CLOSE';\n\nexport function openDropdownMenu(id, keyboard, scroll_key) {\n  return { type: DROPDOWN_MENU_OPEN, id, keyboard, scroll_key };\n}\n\nexport function closeDropdownMenu(id) {\n  return { type: DROPDOWN_MENU_CLOSE, id };\n}\n","export const HEIGHT_CACHE_SET = 'HEIGHT_CACHE_SET';\nexport const HEIGHT_CACHE_CLEAR = 'HEIGHT_CACHE_CLEAR';\n\nexport function setHeight (key, id, height) {\n  return {\n    type: HEIGHT_CACHE_SET,\n    key,\n    id,\n    height,\n  };\n}\n\nexport function clearHeight () {\n  return {\n    type: HEIGHT_CACHE_CLEAR,\n  };\n}\n","import api from '../api';\nimport { openModal } from './modal';\n\nexport const FILTERS_FETCH_REQUEST = 'FILTERS_FETCH_REQUEST';\nexport const FILTERS_FETCH_SUCCESS = 'FILTERS_FETCH_SUCCESS';\nexport const FILTERS_FETCH_FAIL    = 'FILTERS_FETCH_FAIL';\n\nexport const FILTERS_STATUS_CREATE_REQUEST = 'FILTERS_STATUS_CREATE_REQUEST';\nexport const FILTERS_STATUS_CREATE_SUCCESS = 'FILTERS_STATUS_CREATE_SUCCESS';\nexport const FILTERS_STATUS_CREATE_FAIL    = 'FILTERS_STATUS_CREATE_FAIL';\n\nexport const FILTERS_CREATE_REQUEST = 'FILTERS_CREATE_REQUEST';\nexport const FILTERS_CREATE_SUCCESS = 'FILTERS_CREATE_SUCCESS';\nexport const FILTERS_CREATE_FAIL    = 'FILTERS_CREATE_FAIL';\n\nexport const initAddFilter = (status, { contextType }) => dispatch =>\n  dispatch(openModal('FILTER', {\n    statusId: status?.get('id'),\n    contextType: contextType,\n  }));\n\nexport const fetchFilters = () => (dispatch, getState) => {\n  dispatch({\n    type: FILTERS_FETCH_REQUEST,\n    skipLoading: true,\n  });\n\n  api(getState)\n    .get('/api/v2/filters')\n    .then(({ data }) => dispatch({\n      type: FILTERS_FETCH_SUCCESS,\n      filters: data,\n      skipLoading: true,\n    }))\n    .catch(err => dispatch({\n      type: FILTERS_FETCH_FAIL,\n      err,\n      skipLoading: true,\n      skipAlert: true,\n    }));\n};\n\nexport const createFilterStatus = (params, onSuccess, onFail) => (dispatch, getState) => {\n  dispatch(createFilterStatusRequest());\n\n  api(getState).post(`/api/v2/filters/${params.filter_id}/statuses`, params).then(response => {\n    dispatch(createFilterStatusSuccess(response.data));\n    if (onSuccess) onSuccess();\n  }).catch(error => {\n    dispatch(createFilterStatusFail(error));\n    if (onFail) onFail();\n  });\n};\n\nexport const createFilterStatusRequest = () => ({\n  type: FILTERS_STATUS_CREATE_REQUEST,\n});\n\nexport const createFilterStatusSuccess = filter_status => ({\n  type: FILTERS_STATUS_CREATE_SUCCESS,\n  filter_status,\n});\n\nexport const createFilterStatusFail = error => ({\n  type: FILTERS_STATUS_CREATE_FAIL,\n  error,\n});\n\nexport const createFilter = (params, onSuccess, onFail) => (dispatch, getState) => {\n  dispatch(createFilterRequest());\n\n  api(getState).post('/api/v2/filters', params).then(response => {\n    dispatch(createFilterSuccess(response.data));\n    if (onSuccess) onSuccess(response.data);\n  }).catch(error => {\n    dispatch(createFilterFail(error));\n    if (onFail) onFail();\n  });\n};\n\nexport const createFilterRequest = () => ({\n  type: FILTERS_CREATE_REQUEST,\n});\n\nexport const createFilterSuccess = filter => ({\n  type: FILTERS_CREATE_SUCCESS,\n  filter,\n});\n\nexport const createFilterFail = error => ({\n  type: FILTERS_CREATE_FAIL,\n  error,\n});\n","import React from 'react';\n\n// Copied from emoji-mart for consistency with emoji picker and since\n// they don't export the icons in the package\nexport const loupeIcon = (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' width='13' height='13'>\n    <path d='M12.9 14.32a8 8 0 1 1 1.41-1.41l5.35 5.33-1.42 1.42-5.33-5.34zM8 14A6 6 0 1 0 8 2a6 6 0 0 0 0 12z' />\n  </svg>\n);\n\nexport const deleteIcon = (\n  <svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20' width='13' height='13'>\n    <path d='M10 8.586L2.929 1.515 1.515 2.929 8.586 10l-7.071 7.071 1.414 1.414L10 11.414l7.071 7.071 1.414-1.414L11.414 10l7.071-7.071-1.414-1.414L10 8.586z' />\n  </svg>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const CircularProgress = ({ size, strokeWidth }) => {\n  const viewBox = `0 0 ${size} ${size}`;\n  const radius  = (size - strokeWidth) / 2;\n\n  return (\n    <svg width={size} height={size} viewBox={viewBox} className='circular-progress' role='progressbar'>\n      <circle\n        fill='none'\n        cx={size / 2}\n        cy={size / 2}\n        r={radius}\n        strokeWidth={`${strokeWidth}px`}\n      />\n    </svg>\n  );\n};\n\nCircularProgress.propTypes = {\n  size: PropTypes.number.isRequired,\n  strokeWidth: PropTypes.number.isRequired,\n};\n\nconst LoadingIndicator = () => (\n  <div className='loading-indicator'>\n    <CircularProgress size={50} strokeWidth={6} />\n  </div>\n);\n\nexport default LoadingIndicator;\n","import { ACCOUNT_IMPORT, ACCOUNTS_IMPORT } from '../actions/importer';\nimport { ACCOUNT_LOOKUP_FAIL } from '../actions/accounts';\nimport { Map as ImmutableMap } from 'immutable';\n\nexport const normalizeForLookup = str => str.toLowerCase();\n\nconst initialState = ImmutableMap();\n\nexport default function accountsMap(state = initialState, action) {\n  switch(action.type) {\n  case ACCOUNT_LOOKUP_FAIL:\n    return action.error?.response?.status === 404 ? state.set(normalizeForLookup(action.acct), null) : state;\n  case ACCOUNT_IMPORT:\n    return state.set(normalizeForLookup(action.account.acct), action.account.id);\n  case ACCOUNTS_IMPORT:\n    return state.withMutations(map => action.accounts.forEach(account => map.set(normalizeForLookup(account.acct), account.id)));\n  default:\n    return state;\n  }\n}\n","import api from '../api';\nimport { importFetchedPoll } from './importer';\n\nexport const POLL_VOTE_REQUEST = 'POLL_VOTE_REQUEST';\nexport const POLL_VOTE_SUCCESS = 'POLL_VOTE_SUCCESS';\nexport const POLL_VOTE_FAIL    = 'POLL_VOTE_FAIL';\n\nexport const POLL_FETCH_REQUEST = 'POLL_FETCH_REQUEST';\nexport const POLL_FETCH_SUCCESS = 'POLL_FETCH_SUCCESS';\nexport const POLL_FETCH_FAIL    = 'POLL_FETCH_FAIL';\n\nexport const vote = (pollId, choices) => (dispatch, getState) => {\n  dispatch(voteRequest());\n\n  api(getState).post(`/api/v1/polls/${pollId}/votes`, { choices })\n    .then(({ data }) => {\n      dispatch(importFetchedPoll(data));\n      dispatch(voteSuccess(data));\n    })\n    .catch(err => dispatch(voteFail(err)));\n};\n\nexport const fetchPoll = pollId => (dispatch, getState) => {\n  dispatch(fetchPollRequest());\n\n  api(getState).get(`/api/v1/polls/${pollId}`)\n    .then(({ data }) => {\n      dispatch(importFetchedPoll(data));\n      dispatch(fetchPollSuccess(data));\n    })\n    .catch(err => dispatch(fetchPollFail(err)));\n};\n\nexport const voteRequest = () => ({\n  type: POLL_VOTE_REQUEST,\n});\n\nexport const voteSuccess = poll => ({\n  type: POLL_VOTE_SUCCESS,\n  poll,\n});\n\nexport const voteFail = error => ({\n  type: POLL_VOTE_FAIL,\n  error,\n});\n\nexport const fetchPollRequest = () => ({\n  type: POLL_FETCH_REQUEST,\n});\n\nexport const fetchPollSuccess = poll => ({\n  type: POLL_FETCH_SUCCESS,\n  poll,\n});\n\nexport const fetchPollFail = error => ({\n  type: POLL_FETCH_FAIL,\n  error,\n});\n","import { connect } from 'react-redux';\nimport { debounce } from 'lodash';\n\nimport Poll from 'mastodon/components/poll';\nimport { fetchPoll, vote } from 'mastodon/actions/polls';\n\nconst mapDispatchToProps = (dispatch, { pollId }) => ({\n  refresh: debounce(\n    () => {\n      dispatch(fetchPoll(pollId));\n    },\n    1000,\n    { leading: true },\n  ),\n\n  onVote (choices) {\n    dispatch(vote(pollId, choices));\n  },\n});\n\nconst mapStateToProps = (state, { pollId }) => ({\n  poll: state.getIn(['polls', pollId]),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Poll);\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport classnames from 'classnames';\nimport PollContainer from 'mastodon/containers/poll_container';\nimport Icon from 'mastodon/components/icon';\nimport { autoPlayGif, languages as preloadedLanguages } from 'mastodon/initial_state';\n\nconst MAX_HEIGHT = 706; // 22px * 32 (+ 2px padding at the top)\n\nclass TranslateButton extends React.PureComponent {\n\n  static propTypes = {\n    translation: ImmutablePropTypes.map,\n    onClick: PropTypes.func,\n  };\n\n  render () {\n    const { translation, onClick } = this.props;\n\n    if (translation) {\n      const language     = preloadedLanguages.find(lang => lang[0] === translation.get('detected_source_language'));\n      const languageName = language ? language[2] : translation.get('detected_source_language');\n      const provider     = translation.get('provider');\n\n      return (\n        <div className='translate-button'>\n          <div className='translate-button__meta'>\n            <FormattedMessage id='status.translated_from_with' defaultMessage='Translated from {lang} using {provider}' values={{ lang: languageName, provider }} />\n          </div>\n\n          <button className='link-button' onClick={onClick}>\n            <FormattedMessage id='status.show_original' defaultMessage='Show original' />\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <button className='status__content__read-more-button' onClick={onClick}>\n        <FormattedMessage id='status.translate' defaultMessage='Translate' />\n      </button>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass StatusContent extends React.PureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n    identity: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    expanded: PropTypes.bool,\n    onExpandedToggle: PropTypes.func,\n    onTranslate: PropTypes.func,\n    onClick: PropTypes.func,\n    collapsable: PropTypes.bool,\n    onCollapsedToggle: PropTypes.func,\n    intl: PropTypes.object,\n  };\n\n  state = {\n    hidden: true,\n  };\n\n  _updateStatusLinks () {\n    const node = this.node;\n\n    if (!node) {\n      return;\n    }\n\n    const { status, onCollapsedToggle } = this.props;\n    const links = node.querySelectorAll('a');\n\n    let link, mention;\n\n    for (var i = 0; i < links.length; ++i) {\n      link = links[i];\n\n      if (link.classList.contains('status-link')) {\n        continue;\n      }\n\n      link.classList.add('status-link');\n\n      mention = this.props.status.get('mentions').find(item => link.href === item.get('url'));\n\n      if (mention) {\n        link.addEventListener('click', this.onMentionClick.bind(this, mention), false);\n        link.setAttribute('title', mention.get('acct'));\n        link.setAttribute('href', `/@${mention.get('acct')}`);\n      } else if (link.textContent[0] === '#' || (link.previousSibling && link.previousSibling.textContent && link.previousSibling.textContent[link.previousSibling.textContent.length - 1] === '#')) {\n        link.addEventListener('click', this.onHashtagClick.bind(this, link.text), false);\n        link.setAttribute('href', `/tags/${link.text.slice(1)}`);\n      } else {\n        link.setAttribute('title', link.href);\n        link.classList.add('unhandled-link');\n      }\n    }\n\n    if (status.get('collapsed', null) === null && onCollapsedToggle) {\n      const { collapsable, onClick } = this.props;\n\n      const collapsed =\n          collapsable\n          && onClick\n          && node.clientHeight > MAX_HEIGHT\n          && status.get('spoiler_text').length === 0;\n\n      onCollapsedToggle(collapsed);\n    }\n  }\n\n  handleMouseEnter = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-original');\n    }\n  };\n\n  handleMouseLeave = ({ currentTarget }) => {\n    if (autoPlayGif) {\n      return;\n    }\n\n    const emojis = currentTarget.querySelectorAll('.custom-emoji');\n\n    for (var i = 0; i < emojis.length; i++) {\n      let emoji = emojis[i];\n      emoji.src = emoji.getAttribute('data-static');\n    }\n  };\n\n  componentDidMount () {\n    this._updateStatusLinks();\n  }\n\n  componentDidUpdate () {\n    this._updateStatusLinks();\n  }\n\n  onMentionClick = (mention, e) => {\n    if (this.context.router && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.context.router.history.push(`/@${mention.get('acct')}`);\n    }\n  };\n\n  onHashtagClick = (hashtag, e) => {\n    hashtag = hashtag.replace(/^#/, '');\n\n    if (this.context.router && e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.context.router.history.push(`/tags/${hashtag}`);\n    }\n  };\n\n  handleMouseDown = (e) => {\n    this.startXY = [e.clientX, e.clientY];\n  };\n\n  handleMouseUp = (e) => {\n    if (!this.startXY) {\n      return;\n    }\n\n    const [ startX, startY ] = this.startXY;\n    const [ deltaX, deltaY ] = [Math.abs(e.clientX - startX), Math.abs(e.clientY - startY)];\n\n    let element = e.target;\n    while (element) {\n      if (element.localName === 'button' || element.localName === 'a' || element.localName === 'label') {\n        return;\n      }\n      element = element.parentNode;\n    }\n\n    if (deltaX + deltaY < 5 && e.button === 0 && this.props.onClick) {\n      this.props.onClick();\n    }\n\n    this.startXY = null;\n  };\n\n  handleSpoilerClick = (e) => {\n    e.preventDefault();\n\n    if (this.props.onExpandedToggle) {\n      // The parent manages the state\n      this.props.onExpandedToggle();\n    } else {\n      this.setState({ hidden: !this.state.hidden });\n    }\n  };\n\n  handleTranslate = () => {\n    this.props.onTranslate();\n  };\n\n  setRef = (c) => {\n    this.node = c;\n  };\n\n  render () {\n    const { status, intl } = this.props;\n\n    const hidden = this.props.onExpandedToggle ? !this.props.expanded : this.state.hidden;\n    const renderReadMore = this.props.onClick && status.get('collapsed');\n    const renderTranslate = this.props.onTranslate && status.get('translatable');\n\n    const content = { __html: status.get('translation') ? status.getIn(['translation', 'content']) : status.get('contentHtml') };\n    const spoilerContent = { __html: status.get('spoilerHtml') };\n    const lang = status.get('translation') ? intl.locale : status.get('language');\n    const classNames = classnames('status__content', {\n      'status__content--with-action': this.props.onClick && this.context.router,\n      'status__content--with-spoiler': status.get('spoiler_text').length > 0,\n      'status__content--collapsed': renderReadMore,\n    });\n\n    const readMoreButton = renderReadMore && (\n      <button className='status__content__read-more-button' onClick={this.props.onClick} key='read-more'>\n        <FormattedMessage id='status.read_more' defaultMessage='Read more' /><Icon id='angle-right' fixedWidth />\n      </button>\n    );\n\n    const translateButton = renderTranslate && (\n      <TranslateButton onClick={this.handleTranslate} translation={status.get('translation')} />\n    );\n\n    const poll = !!status.get('poll') && (\n      <PollContainer pollId={status.get('poll')} lang={status.get('language')} />\n    );\n\n    if (status.get('spoiler_text').length > 0) {\n      let mentionsPlaceholder = '';\n\n      const mentionLinks = status.get('mentions').map(item => (\n        <Link to={`/@${item.get('acct')}`} key={item.get('id')} className='status-link mention'>\n          @<span>{item.get('username')}</span>\n        </Link>\n      )).reduce((aggregate, item) => [...aggregate, item, ' '], []);\n\n      const toggleText = hidden ? <FormattedMessage id='status.show_more' defaultMessage='Show more' /> : <FormattedMessage id='status.show_less' defaultMessage='Show less' />;\n\n      if (hidden) {\n        mentionsPlaceholder = <div>{mentionLinks}</div>;\n      }\n\n      return (\n        <div className={classNames} ref={this.setRef} tabIndex='0' onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n          <p style={{ marginBottom: hidden && status.get('mentions').isEmpty() ? '0px' : null }}>\n            <span dangerouslySetInnerHTML={spoilerContent} className='translate' lang={lang} />\n            {' '}\n            <button type='button' className={`status__content__spoiler-link ${hidden ? 'status__content__spoiler-link--show-more' : 'status__content__spoiler-link--show-less'}`} onClick={this.handleSpoilerClick} aria-expanded={!hidden}>{toggleText}</button>\n          </p>\n\n          {mentionsPlaceholder}\n\n          <div tabIndex={!hidden ? 0 : null} className={`status__content__text ${!hidden ? 'status__content__text--visible' : ''} translate`} lang={lang} dangerouslySetInnerHTML={content} />\n\n          {!hidden && poll}\n          {!hidden && translateButton}\n        </div>\n      );\n    } else if (this.props.onClick) {\n      return (\n        <>\n          <div className={classNames} ref={this.setRef} tabIndex='0' onMouseDown={this.handleMouseDown} onMouseUp={this.handleMouseUp} key='status-content' onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n            <div className='status__content__text status__content__text--visible translate' lang={lang} dangerouslySetInnerHTML={content} />\n\n            {poll}\n            {translateButton}\n          </div>\n\n          {readMoreButton}\n        </>\n      );\n    } else {\n      return (\n        <div className={classNames} ref={this.setRef} tabIndex='0' onMouseEnter={this.handleMouseEnter} onMouseLeave={this.handleMouseLeave}>\n          <div className='status__content__text status__content__text--visible translate' lang={lang} dangerouslySetInnerHTML={content} />\n\n          {poll}\n          {translateButton}\n        </div>\n      );\n    }\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport { EmojiPicker as EmojiPickerAsync } from '../../ui/util/async-components';\nimport Overlay from 'react-overlays/Overlay';\nimport classNames from 'classnames';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport { buildCustomEmojis, categoriesFromEmojis } from '../../emoji/emoji';\nimport { assetHost } from 'mastodon/utils/config';\n\nconst messages = defineMessages({\n  emoji: { id: 'emoji_button.label', defaultMessage: 'Insert emoji' },\n  emoji_search: { id: 'emoji_button.search', defaultMessage: 'Search...' },\n  custom: { id: 'emoji_button.custom', defaultMessage: 'Custom' },\n  recent: { id: 'emoji_button.recent', defaultMessage: 'Frequently used' },\n  search_results: { id: 'emoji_button.search_results', defaultMessage: 'Search results' },\n  people: { id: 'emoji_button.people', defaultMessage: 'People' },\n  nature: { id: 'emoji_button.nature', defaultMessage: 'Nature' },\n  food: { id: 'emoji_button.food', defaultMessage: 'Food & Drink' },\n  activity: { id: 'emoji_button.activity', defaultMessage: 'Activity' },\n  travel: { id: 'emoji_button.travel', defaultMessage: 'Travel & Places' },\n  objects: { id: 'emoji_button.objects', defaultMessage: 'Objects' },\n  symbols: { id: 'emoji_button.symbols', defaultMessage: 'Symbols' },\n  flags: { id: 'emoji_button.flags', defaultMessage: 'Flags' },\n});\n\nlet EmojiPicker, Emoji; // load asynchronously\n\nconst listenerOptions = supportsPassiveEvents ? { passive: true } : false;\n\nconst backgroundImageFn = () => `${assetHost}/emoji/sheet_13.png`;\n\nconst notFoundFn = () => (\n  <div className='emoji-mart-no-results'>\n    <Emoji\n      emoji='sleuth_or_spy'\n      set='twitter'\n      size={32}\n      sheetSize={32}\n      backgroundImageFn={backgroundImageFn}\n    />\n\n    <div className='emoji-mart-no-results-label'>\n      <FormattedMessage id='emoji_button.not_found' defaultMessage='No matching emojis found' />\n    </div>\n  </div>\n);\n\nclass ModifierPickerMenu extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n  };\n\n  handleClick = e => {\n    this.props.onSelect(e.currentTarget.getAttribute('data-index') * 1);\n  };\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.active) {\n      this.attachListeners();\n    } else {\n      this.removeListeners();\n    }\n  }\n\n  componentWillUnmount () {\n    this.removeListeners();\n  }\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  };\n\n  attachListeners () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  removeListeners () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  render () {\n    const { active } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers__menu' style={{ display: active ? 'block' : 'none' }} ref={this.setRef}>\n        <button type='button' onClick={this.handleClick} data-index={1}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={1} backgroundImageFn={backgroundImageFn} /></button>\n        <button type='button' onClick={this.handleClick} data-index={2}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={2} backgroundImageFn={backgroundImageFn} /></button>\n        <button type='button' onClick={this.handleClick} data-index={3}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={3} backgroundImageFn={backgroundImageFn} /></button>\n        <button type='button' onClick={this.handleClick} data-index={4}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={4} backgroundImageFn={backgroundImageFn} /></button>\n        <button type='button' onClick={this.handleClick} data-index={5}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={5} backgroundImageFn={backgroundImageFn} /></button>\n        <button type='button' onClick={this.handleClick} data-index={6}><Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={6} backgroundImageFn={backgroundImageFn} /></button>\n      </div>\n    );\n  }\n\n}\n\nclass ModifierPicker extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    modifier: PropTypes.number,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n    onOpen: PropTypes.func,\n  };\n\n  handleClick = () => {\n    if (this.props.active) {\n      this.props.onClose();\n    } else {\n      this.props.onOpen();\n    }\n  };\n\n  handleSelect = modifier => {\n    this.props.onChange(modifier);\n    this.props.onClose();\n  };\n\n  render () {\n    const { active, modifier } = this.props;\n\n    return (\n      <div className='emoji-picker-dropdown__modifiers'>\n        <Emoji emoji='fist' set='twitter' size={22} sheetSize={32} skin={modifier} onClick={this.handleClick} backgroundImageFn={backgroundImageFn} />\n        <ModifierPickerMenu active={active} onSelect={this.handleSelect} onClose={this.props.onClose} />\n      </div>\n    );\n  }\n\n}\n\n@injectIntl\nclass EmojiPickerMenu extends React.PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    loading: PropTypes.bool,\n    onClose: PropTypes.func.isRequired,\n    onPick: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    intl: PropTypes.object.isRequired,\n    skinTone: PropTypes.number.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n  };\n\n  static defaultProps = {\n    style: {},\n    loading: true,\n    frequentlyUsedEmojis: [],\n  };\n\n  state = {\n    modifierOpen: false,\n    readyToFocus: false,\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  };\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n\n    // Because of https://github.com/react-bootstrap/react-bootstrap/issues/2614 we need\n    // to wait for a frame before focusing\n    requestAnimationFrame(() => {\n      this.setState({ readyToFocus: true });\n      if (this.node) {\n        const element = this.node.querySelector('input[type=\"search\"]');\n        if (element) element.focus();\n      }\n    });\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  getI18n = () => {\n    const { intl } = this.props;\n\n    return {\n      search: intl.formatMessage(messages.emoji_search),\n      categories: {\n        search: intl.formatMessage(messages.search_results),\n        recent: intl.formatMessage(messages.recent),\n        people: intl.formatMessage(messages.people),\n        nature: intl.formatMessage(messages.nature),\n        foods: intl.formatMessage(messages.food),\n        activity: intl.formatMessage(messages.activity),\n        places: intl.formatMessage(messages.travel),\n        objects: intl.formatMessage(messages.objects),\n        symbols: intl.formatMessage(messages.symbols),\n        flags: intl.formatMessage(messages.flags),\n        custom: intl.formatMessage(messages.custom),\n      },\n    };\n  };\n\n  handleClick = (emoji, event) => {\n    if (!emoji.native) {\n      emoji.native = emoji.colons;\n    }\n    if (!(event.ctrlKey || event.metaKey)) {\n      this.props.onClose();\n    }\n    this.props.onPick(emoji);\n  };\n\n  handleModifierOpen = () => {\n    this.setState({ modifierOpen: true });\n  };\n\n  handleModifierClose = () => {\n    this.setState({ modifierOpen: false });\n  };\n\n  handleModifierChange = modifier => {\n    this.props.onSkinTone(modifier);\n  };\n\n  render () {\n    const { loading, style, intl, custom_emojis, skinTone, frequentlyUsedEmojis } = this.props;\n\n    if (loading) {\n      return <div style={{ width: 299 }} />;\n    }\n\n    const title = intl.formatMessage(messages.emoji);\n\n    const { modifierOpen } = this.state;\n\n    const categoriesSort = [\n      'recent',\n      'people',\n      'nature',\n      'foods',\n      'activity',\n      'places',\n      'objects',\n      'symbols',\n      'flags',\n    ];\n\n    categoriesSort.splice(1, 0, ...Array.from(categoriesFromEmojis(custom_emojis)).sort());\n\n    return (\n      <div className={classNames('emoji-picker-dropdown__menu', { selecting: modifierOpen })} style={style} ref={this.setRef}>\n        <EmojiPicker\n          perLine={8}\n          emojiSize={22}\n          sheetSize={32}\n          custom={buildCustomEmojis(custom_emojis)}\n          color=''\n          emoji=''\n          set='twitter'\n          title={title}\n          i18n={this.getI18n()}\n          onClick={this.handleClick}\n          include={categoriesSort}\n          recent={frequentlyUsedEmojis}\n          skin={skinTone}\n          showPreview={false}\n          showSkinTones={false}\n          backgroundImageFn={backgroundImageFn}\n          notFound={notFoundFn}\n          autoFocus={this.state.readyToFocus}\n          emojiTooltip\n        />\n\n        <ModifierPicker\n          active={modifierOpen}\n          modifier={skinTone}\n          onOpen={this.handleModifierOpen}\n          onClose={this.handleModifierClose}\n          onChange={this.handleModifierChange}\n        />\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass EmojiPickerDropdown extends React.PureComponent {\n\n  static propTypes = {\n    custom_emojis: ImmutablePropTypes.list,\n    frequentlyUsedEmojis: PropTypes.arrayOf(PropTypes.string),\n    intl: PropTypes.object.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    onSkinTone: PropTypes.func.isRequired,\n    skinTone: PropTypes.number.isRequired,\n    button: PropTypes.node,\n    disabled: PropTypes.bool,\n  };\n\n  state = {\n    active: false,\n    loading: false,\n  };\n\n  setRef = (c) => {\n    this.dropdown = c;\n  };\n\n  onShowDropdown = () => {\n    this.setState({ active: true });\n\n    if (!EmojiPicker) {\n      this.setState({ loading: true });\n\n      EmojiPickerAsync().then(EmojiMart => {\n        EmojiPicker = EmojiMart.Picker;\n        Emoji       = EmojiMart.Emoji;\n\n        this.setState({ loading: false });\n      }).catch(() => {\n        this.setState({ loading: false, active: false });\n      });\n    }\n  };\n\n  onHideDropdown = () => {\n    this.setState({ active: false });\n  };\n\n  onToggle = (e) => {\n    if (!this.state.disabled && !this.state.loading && (!e.key || e.key === 'Enter')) {\n      if (this.state.active) {\n        this.onHideDropdown();\n      } else {\n        this.onShowDropdown(e);\n      }\n    }\n  };\n\n  handleKeyDown = e => {\n    if (e.key === 'Escape') {\n      this.onHideDropdown();\n    }\n  };\n\n  setTargetRef = c => {\n    this.target = c;\n  };\n\n  findTarget = () => {\n    return this.target;\n  };\n\n  render () {\n    const { intl, onPickEmoji, onSkinTone, skinTone, frequentlyUsedEmojis, button } = this.props;\n    const title = intl.formatMessage(messages.emoji);\n    const { active, loading } = this.state;\n\n    return (\n      <div className='emoji-picker-dropdown' onKeyDown={this.handleKeyDown}>\n        <div ref={this.setTargetRef} className='emoji-button' title={title} aria-label={title} aria-expanded={active} role='button' onClick={this.onToggle} onKeyDown={this.onToggle} tabIndex={0}>\n          {button || <img\n            className={classNames('emojione', { 'pulse-loading': active && loading })}\n            alt='🙂'\n            src={`${assetHost}/emoji/1f602.svg`}\n          />}\n        </div>\n\n        <Overlay show={active} placement={'bottom'} target={this.findTarget} popperConfig={{ strategy: 'fixed' }}>\n          {({ props, placement })=> (\n            <div {...props} style={{ ...props.style, width: 299 }}>\n              <div className={`dropdown-animation ${placement}`}>\n                <EmojiPickerMenu\n                  custom_emojis={this.props.custom_emojis}\n                  loading={loading}\n                  onClose={this.onHideDropdown}\n                  onPick={onPickEmoji}\n                  onSkinTone={onSkinTone}\n                  skinTone={skinTone}\n                  frequentlyUsedEmojis={frequentlyUsedEmojis}\n                />\n              </div>\n            </div>\n          )}\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport EmojiPickerDropdown from '../components/emoji_picker_dropdown';\nimport { changeSetting } from '../../../actions/settings';\nimport { createSelector } from 'reselect';\nimport { Map as ImmutableMap } from 'immutable';\nimport { useEmoji } from '../../../actions/emojis';\n\nconst perLine = 8;\nconst lines   = 2;\n\nconst DEFAULTS = [\n  '+1',\n  'grinning',\n  'kissing_heart',\n  'heart_eyes',\n  'laughing',\n  'stuck_out_tongue_winking_eye',\n  'sweat_smile',\n  'joy',\n  'yum',\n  'disappointed',\n  'thinking_face',\n  'weary',\n  'sob',\n  'sunglasses',\n  'heart',\n  'ok_hand',\n];\n\nconst getFrequentlyUsedEmojis = createSelector([\n  state => state.getIn(['settings', 'frequentlyUsedEmojis'], ImmutableMap()),\n], emojiCounters => {\n  let emojis = emojiCounters\n    .keySeq()\n    .sort((a, b) => emojiCounters.get(a) - emojiCounters.get(b))\n    .reverse()\n    .slice(0, perLine * lines)\n    .toArray();\n\n  if (emojis.length < DEFAULTS.length) {\n    let uniqueDefaults = DEFAULTS.filter(emoji => !emojis.includes(emoji));\n    emojis = emojis.concat(uniqueDefaults.slice(0, DEFAULTS.length - emojis.length));\n  }\n\n  return emojis;\n});\n\nconst getCustomEmojis = createSelector([\n  state => state.get('custom_emojis'),\n], emojis => emojis.filter(e => e.get('visible_in_picker')).sort((a, b) => {\n  const aShort = a.get('shortcode').toLowerCase();\n  const bShort = b.get('shortcode').toLowerCase();\n\n  if (aShort < bShort) {\n    return -1;\n  } else if (aShort > bShort ) {\n    return 1;\n  } else {\n    return 0;\n  }\n}));\n\nconst mapStateToProps = state => ({\n  custom_emojis: getCustomEmojis(state),\n  skinTone: state.getIn(['settings', 'skinTone']),\n  frequentlyUsedEmojis: getFrequentlyUsedEmojis(state),\n});\n\nconst mapDispatchToProps = (dispatch, { onPickEmoji }) => ({\n  onSkinTone: skinTone => {\n    dispatch(changeSetting(['skinTone'], skinTone));\n  },\n\n  onPickEmoji: emoji => {\n    dispatch(useEmoji(emoji));\n\n    if (onPickEmoji) {\n      onPickEmoji(emoji);\n    }\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmojiPickerDropdown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst emptyComponent = () => null;\nconst noop = () => { };\n\nclass Bundle extends React.PureComponent {\n\n  static propTypes = {\n    fetchComponent: PropTypes.func.isRequired,\n    loading: PropTypes.func,\n    error: PropTypes.func,\n    children: PropTypes.func.isRequired,\n    renderDelay: PropTypes.number,\n    onFetch: PropTypes.func,\n    onFetchSuccess: PropTypes.func,\n    onFetchFail: PropTypes.func,\n  };\n\n  static defaultProps = {\n    loading: emptyComponent,\n    error: emptyComponent,\n    renderDelay: 0,\n    onFetch: noop,\n    onFetchSuccess: noop,\n    onFetchFail: noop,\n  };\n\n  static cache = new Map;\n\n  state = {\n    mod: undefined,\n    forceRender: false,\n  };\n\n  componentWillMount() {\n    this.load(this.props);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.fetchComponent !== this.props.fetchComponent) {\n      this.load(nextProps);\n    }\n  }\n\n  componentWillUnmount () {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  load = (props) => {\n    const { fetchComponent, onFetch, onFetchSuccess, onFetchFail, renderDelay } = props || this.props;\n    const cachedMod = Bundle.cache.get(fetchComponent);\n\n    if (fetchComponent === undefined) {\n      this.setState({ mod: null });\n      return Promise.resolve();\n    }\n\n    onFetch();\n\n    if (cachedMod) {\n      this.setState({ mod: cachedMod.default });\n      onFetchSuccess();\n      return Promise.resolve();\n    }\n\n    this.setState({ mod: undefined });\n\n    if (renderDelay !== 0) {\n      this.timestamp = new Date();\n      this.timeout = setTimeout(() => this.setState({ forceRender: true }), renderDelay);\n    }\n\n    return fetchComponent()\n      .then((mod) => {\n        Bundle.cache.set(fetchComponent, mod);\n        this.setState({ mod: mod.default });\n        onFetchSuccess();\n      })\n      .catch((error) => {\n        this.setState({ mod: null });\n        onFetchFail(error);\n      });\n  };\n\n  render() {\n    const { loading: Loading, error: Error, children, renderDelay } = this.props;\n    const { mod, forceRender } = this.state;\n    const elapsed = this.timestamp ? (new Date() - this.timestamp) : renderDelay;\n\n    if (mod === undefined) {\n      return (elapsed >= renderDelay || forceRender) ? <Loading /> : null;\n    }\n\n    if (mod === null) {\n      return <Error onRetry={this.load} />;\n    }\n\n    return children(mod);\n  }\n\n}\n\nexport default Bundle;\n","import { connect } from 'react-redux';\n\nimport Bundle from '../components/bundle';\n\nimport { fetchBundleRequest, fetchBundleSuccess, fetchBundleFail } from '../../../actions/bundles';\n\nconst mapDispatchToProps = dispatch => ({\n  onFetch () {\n    dispatch(fetchBundleRequest());\n  },\n  onFetchSuccess () {\n    dispatch(fetchBundleSuccess());\n  },\n  onFetchFail (error) {\n    dispatch(fetchBundleFail(error));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(Bundle);\n","export const BUNDLE_FETCH_REQUEST = 'BUNDLE_FETCH_REQUEST';\nexport const BUNDLE_FETCH_SUCCESS = 'BUNDLE_FETCH_SUCCESS';\nexport const BUNDLE_FETCH_FAIL = 'BUNDLE_FETCH_FAIL';\n\nexport function fetchBundleRequest(skipLoading) {\n  return {\n    type: BUNDLE_FETCH_REQUEST,\n    skipLoading,\n  };\n}\n\nexport function fetchBundleSuccess(skipLoading) {\n  return {\n    type: BUNDLE_FETCH_SUCCESS,\n    skipLoading,\n  };\n}\n\nexport function fetchBundleFail(error, skipLoading) {\n  return {\n    type: BUNDLE_FETCH_FAIL,\n    error,\n    skipLoading,\n  };\n}\n","import api from '../api';\n\nexport const ACCOUNT_NOTE_SUBMIT_REQUEST = 'ACCOUNT_NOTE_SUBMIT_REQUEST';\nexport const ACCOUNT_NOTE_SUBMIT_SUCCESS = 'ACCOUNT_NOTE_SUBMIT_SUCCESS';\nexport const ACCOUNT_NOTE_SUBMIT_FAIL    = 'ACCOUNT_NOTE_SUBMIT_FAIL';\n\nexport function submitAccountNote(id, value) {\n  return (dispatch, getState) => {\n    dispatch(submitAccountNoteRequest());\n\n    api(getState).post(`/api/v1/accounts/${id}/note`, {\n      comment: value,\n    }).then(response => {\n      dispatch(submitAccountNoteSuccess(response.data));\n    }).catch(error => dispatch(submitAccountNoteFail(error)));\n  };\n}\n\nexport function submitAccountNoteRequest() {\n  return {\n    type: ACCOUNT_NOTE_SUBMIT_REQUEST,\n  };\n}\n\nexport function submitAccountNoteSuccess(relationship) {\n  return {\n    type: ACCOUNT_NOTE_SUBMIT_SUCCESS,\n    relationship,\n  };\n}\n\nexport function submitAccountNoteFail(error) {\n  return {\n    type: ACCOUNT_NOTE_SUBMIT_FAIL,\n    error,\n  };\n}\n","import api from '../api';\nimport { importFetchedStatuses } from './importer';\n\nexport const PINNED_STATUSES_FETCH_REQUEST = 'PINNED_STATUSES_FETCH_REQUEST';\nexport const PINNED_STATUSES_FETCH_SUCCESS = 'PINNED_STATUSES_FETCH_SUCCESS';\nexport const PINNED_STATUSES_FETCH_FAIL = 'PINNED_STATUSES_FETCH_FAIL';\n\nimport { me } from '../initial_state';\n\nexport function fetchPinnedStatuses() {\n  return (dispatch, getState) => {\n    dispatch(fetchPinnedStatusesRequest());\n\n    api(getState).get(`/api/v1/accounts/${me}/statuses`, { params: { pinned: true } }).then(response => {\n      dispatch(importFetchedStatuses(response.data));\n      dispatch(fetchPinnedStatusesSuccess(response.data, null));\n    }).catch(error => {\n      dispatch(fetchPinnedStatusesFail(error));\n    });\n  };\n}\n\nexport function fetchPinnedStatusesRequest() {\n  return {\n    type: PINNED_STATUSES_FETCH_REQUEST,\n  };\n}\n\nexport function fetchPinnedStatusesSuccess(statuses, next) {\n  return {\n    type: PINNED_STATUSES_FETCH_SUCCESS,\n    statuses,\n    next,\n  };\n}\n\nexport function fetchPinnedStatusesFail(error) {\n  return {\n    type: PINNED_STATUSES_FETCH_FAIL,\n    error,\n  };\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Avatar from '../../../components/avatar';\nimport IconButton from '../../../components/icon_button';\nimport DisplayName from '../../../components/display_name';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport AttachmentList from 'mastodon/components/attachment_list';\n\nconst messages = defineMessages({\n  cancel: { id: 'reply_indicator.cancel', defaultMessage: 'Cancel' },\n});\n\nexport default @injectIntl\nclass ReplyIndicator extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    onCancel: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onCancel();\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n  };\n\n  render () {\n    const { status, intl } = this.props;\n\n    if (!status) {\n      return null;\n    }\n\n    const content = { __html: status.get('contentHtml') };\n\n    return (\n      <div className='reply-indicator'>\n        <div className='reply-indicator__header'>\n          <div className='reply-indicator__cancel'><IconButton title={intl.formatMessage(messages.cancel)} icon='times' onClick={this.handleClick} inverted /></div>\n\n          <a href={`/@${status.getIn(['account', 'acct'])}`} onClick={this.handleAccountClick} className='reply-indicator__display-name'>\n            <div className='reply-indicator__display-avatar'><Avatar account={status.get('account')} size={24} /></div>\n            <DisplayName account={status.get('account')} />\n          </a>\n        </div>\n\n        <div className='reply-indicator__content translate' dangerouslySetInnerHTML={content} />\n\n        {status.get('media_attachments').size > 0 && (\n          <AttachmentList\n            compact\n            media={status.get('media_attachments')}\n          />\n        )}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport { cancelReplyCompose } from '../../../actions/compose';\nimport { makeGetStatus } from '../../../selectors';\nimport ReplyIndicator from '../components/reply_indicator';\n\nconst makeMapStateToProps = () => {\n  const getStatus = makeGetStatus();\n\n  const mapStateToProps = state => {\n    let statusId = state.getIn(['compose', 'id'], null);\n    let editing  = true;\n\n    if (statusId === null) {\n      statusId = state.getIn(['compose', 'in_reply_to']);\n      editing  = false;\n    }\n\n    return {\n      status: getStatus(state, { id: statusId }),\n      editing,\n    };\n  };\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => ({\n\n  onCancel () {\n    dispatch(cancelReplyCompose());\n  },\n\n});\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(ReplyIndicator);\n","import React from 'react';\nimport Avatar from '../../../components/avatar';\nimport DisplayName from '../../../components/display_name';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nexport default class AutosuggestAccount extends ImmutablePureComponent {\n\n  static propTypes = {\n    account: ImmutablePropTypes.map.isRequired,\n  };\n\n  render () {\n    const { account } = this.props;\n\n    return (\n      <div className='autosuggest-account' title={account.get('acct')}>\n        <div className='autosuggest-account-icon'><Avatar account={account} size={18} /></div>\n        <DisplayName account={account} />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport AutosuggestAccount from '../components/autosuggest_account';\nimport { makeGetAccount } from '../../../selectors';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = (state, { id }) => ({\n    account: getAccount(state, id),\n  });\n\n  return mapStateToProps;\n};\n\nexport default connect(makeMapStateToProps)(AutosuggestAccount);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport unicodeMapping from '../features/emoji/emoji_unicode_mapping_light';\nimport { assetHost } from 'mastodon/utils/config';\n\nexport default class AutosuggestEmoji extends React.PureComponent {\n\n  static propTypes = {\n    emoji: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { emoji } = this.props;\n    let url;\n\n    if (emoji.custom) {\n      url = emoji.imageUrl;\n    } else {\n      const mapping = unicodeMapping[emoji.native] || unicodeMapping[emoji.native.replace(/\\uFE0F$/, '')];\n\n      if (!mapping) {\n        return null;\n      }\n\n      url = `${assetHost}/emoji/${mapping.filename}.svg`;\n    }\n\n    return (\n      <div className='autosuggest-emoji'>\n        <img\n          className='emojione'\n          src={url}\n          alt={emoji.native || emoji.colons}\n        />\n\n        {emoji.colons}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ShortNumber from 'mastodon/components/short_number';\nimport { FormattedMessage } from 'react-intl';\n\nexport default class AutosuggestHashtag extends React.PureComponent {\n\n  static propTypes = {\n    tag: PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string,\n      history: PropTypes.array,\n    }).isRequired,\n  };\n\n  render() {\n    const { tag } = this.props;\n    const weeklyUses = tag.history && (\n      <ShortNumber\n        value={tag.history.reduce((total, day) => total + day.uses * 1, 0)}\n      />\n    );\n\n    return (\n      <div className='autosuggest-hashtag'>\n        <div className='autosuggest-hashtag__name'>\n          #<strong>{tag.name}</strong>\n        </div>\n        {tag.history !== undefined && (\n          <div className='autosuggest-hashtag__uses'>\n            <FormattedMessage\n              id='autosuggest_hashtag.per_week'\n              defaultMessage='{count} per week'\n              values={{ count: weeklyUses }}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport AutosuggestAccountContainer from '../features/compose/containers/autosuggest_account_container';\nimport AutosuggestEmoji from './autosuggest_emoji';\nimport AutosuggestHashtag from './autosuggest_hashtag';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Textarea from 'react-textarea-autosize';\nimport classNames from 'classnames';\n\nconst textAtCursorMatchesToken = (str, caretPosition) => {\n  let word;\n\n  let left  = str.slice(0, caretPosition).search(/\\S+$/);\n  let right = str.slice(caretPosition).search(/\\s/);\n\n  if (right < 0) {\n    word = str.slice(left);\n  } else {\n    word = str.slice(left, right + caretPosition);\n  }\n\n  if (!word || word.trim().length < 3 || ['@', ':', '#'].indexOf(word[0]) === -1) {\n    return [null, null];\n  }\n\n  word = word.trim().toLowerCase();\n\n  if (word.length > 0) {\n    return [left + 1, word];\n  } else {\n    return [null, null];\n  }\n};\n\nexport default class AutosuggestTextarea extends ImmutablePureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    suggestions: ImmutablePropTypes.list,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onSuggestionsClearRequested: PropTypes.func.isRequired,\n    onSuggestionsFetchRequested: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onKeyUp: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    onPaste: PropTypes.func.isRequired,\n    autoFocus: PropTypes.bool,\n    lang: PropTypes.string,\n  };\n\n  static defaultProps = {\n    autoFocus: true,\n  };\n\n  state = {\n    suggestionsHidden: true,\n    focused: false,\n    selectedSuggestion: 0,\n    lastToken: null,\n    tokenStart: 0,\n  };\n\n  onChange = (e) => {\n    const [ tokenStart, token ] = textAtCursorMatchesToken(e.target.value, e.target.selectionStart);\n\n    if (token !== null && this.state.lastToken !== token) {\n      this.setState({ lastToken: token, selectedSuggestion: 0, tokenStart });\n      this.props.onSuggestionsFetchRequested(token);\n    } else if (token === null) {\n      this.setState({ lastToken: null });\n      this.props.onSuggestionsClearRequested();\n    }\n\n    this.props.onChange(e);\n  };\n\n  onKeyDown = (e) => {\n    const { suggestions, disabled } = this.props;\n    const { selectedSuggestion, suggestionsHidden } = this.state;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.which === 229 || e.isComposing) {\n      // Ignore key events during text composition\n      // e.key may be a name of the physical key even in this case (e.x. Safari / Chrome on Mac)\n      return;\n    }\n\n    switch(e.key) {\n    case 'Escape':\n      if (suggestions.size === 0 || suggestionsHidden) {\n        document.querySelector('.ui').parentElement.focus();\n      } else {\n        e.preventDefault();\n        this.setState({ suggestionsHidden: true });\n      }\n\n      break;\n    case 'ArrowDown':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.min(selectedSuggestion + 1, suggestions.size - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.max(selectedSuggestion - 1, 0) });\n      }\n\n      break;\n    case 'Enter':\n    case 'Tab':\n      // Select suggestion\n      if (this.state.lastToken !== null && suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestions.get(selectedSuggestion));\n      }\n\n      break;\n    }\n\n    if (e.defaultPrevented || !this.props.onKeyDown) {\n      return;\n    }\n\n    this.props.onKeyDown(e);\n  };\n\n  onBlur = () => {\n    this.setState({ suggestionsHidden: true, focused: false });\n  };\n\n  onFocus = (e) => {\n    this.setState({ focused: true });\n    if (this.props.onFocus) {\n      this.props.onFocus(e);\n    }\n  };\n\n  onSuggestionClick = (e) => {\n    const suggestion = this.props.suggestions.get(e.currentTarget.getAttribute('data-index'));\n    e.preventDefault();\n    this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestion);\n    this.textarea.focus();\n  };\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.suggestions !== this.props.suggestions && nextProps.suggestions.size > 0 && this.state.suggestionsHidden && this.state.focused) {\n      this.setState({ suggestionsHidden: false });\n    }\n  }\n\n  setTextarea = (c) => {\n    this.textarea = c;\n  };\n\n  onPaste = (e) => {\n    if (e.clipboardData && e.clipboardData.files.length === 1) {\n      this.props.onPaste(e.clipboardData.files);\n      e.preventDefault();\n    }\n  };\n\n  renderSuggestion = (suggestion, i) => {\n    const { selectedSuggestion } = this.state;\n    let inner, key;\n\n    if (suggestion.type === 'emoji') {\n      inner = <AutosuggestEmoji emoji={suggestion} />;\n      key   = suggestion.id;\n    } else if (suggestion.type === 'hashtag') {\n      inner = <AutosuggestHashtag tag={suggestion} />;\n      key   = suggestion.name;\n    } else if (suggestion.type === 'account') {\n      inner = <AutosuggestAccountContainer id={suggestion.id} />;\n      key   = suggestion.id;\n    }\n\n    return (\n      <div role='button' tabIndex='0' key={key} data-index={i} className={classNames('autosuggest-textarea__suggestions__item', { selected: i === selectedSuggestion })} onMouseDown={this.onSuggestionClick}>\n        {inner}\n      </div>\n    );\n  };\n\n  render () {\n    const { value, suggestions, disabled, placeholder, onKeyUp, autoFocus, lang, children } = this.props;\n    const { suggestionsHidden } = this.state;\n\n    return [\n      <div className='compose-form__autosuggest-wrapper' key='autosuggest-wrapper'>\n        <div className='autosuggest-textarea'>\n          <label>\n            <span style={{ display: 'none' }}>{placeholder}</span>\n\n            <Textarea\n              ref={this.setTextarea}\n              className='autosuggest-textarea__textarea'\n              disabled={disabled}\n              placeholder={placeholder}\n              autoFocus={autoFocus}\n              value={value}\n              onChange={this.onChange}\n              onKeyDown={this.onKeyDown}\n              onKeyUp={onKeyUp}\n              onFocus={this.onFocus}\n              onBlur={this.onBlur}\n              onPaste={this.onPaste}\n              dir='auto'\n              aria-autocomplete='list'\n              lang={lang}\n            />\n          </label>\n        </div>\n        {children}\n      </div>,\n\n      <div className='autosuggest-textarea__suggestions-wrapper' key='suggestions-wrapper'>\n        <div className={`autosuggest-textarea__suggestions ${suggestionsHidden || suggestions.isEmpty() ? '' : 'autosuggest-textarea__suggestions--visible'}`}>\n          {suggestions.map(this.renderSuggestion)}\n        </div>\n      </div>,\n    ];\n  }\n\n}\n","import React from 'react';\nimport AutosuggestAccountContainer from '../features/compose/containers/autosuggest_account_container';\nimport AutosuggestEmoji from './autosuggest_emoji';\nimport AutosuggestHashtag from './autosuggest_hashtag';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport classNames from 'classnames';\n\nconst textAtCursorMatchesToken = (str, caretPosition, searchTokens) => {\n  let word;\n\n  let left  = str.slice(0, caretPosition).search(/\\S+$/);\n  let right = str.slice(caretPosition).search(/\\s/);\n\n  if (right < 0) {\n    word = str.slice(left);\n  } else {\n    word = str.slice(left, right + caretPosition);\n  }\n\n  if (!word || word.trim().length < 3 || searchTokens.indexOf(word[0]) === -1) {\n    return [null, null];\n  }\n\n  word = word.trim().toLowerCase();\n\n  if (word.length > 0) {\n    return [left + 1, word];\n  } else {\n    return [null, null];\n  }\n};\n\nexport default class AutosuggestInput extends ImmutablePureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    suggestions: ImmutablePropTypes.list,\n    disabled: PropTypes.bool,\n    placeholder: PropTypes.string,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onSuggestionsClearRequested: PropTypes.func.isRequired,\n    onSuggestionsFetchRequested: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    onKeyUp: PropTypes.func,\n    onKeyDown: PropTypes.func,\n    autoFocus: PropTypes.bool,\n    className: PropTypes.string,\n    id: PropTypes.string,\n    searchTokens: PropTypes.arrayOf(PropTypes.string),\n    maxLength: PropTypes.number,\n    lang: PropTypes.string,\n    spellCheck: PropTypes.bool,\n  };\n\n  static defaultProps = {\n    autoFocus: true,\n    searchTokens: ['@', ':', '#'],\n  };\n\n  state = {\n    suggestionsHidden: true,\n    focused: false,\n    selectedSuggestion: 0,\n    lastToken: null,\n    tokenStart: 0,\n  };\n\n  onChange = (e) => {\n    const [ tokenStart, token ] = textAtCursorMatchesToken(e.target.value, e.target.selectionStart, this.props.searchTokens);\n\n    if (token !== null && this.state.lastToken !== token) {\n      this.setState({ lastToken: token, selectedSuggestion: 0, tokenStart });\n      this.props.onSuggestionsFetchRequested(token);\n    } else if (token === null) {\n      this.setState({ lastToken: null });\n      this.props.onSuggestionsClearRequested();\n    }\n\n    this.props.onChange(e);\n  };\n\n  onKeyDown = (e) => {\n    const { suggestions, disabled } = this.props;\n    const { selectedSuggestion, suggestionsHidden } = this.state;\n\n    if (disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (e.which === 229 || e.isComposing) {\n      // Ignore key events during text composition\n      // e.key may be a name of the physical key even in this case (e.x. Safari / Chrome on Mac)\n      return;\n    }\n\n    switch(e.key) {\n    case 'Escape':\n      if (suggestions.size === 0 || suggestionsHidden) {\n        document.querySelector('.ui').parentElement.focus();\n      } else {\n        e.preventDefault();\n        this.setState({ suggestionsHidden: true });\n      }\n\n      break;\n    case 'ArrowDown':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.min(selectedSuggestion + 1, suggestions.size - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      if (suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        this.setState({ selectedSuggestion: Math.max(selectedSuggestion - 1, 0) });\n      }\n\n      break;\n    case 'Enter':\n    case 'Tab':\n      // Select suggestion\n      if (this.state.lastToken !== null && suggestions.size > 0 && !suggestionsHidden) {\n        e.preventDefault();\n        e.stopPropagation();\n        this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestions.get(selectedSuggestion));\n      }\n\n      break;\n    }\n\n    if (e.defaultPrevented || !this.props.onKeyDown) {\n      return;\n    }\n\n    this.props.onKeyDown(e);\n  };\n\n  onBlur = () => {\n    this.setState({ suggestionsHidden: true, focused: false });\n  };\n\n  onFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  onSuggestionClick = (e) => {\n    const suggestion = this.props.suggestions.get(e.currentTarget.getAttribute('data-index'));\n    e.preventDefault();\n    this.props.onSuggestionSelected(this.state.tokenStart, this.state.lastToken, suggestion);\n    this.input.focus();\n  };\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.suggestions !== this.props.suggestions && nextProps.suggestions.size > 0 && this.state.suggestionsHidden && this.state.focused) {\n      this.setState({ suggestionsHidden: false });\n    }\n  }\n\n  setInput = (c) => {\n    this.input = c;\n  };\n\n  renderSuggestion = (suggestion, i) => {\n    const { selectedSuggestion } = this.state;\n    let inner, key;\n\n    if (suggestion.type === 'emoji') {\n      inner = <AutosuggestEmoji emoji={suggestion} />;\n      key   = suggestion.id;\n    } else if (suggestion.type ==='hashtag') {\n      inner = <AutosuggestHashtag tag={suggestion} />;\n      key   = suggestion.name;\n    } else if (suggestion.type === 'account') {\n      inner = <AutosuggestAccountContainer id={suggestion.id} />;\n      key   = suggestion.id;\n    }\n\n    return (\n      <div role='button' tabIndex='0' key={key} data-index={i} className={classNames('autosuggest-textarea__suggestions__item', { selected: i === selectedSuggestion })} onMouseDown={this.onSuggestionClick}>\n        {inner}\n      </div>\n    );\n  };\n\n  render () {\n    const { value, suggestions, disabled, placeholder, onKeyUp, autoFocus, className, id, maxLength, lang, spellCheck } = this.props;\n    const { suggestionsHidden } = this.state;\n\n    return (\n      <div className='autosuggest-input'>\n        <label>\n          <span style={{ display: 'none' }}>{placeholder}</span>\n\n          <input\n            type='text'\n            ref={this.setInput}\n            disabled={disabled}\n            placeholder={placeholder}\n            autoFocus={autoFocus}\n            value={value}\n            onChange={this.onChange}\n            onKeyDown={this.onKeyDown}\n            onKeyUp={onKeyUp}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            dir='auto'\n            aria-autocomplete='list'\n            id={id}\n            className={className}\n            maxLength={maxLength}\n            lang={lang}\n            spellCheck={spellCheck}\n          />\n        </label>\n\n        <div className={`autosuggest-textarea__suggestions ${suggestionsHidden || suggestions.isEmpty() ? '' : 'autosuggest-textarea__suggestions--visible'}`}>\n          {suggestions.map(this.renderSuggestion)}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nconst messages = defineMessages({\n  add_poll: { id: 'poll_button.add_poll', defaultMessage: 'Add a poll' },\n  remove_poll: { id: 'poll_button.remove_poll', defaultMessage: 'Remove poll' },\n});\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default\n@injectIntl\nclass PollButton extends React.PureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleClick = () => {\n    this.props.onClick();\n  };\n\n  render () {\n    const { intl, active, unavailable, disabled } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    return (\n      <div className='compose-form__poll-button'>\n        <IconButton\n          icon='tasks'\n          title={intl.formatMessage(active ? messages.remove_poll : messages.add_poll)}\n          disabled={disabled}\n          onClick={this.handleClick}\n          className={`compose-form__poll-button-icon ${active ? 'active' : ''}`}\n          size={18}\n          inverted\n          style={iconStyle}\n        />\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PollButton from '../components/poll_button';\nimport { addPoll, removePoll } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  unavailable: state.getIn(['compose', 'is_uploading']) || (state.getIn(['compose', 'media_attachments']).size > 0),\n  active: state.getIn(['compose', 'poll']) !== null,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch((_, getState) => {\n      if (getState().getIn(['compose', 'poll'])) {\n        dispatch(removePoll());\n      } else {\n        dispatch(addPoll());\n      }\n    });\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollButton);\n","import React from 'react';\nimport IconButton from '../../../components/icon_button';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\n\nconst messages = defineMessages({\n  upload: { id: 'upload_button.label', defaultMessage: 'Add images, a video or an audio file' },\n});\n\nconst makeMapStateToProps = () => {\n  const mapStateToProps = state => ({\n    acceptContentTypes: state.getIn(['media_attachments', 'accept_content_types']),\n  });\n\n  return mapStateToProps;\n};\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n};\n\nexport default @connect(makeMapStateToProps)\n@injectIntl\nclass UploadButton extends ImmutablePureComponent {\n\n  static propTypes = {\n    disabled: PropTypes.bool,\n    unavailable: PropTypes.bool,\n    onSelectFile: PropTypes.func.isRequired,\n    style: PropTypes.object,\n    resetFileKey: PropTypes.number,\n    acceptContentTypes: ImmutablePropTypes.listOf(PropTypes.string).isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleChange = (e) => {\n    if (e.target.files.length > 0) {\n      this.props.onSelectFile(e.target.files);\n    }\n  };\n\n  handleClick = () => {\n    this.fileElement.click();\n  };\n\n  setRef = (c) => {\n    this.fileElement = c;\n  };\n\n  render () {\n    const { intl, resetFileKey, unavailable, disabled, acceptContentTypes } = this.props;\n\n    if (unavailable) {\n      return null;\n    }\n\n    const message = intl.formatMessage(messages.upload);\n\n    return (\n      <div className='compose-form__upload-button'>\n        <IconButton icon='paperclip' title={message} disabled={disabled} onClick={this.handleClick} className='compose-form__upload-button-icon' size={18} inverted style={iconStyle} />\n        <label>\n          <span style={{ display: 'none' }}>{message}</span>\n          <input\n            key={resetFileKey}\n            ref={this.setRef}\n            type='file'\n            multiple\n            accept={acceptContentTypes.toArray().join(',')}\n            onChange={this.handleChange}\n            disabled={disabled}\n            style={{ display: 'none' }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadButton from '../components/upload_button';\nimport { uploadCompose } from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  disabled: state.getIn(['compose', 'is_uploading']) || (state.getIn(['compose', 'media_attachments']).size + state.getIn(['compose', 'pending_media_attachments']) > 3 || state.getIn(['compose', 'media_attachments']).some(m => ['video', 'audio'].includes(m.get('type')))),\n  unavailable: state.getIn(['compose', 'poll']) !== null,\n  resetFileKey: state.getIn(['compose', 'resetFileKey']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onSelectFile (files) {\n    dispatch(uploadCompose(files));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst iconStyle = {\n  height: null,\n  lineHeight: '27px',\n  width: `${18 * 1.28571429}px`,\n};\n\nexport default class TextIconButton extends React.PureComponent {\n\n  static propTypes = {\n    label: PropTypes.string.isRequired,\n    title: PropTypes.string,\n    active: PropTypes.bool,\n    onClick: PropTypes.func.isRequired,\n    ariaControls: PropTypes.string,\n  };\n\n  render () {\n    const { label, title, active, ariaControls } = this.props;\n\n    return (\n      <button\n        type='button'\n        title={title}\n        aria-label={title}\n        className={`text-icon-button ${active ? 'active' : ''}`}\n        aria-expanded={active}\n        onClick={this.props.onClick}\n        aria-controls={ariaControls} style={iconStyle}\n      >\n        {label}\n      </button>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport TextIconButton from '../components/text_icon_button';\nimport { changeComposeSpoilerness } from '../../../actions/compose';\nimport { injectIntl, defineMessages } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: { id: 'compose_form.spoiler.marked', defaultMessage: 'Text is hidden behind warning' },\n  unmarked: { id: 'compose_form.spoiler.unmarked', defaultMessage: 'Text is not hidden' },\n});\n\nconst mapStateToProps = (state, { intl }) => ({\n  label: 'CW',\n  title: intl.formatMessage(state.getIn(['compose', 'spoiler']) ? messages.marked : messages.unmarked),\n  active: state.getIn(['compose', 'spoiler']),\n  ariaControls: 'cw-spoiler-input',\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSpoilerness());\n  },\n\n});\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(TextIconButton));\n","import { connect } from 'react-redux';\nimport PrivacyDropdown from '../components/privacy_dropdown';\nimport { changeComposeVisibility } from '../../../actions/compose';\nimport { openModal, closeModal } from '../../../actions/modal';\nimport { isUserTouching } from '../../../is_mobile';\n\nconst mapStateToProps = state => ({\n  value: state.getIn(['compose', 'privacy']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onChange (value) {\n    dispatch(changeComposeVisibility(value));\n  },\n\n  isUserTouching,\n  onModalOpen: props => dispatch(openModal('ACTIONS', props)),\n  onModalClose: () => dispatch(closeModal()),\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PrivacyDropdown);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Icon from 'mastodon/components/icon';\nimport AutosuggestInput from 'mastodon/components/autosuggest_input';\nimport classNames from 'classnames';\n\nconst messages = defineMessages({\n  option_placeholder: { id: 'compose_form.poll.option_placeholder', defaultMessage: 'Choice {number}' },\n  add_option: { id: 'compose_form.poll.add_option', defaultMessage: 'Add a choice' },\n  remove_option: { id: 'compose_form.poll.remove_option', defaultMessage: 'Remove this choice' },\n  poll_duration: { id: 'compose_form.poll.duration', defaultMessage: 'Poll duration' },\n  switchToMultiple: { id: 'compose_form.poll.switch_to_multiple', defaultMessage: 'Change poll to allow multiple choices' },\n  switchToSingle: { id: 'compose_form.poll.switch_to_single', defaultMessage: 'Change poll to allow for a single choice' },\n  minutes: { id: 'intervals.full.minutes', defaultMessage: '{number, plural, one {# minute} other {# minutes}}' },\n  hours: { id: 'intervals.full.hours', defaultMessage: '{number, plural, one {# hour} other {# hours}}' },\n  days: { id: 'intervals.full.days', defaultMessage: '{number, plural, one {# day} other {# days}}' },\n});\n\n@injectIntl\nclass Option extends React.PureComponent {\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    lang: PropTypes.string,\n    index: PropTypes.number.isRequired,\n    isPollMultiple: PropTypes.bool,\n    autoFocus: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onRemove: PropTypes.func.isRequired,\n    onToggleMultiple: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleOptionTitleChange = e => {\n    this.props.onChange(this.props.index, e.target.value);\n  };\n\n  handleOptionRemove = () => {\n    this.props.onRemove(this.props.index);\n  };\n\n\n  handleToggleMultiple = e => {\n    this.props.onToggleMultiple();\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  handleCheckboxKeypress = e => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      this.handleToggleMultiple(e);\n    }\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.props.onClearSuggestions();\n  };\n\n  onSuggestionsFetchRequested = (token) => {\n    this.props.onFetchSuggestions(token);\n  };\n\n  onSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['poll', 'options', this.props.index]);\n  };\n\n  render () {\n    const { isPollMultiple, title, lang, index, autoFocus, intl } = this.props;\n\n    return (\n      <li>\n        <label className='poll__option editable'>\n          <span\n            className={classNames('poll__input', { checkbox: isPollMultiple })}\n            onClick={this.handleToggleMultiple}\n            onKeyPress={this.handleCheckboxKeypress}\n            role='button'\n            tabIndex='0'\n            title={intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple)}\n            aria-label={intl.formatMessage(isPollMultiple ? messages.switchToSingle : messages.switchToMultiple)}\n          />\n\n          <AutosuggestInput\n            placeholder={intl.formatMessage(messages.option_placeholder, { number: index + 1 })}\n            maxLength={100}\n            value={title}\n            lang={lang}\n            spellCheck\n            onChange={this.handleOptionTitleChange}\n            suggestions={this.props.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSuggestionSelected}\n            searchTokens={[':']}\n            autoFocus={autoFocus}\n          />\n        </label>\n\n        <div className='poll__cancel'>\n          <IconButton disabled={index <= 1} title={intl.formatMessage(messages.remove_option)} icon='times' onClick={this.handleOptionRemove} />\n        </div>\n      </li>\n    );\n  }\n\n}\n\nexport default\n@injectIntl\nclass PollForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    options: ImmutablePropTypes.list,\n    lang: PropTypes.string,\n    expiresIn: PropTypes.number,\n    isMultiple: PropTypes.bool,\n    onChangeOption: PropTypes.func.isRequired,\n    onAddOption: PropTypes.func.isRequired,\n    onRemoveOption: PropTypes.func.isRequired,\n    onChangeSettings: PropTypes.func.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleAddOption = () => {\n    this.props.onAddOption('');\n  };\n\n  handleSelectDuration = e => {\n    this.props.onChangeSettings(e.target.value, this.props.isMultiple);\n  };\n\n  handleToggleMultiple = () => {\n    this.props.onChangeSettings(this.props.expiresIn, !this.props.isMultiple);\n  };\n\n  render () {\n    const { options, lang, expiresIn, isMultiple, onChangeOption, onRemoveOption, intl, ...other } = this.props;\n\n    if (!options) {\n      return null;\n    }\n\n    const autoFocusIndex = options.indexOf('');\n\n    return (\n      <div className='compose-form__poll-wrapper'>\n        <ul>\n          {options.map((title, i) => <Option title={title} lang={lang} key={i} index={i} onChange={onChangeOption} onRemove={onRemoveOption} isPollMultiple={isMultiple} onToggleMultiple={this.handleToggleMultiple} autoFocus={i === autoFocusIndex} {...other} />)}\n        </ul>\n\n        <div className='poll__footer'>\n          <button type='button' disabled={options.size >= 5} className='button button-secondary' onClick={this.handleAddOption}><Icon id='plus' /> <FormattedMessage {...messages.add_option} /></button>\n\n          {/* eslint-disable-next-line jsx-a11y/no-onchange */}\n          <select value={expiresIn} onChange={this.handleSelectDuration}>\n            <option value={300}>{intl.formatMessage(messages.minutes, { number: 5 })}</option>\n            <option value={1800}>{intl.formatMessage(messages.minutes, { number: 30 })}</option>\n            <option value={3600}>{intl.formatMessage(messages.hours, { number: 1 })}</option>\n            <option value={21600}>{intl.formatMessage(messages.hours, { number: 6 })}</option>\n            <option value={43200}>{intl.formatMessage(messages.hours, { number: 12 })}</option>\n            <option value={86400}>{intl.formatMessage(messages.days, { number: 1 })}</option>\n            <option value={259200}>{intl.formatMessage(messages.days, { number: 3 })}</option>\n            <option value={604800}>{intl.formatMessage(messages.days, { number: 7 })}</option>\n          </select>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport PollForm from '../components/poll_form';\nimport {\n  addPollOption,\n  removePollOption,\n  changePollOption,\n  changePollSettings,\n  clearComposeSuggestions,\n  fetchComposeSuggestions,\n  selectComposeSuggestion,\n} from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  suggestions: state.getIn(['compose', 'suggestions']),\n  options: state.getIn(['compose', 'poll', 'options']),\n  lang: state.getIn(['compose', 'language']),\n  expiresIn: state.getIn(['compose', 'poll', 'expires_in']),\n  isMultiple: state.getIn(['compose', 'poll', 'multiple']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onAddOption(title) {\n    dispatch(addPollOption(title));\n  },\n\n  onRemoveOption(index) {\n    dispatch(removePollOption(index));\n  },\n\n  onChangeOption(index, title) {\n    dispatch(changePollOption(index, title));\n  },\n\n  onChangeSettings(expiresIn, isMultiple) {\n    dispatch(changePollSettings(expiresIn, isMultiple));\n  },\n\n  onClearSuggestions () {\n    dispatch(clearComposeSuggestions());\n  },\n\n  onFetchSuggestions (token) {\n    dispatch(fetchComposeSuggestions(token));\n  },\n\n  onSuggestionSelected (position, token, accountId, path) {\n    dispatch(selectComposeSuggestion(position, token, accountId, path));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PollForm);\n","import { connect } from 'react-redux';\nimport UploadProgress from '../components/upload_progress';\n\nconst mapStateToProps = state => ({\n  active: state.getIn(['compose', 'is_uploading']),\n  progress: state.getIn(['compose', 'progress']),\n  isProcessing: state.getIn(['compose', 'is_processing']),\n});\n\nexport default connect(mapStateToProps)(UploadProgress);\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { FormattedMessage } from 'react-intl';\nimport Icon from 'mastodon/components/icon';\n\nexport default class Upload extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    onUndo: PropTypes.func.isRequired,\n    onOpenFocalPoint: PropTypes.func.isRequired,\n  };\n\n  handleUndoClick = e => {\n    e.stopPropagation();\n    this.props.onUndo(this.props.media.get('id'));\n  };\n\n  handleFocalPointClick = e => {\n    e.stopPropagation();\n    this.props.onOpenFocalPoint(this.props.media.get('id'));\n  };\n\n  render () {\n    const { media } = this.props;\n\n    if (!media) {\n      return null;\n    }\n\n    const focusX = media.getIn(['meta', 'focus', 'x']);\n    const focusY = media.getIn(['meta', 'focus', 'y']);\n    const x = ((focusX /  2) + .5) * 100;\n    const y = ((focusY / -2) + .5) * 100;\n\n    return (\n      <div className='compose-form__upload' tabIndex='0' role='button'>\n        <Motion defaultStyle={{ scale: 0.8 }} style={{ scale: spring(1, { stiffness: 180, damping: 12 }) }}>\n          {({ scale }) => (\n            <div className='compose-form__upload-thumbnail' style={{ transform: `scale(${scale})`, backgroundImage: `url(${media.get('preview_url')})`, backgroundPosition: `${x}% ${y}%` }}>\n              <div className='compose-form__upload__actions'>\n                <button type='button' className='icon-button' onClick={this.handleUndoClick}><Icon id='times' /> <FormattedMessage id='upload_form.undo' defaultMessage='Delete' /></button>\n                <button type='button' className='icon-button' onClick={this.handleFocalPointClick}><Icon id='pencil' /> <FormattedMessage id='upload_form.edit' defaultMessage='Edit' /></button>\n              </div>\n\n              {(media.get('description') || '').length === 0 && (\n                <div className='compose-form__upload__warning'>\n                  <button type='button' className='icon-button' onClick={this.handleFocalPointClick}><Icon id='info-circle' /> <FormattedMessage id='upload_form.description_missing' defaultMessage='No description added' /></button>\n                </div>\n              )}\n            </div>\n          )}\n        </Motion>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport Upload from '../components/upload';\nimport { undoUploadCompose, initMediaEditModal, submitCompose } from '../../../actions/compose';\n\nconst mapStateToProps = (state, { id }) => ({\n  media: state.getIn(['compose', 'media_attachments']).find(item => item.get('id') === id),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onUndo: id => {\n    dispatch(undoUploadCompose(id));\n  },\n\n  onOpenFocalPoint: id => {\n    dispatch(initMediaEditModal(id));\n  },\n\n  onSubmit (router) {\n    dispatch(submitCompose(router));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Upload);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { changeComposeSensitivity } from 'mastodon/actions/compose';\nimport { injectIntl, defineMessages, FormattedMessage } from 'react-intl';\n\nconst messages = defineMessages({\n  marked: {\n    id: 'compose_form.sensitive.marked',\n    defaultMessage: '{count, plural, one {Media is marked as sensitive} other {Media is marked as sensitive}}',\n  },\n  unmarked: {\n    id: 'compose_form.sensitive.unmarked',\n    defaultMessage: '{count, plural, one {Media is not marked as sensitive} other {Media is not marked as sensitive}}',\n  },\n});\n\nconst mapStateToProps = state => ({\n  active: state.getIn(['compose', 'sensitive']),\n  disabled: state.getIn(['compose', 'spoiler']),\n  mediaCount: state.getIn(['compose', 'media_attachments']).size,\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onClick () {\n    dispatch(changeComposeSensitivity());\n  },\n\n});\n\nclass SensitiveButton extends React.PureComponent {\n\n  static propTypes = {\n    active: PropTypes.bool,\n    disabled: PropTypes.bool,\n    mediaCount: PropTypes.number,\n    onClick: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  render () {\n    const { active, disabled, mediaCount, onClick, intl } = this.props;\n\n    return (\n      <div className='compose-form__sensitive-button'>\n        <label className={classNames('icon-button', { active })} title={intl.formatMessage(active ? messages.marked : messages.unmarked, { count: mediaCount })}>\n          <input\n            name='mark-sensitive'\n            type='checkbox'\n            checked={active}\n            onChange={onClick}\n            disabled={disabled}\n          />\n\n          <FormattedMessage\n            id='compose_form.sensitive.hide'\n            defaultMessage='{count, plural, one {Mark media as sensitive} other {Mark media as sensitive}}'\n            values={{ count: mediaCount }}\n          />\n        </label>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(injectIntl(SensitiveButton));\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport UploadProgressContainer from '../containers/upload_progress_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport UploadContainer from '../containers/upload_container';\nimport SensitiveButtonContainer from '../containers/sensitive_button_container';\n\nexport default class UploadForm extends ImmutablePureComponent {\n\n  static propTypes = {\n    mediaIds: ImmutablePropTypes.list.isRequired,\n  };\n\n  render () {\n    const { mediaIds } = this.props;\n\n    return (\n      <div className='compose-form__upload-wrapper'>\n        <UploadProgressContainer />\n\n        <div className='compose-form__uploads-wrapper'>\n          {mediaIds.map(id => (\n            <UploadContainer id={id} key={id} />\n          ))}\n        </div>\n\n        {!mediaIds.isEmpty() && <SensitiveButtonContainer />}\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport UploadForm from '../components/upload_form';\n\nconst mapStateToProps = state => ({\n  mediaIds: state.getIn(['compose', 'media_attachments']).map(item => item.get('id')),\n});\n\nexport default connect(mapStateToProps)(UploadForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Motion from '../../ui/util/optional_motion';\nimport spring from 'react-motion/lib/spring';\n\nexport default class Warning extends React.PureComponent {\n\n  static propTypes = {\n    message: PropTypes.node.isRequired,\n  };\n\n  render () {\n    const { message } = this.props;\n\n    return (\n      <Motion defaultStyle={{ opacity: 0, scaleX: 0.85, scaleY: 0.75 }} style={{ opacity: spring(1, { damping: 35, stiffness: 400 }), scaleX: spring(1, { damping: 35, stiffness: 400 }), scaleY: spring(1, { damping: 35, stiffness: 400 }) }}>\n        {({ opacity, scaleX, scaleY }) => (\n          <div className='compose-form__warning' style={{ opacity: opacity, transform: `scale(${scaleX}, ${scaleY})` }}>\n            {message}\n          </div>\n        )}\n      </Motion>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Warning from '../components/warning';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { me } from '../../../initial_state';\n\nconst buildHashtagRE = () => {\n  try {\n    const HASHTAG_SEPARATORS = '_\\\\u00b7\\\\u200c';\n    const ALPHA = '\\\\p{L}\\\\p{M}';\n    const WORD = '\\\\p{L}\\\\p{M}\\\\p{N}\\\\p{Pc}';\n    return new RegExp(\n      '(?:^|[^\\\\/\\\\)\\\\w])#((' +\n      '[' + WORD + '_]' +\n      '[' + WORD + HASHTAG_SEPARATORS + ']*' +\n      '[' + ALPHA + HASHTAG_SEPARATORS + ']' +\n      '[' + WORD + HASHTAG_SEPARATORS +']*' +\n      '[' + WORD + '_]' +\n      ')|(' +\n      '[' + WORD + '_]*' +\n      '[' + ALPHA + ']' +\n      '[' + WORD + '_]*' +\n      '))', 'iu',\n    );\n  } catch {\n    return /(?:^|[^/)\\w])#(\\w*[a-zA-Z·]\\w*)/i;\n  }\n};\n\nconst APPROX_HASHTAG_RE = buildHashtagRE();\n\nconst mapStateToProps = state => ({\n  needsLockWarning: state.getIn(['compose', 'privacy']) === 'private' && !state.getIn(['accounts', me, 'locked']),\n  hashtagWarning: state.getIn(['compose', 'privacy']) !== 'public' && APPROX_HASHTAG_RE.test(state.getIn(['compose', 'text'])),\n  directMessageWarning: state.getIn(['compose', 'privacy']) === 'direct',\n});\n\nconst WarningWrapper = ({ needsLockWarning, hashtagWarning, directMessageWarning }) => {\n  if (needsLockWarning) {\n    return <Warning message={<FormattedMessage id='compose_form.lock_disclaimer' defaultMessage='Your account is not {locked}. Anyone can follow you to view your follower-only posts.' values={{ locked: <a href='/settings/profile'><FormattedMessage id='compose_form.lock_disclaimer.lock' defaultMessage='locked' /></a> }} />} />;\n  }\n\n  if (hashtagWarning) {\n    return <Warning message={<FormattedMessage id='compose_form.hashtag_warning' defaultMessage=\"This post won't be listed under any hashtag as it is unlisted. Only public posts can be searched by hashtag.\" />} />;\n  }\n\n  if (directMessageWarning) {\n    const message = (\n      <span>\n        <FormattedMessage id='compose_form.encryption_warning' defaultMessage='Posts on Mastodon are not end-to-end encrypted. Do not share any dangerous information over Mastodon.' /> <a href='/terms' target='_blank'><FormattedMessage id='compose_form.direct_message_warning_learn_more' defaultMessage='Learn more' /></a>\n      </span>\n    );\n\n    return <Warning message={message} />;\n  }\n\n  return null;\n};\n\nWarningWrapper.propTypes = {\n  needsLockWarning: PropTypes.bool,\n  hashtagWarning: PropTypes.bool,\n  directMessageWarning: PropTypes.bool,\n};\n\nexport default connect(mapStateToProps)(WarningWrapper);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, defineMessages } from 'react-intl';\nimport TextIconButton from './text_icon_button';\nimport Overlay from 'react-overlays/Overlay';\nimport { supportsPassiveEvents } from 'detect-passive-events';\nimport classNames from 'classnames';\nimport { languages as preloadedLanguages } from 'mastodon/initial_state';\nimport { loupeIcon, deleteIcon } from 'mastodon/utils/icons';\nimport fuzzysort from 'fuzzysort';\n\nconst messages = defineMessages({\n  changeLanguage: { id: 'compose.language.change', defaultMessage: 'Change language' },\n  search: { id: 'compose.language.search', defaultMessage: 'Search languages...' },\n  clear: { id: 'emoji_button.clear', defaultMessage: 'Clear' },\n});\n\nconst listenerOptions = supportsPassiveEvents ? { passive: true } : false;\n\nclass LanguageDropdownMenu extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    frequentlyUsedLanguages: PropTypes.arrayOf(PropTypes.string).isRequired,\n    onClose: PropTypes.func.isRequired,\n    onChange: PropTypes.func.isRequired,\n    languages: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.string)),\n    intl: PropTypes.object,\n  };\n\n  static defaultProps = {\n    languages: preloadedLanguages,\n  };\n\n  state = {\n    searchValue: '',\n  };\n\n  handleDocumentClick = e => {\n    if (this.node && !this.node.contains(e.target)) {\n      this.props.onClose();\n    }\n  };\n\n  componentDidMount () {\n    document.addEventListener('click', this.handleDocumentClick, false);\n    document.addEventListener('touchend', this.handleDocumentClick, listenerOptions);\n\n    // Because of https://github.com/react-bootstrap/react-bootstrap/issues/2614 we need\n    // to wait for a frame before focusing\n    requestAnimationFrame(() => {\n      if (this.node) {\n        const element = this.node.querySelector('input[type=\"search\"]');\n        if (element) element.focus();\n      }\n    });\n  }\n\n  componentWillUnmount () {\n    document.removeEventListener('click', this.handleDocumentClick, false);\n    document.removeEventListener('touchend', this.handleDocumentClick, listenerOptions);\n  }\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  setListRef = c => {\n    this.listNode = c;\n  };\n\n  handleSearchChange = ({ target }) => {\n    this.setState({ searchValue: target.value });\n  };\n\n  search () {\n    const { languages, value, frequentlyUsedLanguages } = this.props;\n    const { searchValue } = this.state;\n\n    if (searchValue === '') {\n      return [...languages].sort((a, b) => {\n        // Push current selection to the top of the list\n\n        if (a[0] === value) {\n          return -1;\n        } else if (b[0] === value) {\n          return 1;\n        } else {\n          // Sort according to frequently used languages\n\n          const indexOfA = frequentlyUsedLanguages.indexOf(a[0]);\n          const indexOfB = frequentlyUsedLanguages.indexOf(b[0]);\n\n          return ((indexOfA > -1 ? indexOfA : Infinity) - (indexOfB > -1 ? indexOfB : Infinity));\n        }\n      });\n    }\n\n    return fuzzysort.go(searchValue, languages, {\n      keys: ['0', '1', '2'],\n      limit: 5,\n      threshold: -10000,\n    }).map(result => result.obj);\n  }\n\n  frequentlyUsed () {\n    const { languages, value } = this.props;\n    const current = languages.find(lang => lang[0] === value);\n    const results = [];\n\n    if (current) {\n      results.push(current);\n    }\n\n    return results;\n  }\n\n  handleClick = e => {\n    const value = e.currentTarget.getAttribute('data-index');\n\n    e.preventDefault();\n\n    this.props.onClose();\n    this.props.onChange(value);\n  };\n\n  handleKeyDown = e => {\n    const { onClose } = this.props;\n    const index = Array.from(this.listNode.childNodes).findIndex(node => node === e.currentTarget);\n\n    let element = null;\n\n    switch(e.key) {\n    case 'Escape':\n      onClose();\n      break;\n    case 'Enter':\n      this.handleClick(e);\n      break;\n    case 'ArrowDown':\n      element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      break;\n    case 'ArrowUp':\n      element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      break;\n    case 'Tab':\n      if (e.shiftKey) {\n        element = this.listNode.childNodes[index - 1] || this.listNode.lastChild;\n      } else {\n        element = this.listNode.childNodes[index + 1] || this.listNode.firstChild;\n      }\n      break;\n    case 'Home':\n      element = this.listNode.firstChild;\n      break;\n    case 'End':\n      element = this.listNode.lastChild;\n      break;\n    }\n\n    if (element) {\n      element.focus();\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  };\n\n  handleSearchKeyDown = e => {\n    const { onChange, onClose } = this.props;\n    const { searchValue } = this.state;\n\n    let element = null;\n\n    switch(e.key) {\n    case 'Tab':\n    case 'ArrowDown':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        element.focus();\n        e.preventDefault();\n        e.stopPropagation();\n      }\n\n      break;\n    case 'Enter':\n      element = this.listNode.firstChild;\n\n      if (element) {\n        onChange(element.getAttribute('data-index'));\n        onClose();\n      }\n      break;\n    case 'Escape':\n      if (searchValue !== '') {\n        e.preventDefault();\n        this.handleClear();\n      }\n\n      break;\n    }\n  };\n\n  handleClear = () => {\n    this.setState({ searchValue: '' });\n  };\n\n  renderItem = lang => {\n    const { value } = this.props;\n\n    return (\n      <div key={lang[0]} role='option' tabIndex='0' data-index={lang[0]} className={classNames('language-dropdown__dropdown__results__item', { active: lang[0] === value })} aria-selected={lang[0] === value} onClick={this.handleClick} onKeyDown={this.handleKeyDown}>\n        <span className='language-dropdown__dropdown__results__item__native-name' lang={lang[0]}>{lang[2]}</span> <span className='language-dropdown__dropdown__results__item__common-name'>({lang[1]})</span>\n      </div>\n    );\n  };\n\n  render () {\n    const { intl } = this.props;\n    const { searchValue } = this.state;\n    const isSearching = searchValue !== '';\n    const results = this.search();\n\n    return (\n      <div ref={this.setRef}>\n        <div className='emoji-mart-search'>\n          <input type='search' value={searchValue} onChange={this.handleSearchChange} onKeyDown={this.handleSearchKeyDown} placeholder={intl.formatMessage(messages.search)} />\n          <button type='button' className='emoji-mart-search-icon' disabled={!isSearching} aria-label={intl.formatMessage(messages.clear)} onClick={this.handleClear}>{!isSearching ? loupeIcon : deleteIcon}</button>\n        </div>\n\n        <div className='language-dropdown__dropdown__results emoji-mart-scroll' role='listbox' ref={this.setListRef}>\n          {results.map(this.renderItem)}\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default @injectIntl\nclass LanguageDropdown extends React.PureComponent {\n\n  static propTypes = {\n    value: PropTypes.string,\n    frequentlyUsedLanguages: PropTypes.arrayOf(PropTypes.string),\n    intl: PropTypes.object.isRequired,\n    onChange: PropTypes.func,\n    onClose: PropTypes.func,\n  };\n\n  state = {\n    open: false,\n    placement: 'bottom',\n  };\n\n  handleToggle = () => {\n    if (this.state.open && this.activeElement) {\n      this.activeElement.focus({ preventScroll: true });\n    }\n\n    this.setState({ open: !this.state.open });\n  };\n\n  handleClose = () => {\n    const { value, onClose } = this.props;\n\n    if (this.state.open && this.activeElement) {\n      this.activeElement.focus({ preventScroll: true });\n    }\n\n    this.setState({ open: false });\n    onClose(value);\n  };\n\n  handleChange = value => {\n    const { onChange } = this.props;\n    onChange(value);\n  };\n\n  setTargetRef = c => {\n    this.target = c;\n  };\n\n  findTarget = () => {\n    return this.target;\n  };\n\n  handleOverlayEnter = (state) => {\n    this.setState({ placement: state.placement });\n  };\n\n  render () {\n    const { value, intl, frequentlyUsedLanguages } = this.props;\n    const { open, placement } = this.state;\n\n    return (\n      <div className={classNames('privacy-dropdown', placement, { active: open })}>\n        <div className='privacy-dropdown__value' ref={this.setTargetRef} >\n          <TextIconButton\n            className='privacy-dropdown__value-icon'\n            label={value && value.toUpperCase()}\n            title={intl.formatMessage(messages.changeLanguage)}\n            active={open}\n            onClick={this.handleToggle}\n          />\n        </div>\n\n        <Overlay show={open} placement={'bottom'} flip target={this.findTarget} popperConfig={{ strategy: 'fixed', onFirstUpdate: this.handleOverlayEnter }}>\n          {({ props, placement }) => (\n            <div {...props}>\n              <div className={`dropdown-animation language-dropdown__dropdown ${placement}`} >\n                <LanguageDropdownMenu\n                  value={value}\n                  frequentlyUsedLanguages={frequentlyUsedLanguages}\n                  onClose={this.handleClose}\n                  onChange={this.handleChange}\n                  intl={intl}\n                />\n              </div>\n            </div>\n          )}\n        </Overlay>\n      </div>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport LanguageDropdown from '../components/language_dropdown';\nimport { changeComposeLanguage } from 'mastodon/actions/compose';\nimport { useLanguage } from 'mastodon/actions/languages';\nimport { createSelector } from 'reselect';\nimport { Map as ImmutableMap } from 'immutable';\n\nconst getFrequentlyUsedLanguages = createSelector([\n  state => state.getIn(['settings', 'frequentlyUsedLanguages'], ImmutableMap()),\n], languageCounters => (\n  languageCounters.keySeq()\n    .sort((a, b) => languageCounters.get(a) - languageCounters.get(b))\n    .reverse()\n    .toArray()\n));\n\nconst mapStateToProps = state => ({\n  frequentlyUsedLanguages: getFrequentlyUsedLanguages(state),\n  value: state.getIn(['compose', 'language']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n\n  onChange (value) {\n    dispatch(changeComposeLanguage(value));\n  },\n\n  onClose (value) {\n    dispatch(useLanguage(value));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LanguageDropdown);\n","import regexSupplant from 'twitter-text/dist/lib/regexSupplant';\nimport validUrlPrecedingChars from 'twitter-text/dist/regexp/validUrlPrecedingChars';\nimport validDomain from 'twitter-text/dist/regexp/validDomain';\nimport validPortNumber from 'twitter-text/dist/regexp/validPortNumber';\nimport validUrlPath from 'twitter-text/dist/regexp/validUrlPath';\nimport validUrlQueryChars from 'twitter-text/dist/regexp/validUrlQueryChars';\nimport validUrlQueryEndingChars from 'twitter-text/dist/regexp/validUrlQueryEndingChars';\n\n// The difference with twitter-text's extractURL is that the protocol isn't\n// optional.\n\nexport const urlRegex = regexSupplant(\n  '('                                                          + // $1 URL\n    '(#{validUrlPrecedingChars})'                              + // $2\n    '(https?:\\\\/\\\\/)'                                          + // $3 Protocol\n    '(#{validDomain})'                                         + // $4 Domain(s)\n    '(?::(#{validPortNumber}))?'                               + // $5 Port number (optional)\n    '(\\\\/#{validUrlPath}*)?'                                   + // $6 URL Path\n    '(\\\\?#{validUrlQueryChars}*#{validUrlQueryEndingChars})?'  + // $7 Query String\n  ')',\n  {\n    validUrlPrecedingChars,\n    validDomain,\n    validPortNumber,\n    validUrlPath,\n    validUrlQueryChars,\n    validUrlQueryEndingChars,\n  },\n  'gi',\n);\n","import React from 'react';\nimport CharacterCounter from './character_counter';\nimport Button from '../../../components/button';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ReplyIndicatorContainer from '../containers/reply_indicator_container';\nimport AutosuggestTextarea from '../../../components/autosuggest_textarea';\nimport AutosuggestInput from '../../../components/autosuggest_input';\nimport PollButtonContainer from '../containers/poll_button_container';\nimport UploadButtonContainer from '../containers/upload_button_container';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport SpoilerButtonContainer from '../containers/spoiler_button_container';\nimport PrivacyDropdownContainer from '../containers/privacy_dropdown_container';\nimport EmojiPickerDropdown from '../containers/emoji_picker_dropdown_container';\nimport PollFormContainer from '../containers/poll_form_container';\nimport UploadFormContainer from '../containers/upload_form_container';\nimport WarningContainer from '../containers/warning_container';\nimport LanguageDropdown from '../containers/language_dropdown_container';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { length } from 'stringz';\nimport { countableText } from '../util/counter';\nimport Icon from 'mastodon/components/icon';\nimport { maxChars } from '../../../initial_state';\n\nconst allowedAroundShortCode = '><\\u0085\\u0020\\u00a0\\u1680\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000\\u2028\\u2029\\u0009\\u000a\\u000b\\u000c\\u000d';\n\nconst messages = defineMessages({\n  placeholder: { id: 'compose_form.placeholder', defaultMessage: 'What is on your mind?' },\n  spoiler_placeholder: { id: 'compose_form.spoiler_placeholder', defaultMessage: 'Write your warning here' },\n  publish: { id: 'compose_form.publish', defaultMessage: 'Publish' },\n  publishLoud: { id: 'compose_form.publish_loud', defaultMessage: '{publish}!' },\n  saveChanges: { id: 'compose_form.save_changes', defaultMessage: 'Save changes' },\n});\n\nexport default @injectIntl\nclass ComposeForm extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    intl: PropTypes.object.isRequired,\n    text: PropTypes.string.isRequired,\n    suggestions: ImmutablePropTypes.list,\n    spoiler: PropTypes.bool,\n    privacy: PropTypes.string,\n    spoilerText: PropTypes.string,\n    focusDate: PropTypes.instanceOf(Date),\n    caretPosition: PropTypes.number,\n    preselectDate: PropTypes.instanceOf(Date),\n    isSubmitting: PropTypes.bool,\n    isChangingUpload: PropTypes.bool,\n    isEditing: PropTypes.bool,\n    isUploading: PropTypes.bool,\n    onChange: PropTypes.func.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n    onClearSuggestions: PropTypes.func.isRequired,\n    onFetchSuggestions: PropTypes.func.isRequired,\n    onSuggestionSelected: PropTypes.func.isRequired,\n    onChangeSpoilerText: PropTypes.func.isRequired,\n    onPaste: PropTypes.func.isRequired,\n    onPickEmoji: PropTypes.func.isRequired,\n    autoFocus: PropTypes.bool,\n    anyMedia: PropTypes.bool,\n    isInReply: PropTypes.bool,\n    singleColumn: PropTypes.bool,\n    lang: PropTypes.string,\n  };\n\n  static defaultProps = {\n    autoFocus: false,\n  };\n\n  handleChange = (e) => {\n    this.props.onChange(e.target.value);\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      this.handleSubmit();\n    }\n  };\n\n  getFulltextForCharacterCounting = () => {\n    return [this.props.spoiler? this.props.spoilerText: '', countableText(this.props.text)].join('');\n  };\n\n  canSubmit = () => {\n    const { isSubmitting, isChangingUpload, isUploading, anyMedia } = this.props;\n    const fulltext = this.getFulltextForCharacterCounting();\n    const isOnlyWhitespace = fulltext.length !== 0 && fulltext.trim().length === 0;\n\n    return !(isSubmitting || isUploading || isChangingUpload || length(fulltext) > maxChars || (isOnlyWhitespace && !anyMedia));\n  };\n\n  handleSubmit = (e) => {\n    if (this.props.text !== this.autosuggestTextarea.textarea.value) {\n      // Something changed the text inside the textarea (e.g. browser extensions like Grammarly)\n      // Update the state to match the current text\n      this.props.onChange(this.autosuggestTextarea.textarea.value);\n    }\n\n    if (!this.canSubmit()) {\n      return;\n    }\n\n    this.props.onSubmit(this.context.router ? this.context.router.history : null);\n\n    if (e) {\n      e.preventDefault();\n    }\n  };\n\n  onSuggestionsClearRequested = () => {\n    this.props.onClearSuggestions();\n  };\n\n  onSuggestionsFetchRequested = (token) => {\n    this.props.onFetchSuggestions(token);\n  };\n\n  onSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['text']);\n  };\n\n  onSpoilerSuggestionSelected = (tokenStart, token, value) => {\n    this.props.onSuggestionSelected(tokenStart, token, value, ['spoiler_text']);\n  };\n\n  handleChangeSpoilerText = (e) => {\n    this.props.onChangeSpoilerText(e.target.value);\n  };\n\n  handleFocus = () => {\n    if (this.composeForm && !this.props.singleColumn) {\n      const { left, right } = this.composeForm.getBoundingClientRect();\n      if (left < 0 || right > (window.innerWidth || document.documentElement.clientWidth)) {\n        this.composeForm.scrollIntoView();\n      }\n    }\n  };\n\n  componentDidMount () {\n    this._updateFocusAndSelection({ });\n  }\n\n  componentDidUpdate (prevProps) {\n    this._updateFocusAndSelection(prevProps);\n  }\n\n  _updateFocusAndSelection = (prevProps) => {\n    // This statement does several things:\n    // - If we're beginning a reply, and,\n    //     - Replying to zero or one users, places the cursor at the end of the textbox.\n    //     - Replying to more than one user, selects any usernames past the first;\n    //       this provides a convenient shortcut to drop everyone else from the conversation.\n    if (this.props.focusDate && this.props.focusDate !== prevProps.focusDate) {\n      let selectionEnd, selectionStart;\n\n      if (this.props.preselectDate !== prevProps.preselectDate && this.props.isInReply) {\n        selectionEnd   = this.props.text.length;\n        selectionStart = this.props.text.search(/\\s/) + 1;\n      } else if (typeof this.props.caretPosition === 'number') {\n        selectionStart = this.props.caretPosition;\n        selectionEnd   = this.props.caretPosition;\n      } else {\n        selectionEnd   = this.props.text.length;\n        selectionStart = selectionEnd;\n      }\n\n      // Because of the wicg-inert polyfill, the activeElement may not be\n      // immediately selectable, we have to wait for observers to run, as\n      // described in https://github.com/WICG/inert#performance-and-gotchas\n      Promise.resolve().then(() => {\n        this.autosuggestTextarea.textarea.setSelectionRange(selectionStart, selectionEnd);\n        this.autosuggestTextarea.textarea.focus();\n      }).catch(console.error);\n    } else if(prevProps.isSubmitting && !this.props.isSubmitting) {\n      this.autosuggestTextarea.textarea.focus();\n    } else if (this.props.spoiler !== prevProps.spoiler) {\n      if (this.props.spoiler) {\n        this.spoilerText.input.focus();\n      } else if (prevProps.spoiler) {\n        this.autosuggestTextarea.textarea.focus();\n      }\n    }\n  };\n\n  setAutosuggestTextarea = (c) => {\n    this.autosuggestTextarea = c;\n  };\n\n  setSpoilerText = (c) => {\n    this.spoilerText = c;\n  };\n\n  setRef = c => {\n    this.composeForm = c;\n  };\n\n  handleEmojiPick = (data) => {\n    const { text }     = this.props;\n    const position     = this.autosuggestTextarea.textarea.selectionStart;\n    const needsSpace   = data.custom && position > 0 && !allowedAroundShortCode.includes(text[position - 1]);\n\n    this.props.onPickEmoji(position, data, needsSpace);\n  };\n\n  render () {\n    const { intl, onPaste, autoFocus } = this.props;\n    const disabled = this.props.isSubmitting;\n\n    let publishText = '';\n\n    if (this.props.isEditing) {\n      publishText = intl.formatMessage(messages.saveChanges);\n    } else if (this.props.privacy === 'private' || this.props.privacy === 'direct') {\n      publishText = <span className='compose-form__publish-private'><Icon id='lock' /> {intl.formatMessage(messages.publish)}</span>;\n    } else {\n      publishText = this.props.privacy !== 'unlisted' ? intl.formatMessage(messages.publishLoud, { publish: intl.formatMessage(messages.publish) }) : intl.formatMessage(messages.publish);\n    }\n\n    return (\n      <form className='compose-form' onSubmit={this.handleSubmit}>\n        <WarningContainer />\n\n        <ReplyIndicatorContainer />\n\n        <div className={`spoiler-input ${this.props.spoiler ? 'spoiler-input--visible' : ''}`} ref={this.setRef} aria-hidden={!this.props.spoiler}>\n          <AutosuggestInput\n            placeholder={intl.formatMessage(messages.spoiler_placeholder)}\n            value={this.props.spoilerText}\n            onChange={this.handleChangeSpoilerText}\n            onKeyDown={this.handleKeyDown}\n            disabled={!this.props.spoiler}\n            ref={this.setSpoilerText}\n            suggestions={this.props.suggestions}\n            onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n            onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n            onSuggestionSelected={this.onSpoilerSuggestionSelected}\n            searchTokens={[':']}\n            id='cw-spoiler-input'\n            className='spoiler-input__input'\n            lang={this.props.lang}\n            spellCheck\n          />\n        </div>\n\n        <AutosuggestTextarea\n          ref={this.setAutosuggestTextarea}\n          placeholder={intl.formatMessage(messages.placeholder)}\n          disabled={disabled}\n          value={this.props.text}\n          onChange={this.handleChange}\n          suggestions={this.props.suggestions}\n          onFocus={this.handleFocus}\n          onKeyDown={this.handleKeyDown}\n          onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n          onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n          onSuggestionSelected={this.onSuggestionSelected}\n          onPaste={onPaste}\n          autoFocus={autoFocus}\n          lang={this.props.lang}\n        >\n          <EmojiPickerDropdown onPickEmoji={this.handleEmojiPick} />\n\n          <div className='compose-form__modifiers'>\n            <UploadFormContainer />\n            <PollFormContainer />\n          </div>\n        </AutosuggestTextarea>\n\n        <div className='compose-form__buttons-wrapper'>\n          <div className='compose-form__buttons'>\n            <UploadButtonContainer />\n            <PollButtonContainer />\n            <PrivacyDropdownContainer disabled={this.props.isEditing} />\n            <SpoilerButtonContainer />\n            <LanguageDropdown />\n          </div>\n\n          <div className='character-counter__wrapper'>\n            <CharacterCounter max={maxChars} text={this.getFulltextForCharacterCounting()} />\n          </div>\n        </div>\n\n        <div className='compose-form__publish'>\n          <div className='compose-form__publish-button-wrapper'>\n            <Button\n              type='submit'\n              text={publishText}\n              disabled={!this.canSubmit()}\n              block\n            />\n          </div>\n        </div>\n      </form>\n    );\n  }\n\n}\n","import { urlRegex } from './url_regex';\n\nconst urlPlaceholder = '$2xxxxxxxxxxxxxxxxxxxxxxx';\n\nexport function countableText(inputText) {\n  return inputText\n    .replace(urlRegex, urlPlaceholder)\n    .replace(/(^|[^/\\w])@(([a-z0-9_]+)@[a-z0-9.-]+[a-z0-9]+)/ig, '$1@$3');\n}\n","import { connect } from 'react-redux';\nimport ComposeForm from '../components/compose_form';\nimport {\n  changeCompose,\n  submitCompose,\n  clearComposeSuggestions,\n  fetchComposeSuggestions,\n  selectComposeSuggestion,\n  changeComposeSpoilerText,\n  insertEmojiCompose,\n  uploadCompose,\n} from '../../../actions/compose';\n\nconst mapStateToProps = state => ({\n  text: state.getIn(['compose', 'text']),\n  suggestions: state.getIn(['compose', 'suggestions']),\n  spoiler: state.getIn(['compose', 'spoiler']),\n  spoilerText: state.getIn(['compose', 'spoiler_text']),\n  privacy: state.getIn(['compose', 'privacy']),\n  focusDate: state.getIn(['compose', 'focusDate']),\n  caretPosition: state.getIn(['compose', 'caretPosition']),\n  preselectDate: state.getIn(['compose', 'preselectDate']),\n  isSubmitting: state.getIn(['compose', 'is_submitting']),\n  isEditing: state.getIn(['compose', 'id']) !== null,\n  isChangingUpload: state.getIn(['compose', 'is_changing_upload']),\n  isUploading: state.getIn(['compose', 'is_uploading']),\n  anyMedia: state.getIn(['compose', 'media_attachments']).size > 0,\n  isInReply: state.getIn(['compose', 'in_reply_to']) !== null,\n  lang: state.getIn(['compose', 'language']),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n\n  onChange (text) {\n    dispatch(changeCompose(text));\n  },\n\n  onSubmit (router) {\n    dispatch(submitCompose(router));\n  },\n\n  onClearSuggestions () {\n    dispatch(clearComposeSuggestions());\n  },\n\n  onFetchSuggestions (token) {\n    dispatch(fetchComposeSuggestions(token));\n  },\n\n  onSuggestionSelected (position, token, suggestion, path) {\n    dispatch(selectComposeSuggestion(position, token, suggestion, path));\n  },\n\n  onChangeSpoilerText (checked) {\n    dispatch(changeComposeSpoilerText(checked));\n  },\n\n  onPaste (files) {\n    dispatch(uploadCompose(files));\n  },\n\n  onPickEmoji (position, data, needsSpace) {\n    dispatch(insertEmojiCompose(position, data, needsSpace));\n  },\n\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ComposeForm);\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { NotificationStack } from 'react-notification';\nimport { dismissAlert } from '../../../actions/alerts';\nimport { getAlerts } from '../../../selectors';\n\nconst mapStateToProps = (state, { intl }) => {\n  const notifications = getAlerts(state);\n\n  notifications.forEach(notification => ['title', 'message'].forEach(key => {\n    const value = notification[key];\n\n    if (typeof value === 'object') {\n      notification[key] = intl.formatMessage(value, notification[`${key}_values`]);\n    }\n  }));\n\n  return { notifications };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onDismiss: alert => {\n      dispatch(dismissAlert(alert));\n    },\n  };\n};\n\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(NotificationStack));\n","import { connect }    from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\n\nconst mapStateToProps = (state, ownProps) => ({\n  loading: state.get('loadingBar')[ownProps.scope || 'default'],\n});\n\nexport default connect(mapStateToProps)(LoadingBar.WrappedComponent);\n","import Immutable from 'immutable';\nimport {\n  DROPDOWN_MENU_OPEN,\n  DROPDOWN_MENU_CLOSE,\n} from '../actions/dropdown_menu';\n\nconst initialState = Immutable.Map({ openId: null, keyboard: false, scroll_key: null });\n\nexport default function dropdownMenu(state = initialState, action) {\n  switch (action.type) {\n  case DROPDOWN_MENU_OPEN:\n    return state.merge({ openId: action.id, keyboard: action.keyboard, scroll_key: action.scroll_key });\n  case DROPDOWN_MENU_CLOSE:\n    return state.get('openId') === action.id ? state.set('openId', null).set('scroll_key', null) : state;\n  default:\n    return state;\n  }\n}\n","import {\n  TIMELINE_UPDATE,\n  TIMELINE_DELETE,\n  TIMELINE_CLEAR,\n  TIMELINE_EXPAND_SUCCESS,\n  TIMELINE_EXPAND_REQUEST,\n  TIMELINE_EXPAND_FAIL,\n  TIMELINE_SCROLL_TOP,\n  TIMELINE_CONNECT,\n  TIMELINE_DISCONNECT,\n  TIMELINE_LOAD_PENDING,\n  TIMELINE_MARK_AS_PARTIAL,\n} from '../actions/timelines';\nimport {\n  ACCOUNT_BLOCK_SUCCESS,\n  ACCOUNT_MUTE_SUCCESS,\n  ACCOUNT_UNFOLLOW_SUCCESS,\n} from '../actions/accounts';\nimport { Map as ImmutableMap, List as ImmutableList, OrderedSet as ImmutableOrderedSet, fromJS } from 'immutable';\nimport compareId from '../compare_id';\n\nconst initialState = ImmutableMap();\n\nconst initialTimeline = ImmutableMap({\n  unread: 0,\n  online: false,\n  top: true,\n  isLoading: false,\n  hasMore: true,\n  pendingItems: ImmutableList(),\n  items: ImmutableList(),\n});\n\nconst expandNormalizedTimeline = (state, timeline, statuses, next, isPartial, isLoadingRecent, usePendingItems) => {\n  // This method is pretty tricky because:\n  // - existing items in the timeline might be out of order\n  // - the existing timeline may have gaps, most often explicitly noted with a `null` item\n  // - ideally, we don't want it to reorder existing items of the timeline\n  // - `statuses` may include items that are already included in the timeline\n  // - this function can be called either to fill in a gap, or load newer items\n\n  return state.update(timeline, initialTimeline, map => map.withMutations(mMap => {\n    mMap.set('isLoading', false);\n    mMap.set('isPartial', isPartial);\n\n    if (!next && !isLoadingRecent) mMap.set('hasMore', false);\n\n    if (timeline.endsWith(':pinned')) {\n      mMap.set('items', statuses.map(status => status.get('id')));\n    } else if (!statuses.isEmpty()) {\n      usePendingItems = isLoadingRecent && (usePendingItems || !mMap.get('pendingItems').isEmpty());\n\n      mMap.update(usePendingItems ? 'pendingItems' : 'items', ImmutableList(), oldIds => {\n        const newIds = statuses.map(status => status.get('id'));\n\n        // Now this gets tricky, as we don't necessarily know for sure where the gap to fill is\n        // and some items in the timeline may not be properly ordered.\n\n        // However, we know that `newIds.last()` is the oldest item that was requested and that\n        // there is no “hole” between `newIds.last()` and `newIds.first()`.\n\n        // First, find the furthest (if properly sorted, oldest) item in the timeline that is\n        // newer than the oldest fetched one, as it's most likely that it delimits the gap.\n        // Start the gap *after* that item.\n        const lastIndex = oldIds.findLastIndex(id => id !== null && compareId(id, newIds.last()) >= 0) + 1;\n\n        // Then, try to find the furthest (if properly sorted, oldest) item in the timeline that\n        // is newer than the most recent fetched one, as it delimits a section comprised of only\n        // items older or within `newIds` (or that were deleted from the server, so should be removed\n        // anyway).\n        // Stop the gap *after* that item.\n        const firstIndex = oldIds.take(lastIndex).findLastIndex(id => id !== null && compareId(id, newIds.first()) > 0) + 1;\n\n        let insertedIds = ImmutableOrderedSet(newIds).withMutations(insertedIds => {\n          // It is possible, though unlikely, that the slice we are replacing contains items older\n          // than the elements we got from the API. Get them and add them back at the back of the\n          // slice.\n          const olderIds = oldIds.slice(firstIndex, lastIndex).filter(id => id !== null && compareId(id, newIds.last()) < 0);\n          insertedIds.union(olderIds);\n\n          // Make sure we aren't inserting duplicates\n          insertedIds.subtract(oldIds.take(firstIndex), oldIds.skip(lastIndex));\n        }).toList();\n\n        // Finally, insert a gap marker if the data is marked as partial by the server\n        if (isPartial && (firstIndex === 0 || oldIds.get(firstIndex - 1) !== null)) {\n          insertedIds = insertedIds.unshift(null);\n        }\n\n        return oldIds.take(firstIndex).concat(\n          insertedIds,\n          oldIds.skip(lastIndex),\n        );\n      });\n    }\n  }));\n};\n\nconst updateTimeline = (state, timeline, status, usePendingItems) => {\n  const top = state.getIn([timeline, 'top']);\n\n  if (usePendingItems || !state.getIn([timeline, 'pendingItems']).isEmpty()) {\n    if (state.getIn([timeline, 'pendingItems'], ImmutableList()).includes(status.get('id')) || state.getIn([timeline, 'items'], ImmutableList()).includes(status.get('id'))) {\n      return state;\n    }\n\n    return state.update(timeline, initialTimeline, map => map.update('pendingItems', list => list.unshift(status.get('id'))).update('unread', unread => unread + 1));\n  }\n\n  const ids        = state.getIn([timeline, 'items'], ImmutableList());\n  const includesId = ids.includes(status.get('id'));\n  const unread     = state.getIn([timeline, 'unread'], 0);\n\n  if (includesId) {\n    return state;\n  }\n\n  let newIds = ids;\n\n  return state.update(timeline, initialTimeline, map => map.withMutations(mMap => {\n    if (!top) mMap.set('unread', unread + 1);\n    if (top && ids.size > 40) newIds = newIds.take(20);\n    mMap.set('items', newIds.unshift(status.get('id')));\n  }));\n};\n\nconst deleteStatus = (state, id, references, exclude_account = null) => {\n  state.keySeq().forEach(timeline => {\n    if (exclude_account === null || (timeline !== `account:${exclude_account}` && !timeline.startsWith(`account:${exclude_account}:`))) {\n      const helper = list => list.filterNot(item => item === id);\n      state = state.updateIn([timeline, 'items'], helper).updateIn([timeline, 'pendingItems'], helper);\n    }\n  });\n\n  // Remove reblogs of deleted status\n  references.forEach(ref => {\n    state = deleteStatus(state, ref, [], exclude_account);\n  });\n\n  return state;\n};\n\nconst clearTimeline = (state, timeline) => {\n  return state.set(timeline, initialTimeline);\n};\n\nconst filterTimelines = (state, relationship, statuses) => {\n  let references;\n\n  statuses.forEach(status => {\n    if (status.get('account') !== relationship.id) {\n      return;\n    }\n\n    references = statuses.filter(item => item.get('reblog') === status.get('id')).map(item => item.get('id'));\n    state      = deleteStatus(state, status.get('id'), references, relationship.id);\n  });\n\n  return state;\n};\n\nconst filterTimeline = (timeline, state, relationship, statuses) => {\n  const helper = list => list.filterNot(statusId => statuses.getIn([statusId, 'account']) === relationship.id);\n  return state.updateIn([timeline, 'items'], ImmutableList(), helper).updateIn([timeline, 'pendingItems'], ImmutableList(), helper);\n};\n\nconst updateTop = (state, timeline, top) => {\n  return state.update(timeline, initialTimeline, map => map.withMutations(mMap => {\n    if (top) mMap.set('unread', mMap.get('pendingItems').size);\n    mMap.set('top', top);\n  }));\n};\n\nconst reconnectTimeline = (state, usePendingItems) => {\n  if (state.get('online')) {\n    return state;\n  }\n\n  return state.withMutations(mMap => {\n    mMap.update(usePendingItems ? 'pendingItems' : 'items', items => items.first() ? items.unshift(null) : items);\n    mMap.set('online', true);\n  });\n};\n\nexport default function timelines(state = initialState, action) {\n  switch(action.type) {\n  case TIMELINE_LOAD_PENDING:\n    return state.update(action.timeline, initialTimeline, map =>\n      map.update('items', list => map.get('pendingItems').concat(list.take(40))).set('pendingItems', ImmutableList()).set('unread', 0));\n  case TIMELINE_EXPAND_REQUEST:\n    return state.update(action.timeline, initialTimeline, map => map.set('isLoading', true));\n  case TIMELINE_EXPAND_FAIL:\n    return state.update(action.timeline, initialTimeline, map => map.set('isLoading', false));\n  case TIMELINE_EXPAND_SUCCESS:\n    return expandNormalizedTimeline(state, action.timeline, fromJS(action.statuses), action.next, action.partial, action.isLoadingRecent, action.usePendingItems);\n  case TIMELINE_UPDATE:\n    return updateTimeline(state, action.timeline, fromJS(action.status), action.usePendingItems);\n  case TIMELINE_DELETE:\n    return deleteStatus(state, action.id, action.references, action.reblogOf);\n  case TIMELINE_CLEAR:\n    return clearTimeline(state, action.timeline);\n  case ACCOUNT_BLOCK_SUCCESS:\n  case ACCOUNT_MUTE_SUCCESS:\n    return filterTimelines(state, action.relationship, action.statuses);\n  case ACCOUNT_UNFOLLOW_SUCCESS:\n    return filterTimeline('home', state, action.relationship, action.statuses);\n  case TIMELINE_SCROLL_TOP:\n    return updateTop(state, action.timeline, action.top);\n  case TIMELINE_CONNECT:\n    return state.update(action.timeline, initialTimeline, map => reconnectTimeline(map, action.usePendingItems));\n  case TIMELINE_DISCONNECT:\n    return state.update(\n      action.timeline,\n      initialTimeline,\n      map => map.set('online', false).update(action.usePendingItems ? 'pendingItems' : 'items', items => items.first() ? items.unshift(null) : items),\n    );\n  case TIMELINE_MARK_AS_PARTIAL:\n    return state.update(\n      action.timeline,\n      initialTimeline,\n      map => map.set('isPartial', true).set('items', ImmutableList()).set('pendingItems', ImmutableList()).set('unread', 0),\n    );\n  default:\n    return state;\n  }\n}\n","import { STORE_HYDRATE } from 'mastodon/actions/store';\nimport { APP_LAYOUT_CHANGE } from 'mastodon/actions/app';\nimport { Map as ImmutableMap } from 'immutable';\nimport { layoutFromWindow } from 'mastodon/is_mobile';\n\nconst initialState = ImmutableMap({\n  streaming_api_base_url: null,\n  access_token: null,\n  layout: layoutFromWindow(),\n  permissions: '0',\n});\n\nexport default function meta(state = initialState, action) {\n  switch(action.type) {\n  case STORE_HYDRATE:\n    return state.merge(action.state.get('meta')).set('permissions', action.state.getIn(['role', 'permissions']));\n  case APP_LAYOUT_CHANGE:\n    return state.set('layout', action.layout);\n  default:\n    return state;\n  }\n}\n","import {\n  ALERT_SHOW,\n  ALERT_DISMISS,\n  ALERT_CLEAR,\n} from '../actions/alerts';\nimport { Map as ImmutableMap, List as ImmutableList } from 'immutable';\n\nconst initialState = ImmutableList([]);\n\nexport default function alerts(state = initialState, action) {\n  switch(action.type) {\n  case ALERT_SHOW:\n    return state.push(ImmutableMap({\n      key: state.size > 0 ? state.last().get('key') + 1 : 0,\n      title: action.title,\n      message: action.message,\n      message_values: action.message_values,\n    }));\n  case ALERT_DISMISS:\n    return state.filterNot(item => item.get('key') === action.alert.key);\n  case ALERT_CLEAR:\n    return state.clear();\n  default:\n    return state;\n  }\n}\n","import { MODAL_OPEN, MODAL_CLOSE } from '../actions/modal';\nimport { TIMELINE_DELETE } from '../actions/timelines';\nimport { COMPOSE_UPLOAD_CHANGE_SUCCESS } from '../actions/compose';\nimport { Stack as ImmutableStack, Map as ImmutableMap } from 'immutable';\n\nconst initialState = ImmutableMap({\n  ignoreFocus: false,\n  stack: ImmutableStack(),\n});\n\nconst popModal = (state, { modalType, ignoreFocus }) => {\n  if (modalType === undefined || modalType === state.getIn(['stack', 0, 'modalType'])) {\n    return state.set('ignoreFocus', !!ignoreFocus).update('stack', stack => stack.shift());\n  } else {\n    return state;\n  }\n};\n\nconst pushModal = (state, modalType, modalProps) => {\n  return state.withMutations(map => {\n    map.set('ignoreFocus', false);\n    map.update('stack', stack => stack.unshift(ImmutableMap({ modalType, modalProps })));\n  });\n};\n\nexport default function modal(state = initialState, action) {\n  switch(action.type) {\n  case MODAL_OPEN:\n    return pushModal(state, action.modalType, action.modalProps);\n  case MODAL_CLOSE:\n    return popModal(state, action);\n  case COMPOSE_UPLOAD_CHANGE_SUCCESS:\n    return popModal(state, { modalType: 'FOCAL_POINT', ignoreFocus: false });\n  case TIMELINE_DELETE:\n    return state.update('stack', stack => stack.filterNot((modal) => modal.get('modalProps').statusId === action.id));\n  default:\n    return state;\n  }\n}\n","import {\n  NOTIFICATIONS_UPDATE,\n} from '../actions/notifications';\nimport {\n  FOLLOWERS_FETCH_REQUEST,\n  FOLLOWERS_FETCH_SUCCESS,\n  FOLLOWERS_FETCH_FAIL,\n  FOLLOWERS_EXPAND_REQUEST,\n  FOLLOWERS_EXPAND_SUCCESS,\n  FOLLOWERS_EXPAND_FAIL,\n  FOLLOWING_FETCH_REQUEST,\n  FOLLOWING_FETCH_SUCCESS,\n  FOLLOWING_FETCH_FAIL,\n  FOLLOWING_EXPAND_REQUEST,\n  FOLLOWING_EXPAND_SUCCESS,\n  FOLLOWING_EXPAND_FAIL,\n  FOLLOW_REQUESTS_FETCH_REQUEST,\n  FOLLOW_REQUESTS_FETCH_SUCCESS,\n  FOLLOW_REQUESTS_FETCH_FAIL,\n  FOLLOW_REQUESTS_EXPAND_REQUEST,\n  FOLLOW_REQUESTS_EXPAND_SUCCESS,\n  FOLLOW_REQUESTS_EXPAND_FAIL,\n  FOLLOW_REQUEST_AUTHORIZE_SUCCESS,\n  FOLLOW_REQUEST_REJECT_SUCCESS,\n} from '../actions/accounts';\nimport {\n  REBLOGS_FETCH_SUCCESS,\n  FAVOURITES_FETCH_SUCCESS,\n} from '../actions/interactions';\nimport {\n  BLOCKS_FETCH_REQUEST,\n  BLOCKS_FETCH_SUCCESS,\n  BLOCKS_FETCH_FAIL,\n  BLOCKS_EXPAND_REQUEST,\n  BLOCKS_EXPAND_SUCCESS,\n  BLOCKS_EXPAND_FAIL,\n} from '../actions/blocks';\nimport {\n  MUTES_FETCH_REQUEST,\n  MUTES_FETCH_SUCCESS,\n  MUTES_FETCH_FAIL,\n  MUTES_EXPAND_REQUEST,\n  MUTES_EXPAND_SUCCESS,\n  MUTES_EXPAND_FAIL,\n} from '../actions/mutes';\nimport {\n  DIRECTORY_FETCH_REQUEST,\n  DIRECTORY_FETCH_SUCCESS,\n  DIRECTORY_FETCH_FAIL,\n  DIRECTORY_EXPAND_REQUEST,\n  DIRECTORY_EXPAND_SUCCESS,\n  DIRECTORY_EXPAND_FAIL,\n} from 'mastodon/actions/directory';\nimport {\n  FEATURED_TAGS_FETCH_REQUEST,\n  FEATURED_TAGS_FETCH_SUCCESS,\n  FEATURED_TAGS_FETCH_FAIL,\n} from 'mastodon/actions/featured_tags';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialListState = ImmutableMap({\n  next: null,\n  isLoading: false,\n  items: ImmutableList(),\n});\n\nconst initialState = ImmutableMap({\n  followers: initialListState,\n  following: initialListState,\n  reblogged_by: initialListState,\n  favourited_by: initialListState,\n  follow_requests: initialListState,\n  blocks: initialListState,\n  mutes: initialListState,\n  featured_tags: initialListState,\n});\n\nconst normalizeList = (state, path, accounts, next) => {\n  return state.setIn(path, ImmutableMap({\n    next,\n    items: ImmutableList(accounts.map(item => item.id)),\n    isLoading: false,\n  }));\n};\n\nconst appendToList = (state, path, accounts, next) => {\n  return state.updateIn(path, map => {\n    return map.set('next', next).set('isLoading', false).update('items', list => list.concat(accounts.map(item => item.id)));\n  });\n};\n\nconst normalizeFollowRequest = (state, notification) => {\n  return state.updateIn(['follow_requests', 'items'], list => {\n    return list.filterNot(item => item === notification.account.id).unshift(notification.account.id);\n  });\n};\n\nconst normalizeFeaturedTag = (featuredTags, accountId) => {\n  const normalizeFeaturedTag = { ...featuredTags, accountId: accountId };\n  return fromJS(normalizeFeaturedTag);\n};\n\nconst normalizeFeaturedTags = (state, path, featuredTags, accountId) => {\n  return state.setIn(path, ImmutableMap({\n    items: ImmutableList(featuredTags.map(featuredTag => normalizeFeaturedTag(featuredTag, accountId)).sort((a, b) => b.get('statuses_count') - a.get('statuses_count'))),\n    isLoading: false,\n  }));\n};\n\nexport default function userLists(state = initialState, action) {\n  switch(action.type) {\n  case FOLLOWERS_FETCH_SUCCESS:\n    return normalizeList(state, ['followers', action.id], action.accounts, action.next);\n  case FOLLOWERS_EXPAND_SUCCESS:\n    return appendToList(state, ['followers', action.id], action.accounts, action.next);\n  case FOLLOWERS_FETCH_REQUEST:\n  case FOLLOWERS_EXPAND_REQUEST:\n    return state.setIn(['followers', action.id, 'isLoading'], true);\n  case FOLLOWERS_FETCH_FAIL:\n  case FOLLOWERS_EXPAND_FAIL:\n    return state.setIn(['followers', action.id, 'isLoading'], false);\n  case FOLLOWING_FETCH_SUCCESS:\n    return normalizeList(state, ['following', action.id], action.accounts, action.next);\n  case FOLLOWING_EXPAND_SUCCESS:\n    return appendToList(state, ['following', action.id], action.accounts, action.next);\n  case FOLLOWING_FETCH_REQUEST:\n  case FOLLOWING_EXPAND_REQUEST:\n    return state.setIn(['following', action.id, 'isLoading'], true);\n  case FOLLOWING_FETCH_FAIL:\n  case FOLLOWING_EXPAND_FAIL:\n    return state.setIn(['following', action.id, 'isLoading'], false);\n  case REBLOGS_FETCH_SUCCESS:\n    return state.setIn(['reblogged_by', action.id], ImmutableList(action.accounts.map(item => item.id)));\n  case FAVOURITES_FETCH_SUCCESS:\n    return state.setIn(['favourited_by', action.id], ImmutableList(action.accounts.map(item => item.id)));\n  case NOTIFICATIONS_UPDATE:\n    return action.notification.type === 'follow_request' ? normalizeFollowRequest(state, action.notification) : state;\n  case FOLLOW_REQUESTS_FETCH_SUCCESS:\n    return normalizeList(state, ['follow_requests'], action.accounts, action.next);\n  case FOLLOW_REQUESTS_EXPAND_SUCCESS:\n    return appendToList(state, ['follow_requests'], action.accounts, action.next);\n  case FOLLOW_REQUESTS_FETCH_REQUEST:\n  case FOLLOW_REQUESTS_EXPAND_REQUEST:\n    return state.setIn(['follow_requests', 'isLoading'], true);\n  case FOLLOW_REQUESTS_FETCH_FAIL:\n  case FOLLOW_REQUESTS_EXPAND_FAIL:\n    return state.setIn(['follow_requests', 'isLoading'], false);\n  case FOLLOW_REQUEST_AUTHORIZE_SUCCESS:\n  case FOLLOW_REQUEST_REJECT_SUCCESS:\n    return state.updateIn(['follow_requests', 'items'], list => list.filterNot(item => item === action.id));\n  case BLOCKS_FETCH_SUCCESS:\n    return normalizeList(state, ['blocks'], action.accounts, action.next);\n  case BLOCKS_EXPAND_SUCCESS:\n    return appendToList(state, ['blocks'], action.accounts, action.next);\n  case BLOCKS_FETCH_REQUEST:\n  case BLOCKS_EXPAND_REQUEST:\n    return state.setIn(['blocks', 'isLoading'], true);\n  case BLOCKS_FETCH_FAIL:\n  case BLOCKS_EXPAND_FAIL:\n    return state.setIn(['blocks', 'isLoading'], false);\n  case MUTES_FETCH_SUCCESS:\n    return normalizeList(state, ['mutes'], action.accounts, action.next);\n  case MUTES_EXPAND_SUCCESS:\n    return appendToList(state, ['mutes'], action.accounts, action.next);\n  case MUTES_FETCH_REQUEST:\n  case MUTES_EXPAND_REQUEST:\n    return state.setIn(['mutes', 'isLoading'], true);\n  case MUTES_FETCH_FAIL:\n  case MUTES_EXPAND_FAIL:\n    return state.setIn(['mutes', 'isLoading'], false);\n  case DIRECTORY_FETCH_SUCCESS:\n    return normalizeList(state, ['directory'], action.accounts, action.next);\n  case DIRECTORY_EXPAND_SUCCESS:\n    return appendToList(state, ['directory'], action.accounts, action.next);\n  case DIRECTORY_FETCH_REQUEST:\n  case DIRECTORY_EXPAND_REQUEST:\n    return state.setIn(['directory', 'isLoading'], true);\n  case DIRECTORY_FETCH_FAIL:\n  case DIRECTORY_EXPAND_FAIL:\n    return state.setIn(['directory', 'isLoading'], false);\n  case FEATURED_TAGS_FETCH_SUCCESS:\n    return normalizeFeaturedTags(state, ['featured_tags', action.id], action.tags, action.id);\n  case FEATURED_TAGS_FETCH_REQUEST:\n    return state.setIn(['featured_tags', action.id, 'isLoading'], true);\n  case FEATURED_TAGS_FETCH_FAIL:\n    return state.setIn(['featured_tags', action.id, 'isLoading'], false);\n  default:\n    return state;\n  }\n}\n","import {\n  DOMAIN_BLOCKS_FETCH_SUCCESS,\n  DOMAIN_BLOCKS_EXPAND_SUCCESS,\n  DOMAIN_UNBLOCK_SUCCESS,\n} from '../actions/domain_blocks';\nimport { Map as ImmutableMap, OrderedSet as ImmutableOrderedSet } from 'immutable';\n\nconst initialState = ImmutableMap({\n  blocks: ImmutableMap({\n    items: ImmutableOrderedSet(),\n  }),\n});\n\nexport default function domainLists(state = initialState, action) {\n  switch(action.type) {\n  case DOMAIN_BLOCKS_FETCH_SUCCESS:\n    return state.setIn(['blocks', 'items'], ImmutableOrderedSet(action.domains)).setIn(['blocks', 'next'], action.next);\n  case DOMAIN_BLOCKS_EXPAND_SUCCESS:\n    return state.updateIn(['blocks', 'items'], set => set.union(action.domains)).setIn(['blocks', 'next'], action.next);\n  case DOMAIN_UNBLOCK_SUCCESS:\n    return state.updateIn(['blocks', 'items'], set => set.delete(action.domain));\n  default:\n    return state;\n  }\n}\n","import { ACCOUNT_IMPORT, ACCOUNTS_IMPORT } from 'mastodon/actions/importer';\nimport { ACCOUNT_REVEAL } from 'mastodon/actions/accounts';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap();\n\nconst normalizeAccount = (state, account) => {\n  account = { ...account };\n\n  delete account.followers_count;\n  delete account.following_count;\n  delete account.statuses_count;\n\n  account.hidden = state.getIn([account.id, 'hidden']) === false ? false : account.limited;\n\n  return state.set(account.id, fromJS(account));\n};\n\nconst normalizeAccounts = (state, accounts) => {\n  accounts.forEach(account => {\n    state = normalizeAccount(state, account);\n  });\n\n  return state;\n};\n\nexport default function accounts(state = initialState, action) {\n  switch(action.type) {\n  case ACCOUNT_IMPORT:\n    return normalizeAccount(state, action.account);\n  case ACCOUNTS_IMPORT:\n    return normalizeAccounts(state, action.accounts);\n  case ACCOUNT_REVEAL:\n    return state.setIn([action.id, 'hidden'], false);\n  default:\n    return state;\n  }\n}\n","import {\n  ACCOUNT_FOLLOW_SUCCESS,\n  ACCOUNT_UNFOLLOW_SUCCESS,\n} from '../actions/accounts';\nimport { ACCOUNT_IMPORT, ACCOUNTS_IMPORT } from '../actions/importer';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst normalizeAccount = (state, account) => state.set(account.id, fromJS({\n  followers_count: account.followers_count,\n  following_count: account.following_count,\n  statuses_count: account.statuses_count,\n}));\n\nconst normalizeAccounts = (state, accounts) => {\n  accounts.forEach(account => {\n    state = normalizeAccount(state, account);\n  });\n\n  return state;\n};\n\nconst initialState = ImmutableMap();\n\nexport default function accountsCounters(state = initialState, action) {\n  switch(action.type) {\n  case ACCOUNT_IMPORT:\n    return normalizeAccount(state, action.account);\n  case ACCOUNTS_IMPORT:\n    return normalizeAccounts(state, action.accounts);\n  case ACCOUNT_FOLLOW_SUCCESS:\n    return action.alreadyFollowing ? state :\n      state.updateIn([action.relationship.id, 'followers_count'], num => num + 1);\n  case ACCOUNT_UNFOLLOW_SUCCESS:\n    return state.updateIn([action.relationship.id, 'followers_count'], num => Math.max(0, num - 1));\n  default:\n    return state;\n  }\n}\n","import {\n  REBLOG_REQUEST,\n  REBLOG_FAIL,\n  FAVOURITE_REQUEST,\n  FAVOURITE_FAIL,\n  UNFAVOURITE_SUCCESS,\n  BOOKMARK_REQUEST,\n  BOOKMARK_FAIL,\n  REACTION_UPDATE,\n  REACTION_ADD_FAIL,\n  REACTION_REMOVE_FAIL,\n  REACTION_ADD_REQUEST,\n  REACTION_REMOVE_REQUEST,\n} from '../actions/interactions';\nimport {\n  STATUS_MUTE_SUCCESS,\n  STATUS_UNMUTE_SUCCESS,\n  STATUS_REVEAL,\n  STATUS_HIDE,\n  STATUS_COLLAPSE,\n  STATUS_TRANSLATE_SUCCESS,\n  STATUS_TRANSLATE_UNDO,\n  STATUS_FETCH_REQUEST,\n  STATUS_FETCH_FAIL,\n} from '../actions/statuses';\nimport { TIMELINE_DELETE } from '../actions/timelines';\nimport { STATUS_IMPORT, STATUSES_IMPORT } from '../actions/importer';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst importStatus = (state, status) => state.set(status.id, fromJS(status));\n\nconst importStatuses = (state, statuses) =>\n  state.withMutations(mutable => statuses.forEach(status => importStatus(mutable, status)));\n\nconst deleteStatus = (state, id, references) => {\n  references.forEach(ref => {\n    state = deleteStatus(state, ref, []);\n  });\n\n  return state.delete(id);\n};\n\nconst updateReaction = (state, id, name, updater) => state.update(\n  id,\n  status => status.update(\n    'reactions',\n    reactions => {\n      const index = reactions.findIndex(reaction => reaction.get('name') === name);\n      if (index > -1) {\n        return reactions.update(index, reaction => updater(reaction));\n      } else {\n        return reactions.push(updater(fromJS({ name, count: 0 })));\n      }\n    },\n  ),\n);\n\nconst updateReactionCount = (state, reaction) => updateReaction(state, reaction.status_id, reaction.name, x => x.set('count', reaction.count));\n\n// The url parameter is only used when adding a new custom emoji reaction\n// (one that wasn't in the reactions list before) because we don't have its\n// URL yet.  In all other cases, it's undefined.\nconst addReaction = (state, id, name, url) => updateReaction(\n  state,\n  id,\n  name,\n  x => x.set('me', true)\n    .update('count', n => n + 1)\n    .update('url', old => old ? old : url)\n    .update('static_url', old => old ? old : url),\n);\n\nconst removeReaction = (state, id, name) => updateReaction(\n  state,\n  id,\n  name,\n  x => x.set('me', false).update('count', n => n - 1),\n);\n\nconst initialState = ImmutableMap();\n\nexport default function statuses(state = initialState, action) {\n  switch(action.type) {\n  case STATUS_FETCH_REQUEST:\n    return state.setIn([action.id, 'isLoading'], true);\n  case STATUS_FETCH_FAIL:\n    return state.delete(action.id);\n  case STATUS_IMPORT:\n    return importStatus(state, action.status);\n  case STATUSES_IMPORT:\n    return importStatuses(state, action.statuses);\n  case FAVOURITE_REQUEST:\n    return state.setIn([action.status.get('id'), 'favourited'], true);\n  case UNFAVOURITE_SUCCESS:\n    return state.updateIn([action.status.get('id'), 'favourites_count'], x => Math.max(0, x - 1));\n  case FAVOURITE_FAIL:\n    return state.get(action.status.get('id')) === undefined ? state : state.setIn([action.status.get('id'), 'favourited'], false);\n  case BOOKMARK_REQUEST:\n    return state.get(action.status.get('id')) === undefined ? state : state.setIn([action.status.get('id'), 'bookmarked'], true);\n  case BOOKMARK_FAIL:\n    return state.get(action.status.get('id')) === undefined ? state : state.setIn([action.status.get('id'), 'bookmarked'], false);\n  case REBLOG_REQUEST:\n    return state.setIn([action.status.get('id'), 'reblogged'], true);\n  case REBLOG_FAIL:\n    return state.get(action.status.get('id')) === undefined ? state : state.setIn([action.status.get('id'), 'reblogged'], false);\n  case REACTION_UPDATE:\n    return updateReactionCount(state, action.reaction);\n  case REACTION_ADD_REQUEST:\n  case REACTION_REMOVE_FAIL:\n    return addReaction(state, action.id, action.name, action.url);\n  case REACTION_REMOVE_REQUEST:\n  case REACTION_ADD_FAIL:\n    return removeReaction(state, action.id, action.name);\n  case STATUS_MUTE_SUCCESS:\n    return state.setIn([action.id, 'muted'], true);\n  case STATUS_UNMUTE_SUCCESS:\n    return state.setIn([action.id, 'muted'], false);\n  case STATUS_REVEAL:\n    return state.withMutations(map => {\n      action.ids.forEach(id => {\n        if (!(state.get(id) === undefined)) {\n          map.setIn([id, 'hidden'], false);\n        }\n      });\n    });\n  case STATUS_HIDE:\n    return state.withMutations(map => {\n      action.ids.forEach(id => {\n        if (!(state.get(id) === undefined)) {\n          map.setIn([id, 'hidden'], true);\n        }\n      });\n    });\n  case STATUS_COLLAPSE:\n    return state.setIn([action.id, 'collapsed'], action.isCollapsed);\n  case TIMELINE_DELETE:\n    return deleteStatus(state, action.id, action.references);\n  case STATUS_TRANSLATE_SUCCESS:\n    return state.setIn([action.id, 'translation'], fromJS(action.translation));\n  case STATUS_TRANSLATE_UNDO:\n    return state.deleteIn([action.id, 'translation']);\n  default:\n    return state;\n  }\n}\n","import {\n  NOTIFICATIONS_UPDATE,\n} from '../actions/notifications';\nimport {\n  ACCOUNT_FOLLOW_SUCCESS,\n  ACCOUNT_FOLLOW_REQUEST,\n  ACCOUNT_FOLLOW_FAIL,\n  ACCOUNT_UNFOLLOW_SUCCESS,\n  ACCOUNT_UNFOLLOW_REQUEST,\n  ACCOUNT_UNFOLLOW_FAIL,\n  ACCOUNT_BLOCK_SUCCESS,\n  ACCOUNT_UNBLOCK_SUCCESS,\n  ACCOUNT_MUTE_SUCCESS,\n  ACCOUNT_UNMUTE_SUCCESS,\n  ACCOUNT_PIN_SUCCESS,\n  ACCOUNT_UNPIN_SUCCESS,\n  RELATIONSHIPS_FETCH_SUCCESS,\n  FOLLOW_REQUEST_AUTHORIZE_SUCCESS,\n  FOLLOW_REQUEST_REJECT_SUCCESS,\n} from '../actions/accounts';\nimport {\n  DOMAIN_BLOCK_SUCCESS,\n  DOMAIN_UNBLOCK_SUCCESS,\n} from '../actions/domain_blocks';\nimport {\n  ACCOUNT_NOTE_SUBMIT_SUCCESS,\n} from '../actions/account_notes';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst normalizeRelationship = (state, relationship) => state.set(relationship.id, fromJS(relationship));\n\nconst normalizeRelationships = (state, relationships) => {\n  relationships.forEach(relationship => {\n    state = normalizeRelationship(state, relationship);\n  });\n\n  return state;\n};\n\nconst setDomainBlocking = (state, accounts, blocking) => {\n  return state.withMutations(map => {\n    accounts.forEach(id => {\n      map.setIn([id, 'domain_blocking'], blocking);\n    });\n  });\n};\n\nconst initialState = ImmutableMap();\n\nexport default function relationships(state = initialState, action) {\n  switch(action.type) {\n  case FOLLOW_REQUEST_AUTHORIZE_SUCCESS:\n    return state.setIn([action.id, 'followed_by'], true).setIn([action.id, 'requested_by'], false);\n  case FOLLOW_REQUEST_REJECT_SUCCESS:\n    return state.setIn([action.id, 'followed_by'], false).setIn([action.id, 'requested_by'], false);\n  case NOTIFICATIONS_UPDATE:\n    return action.notification.type === 'follow_request' ? state.setIn([action.notification.account.id, 'requested_by'], true) : state;\n  case ACCOUNT_FOLLOW_REQUEST:\n    return state.getIn([action.id, 'following']) ? state : state.setIn([action.id, action.locked ? 'requested' : 'following'], true);\n  case ACCOUNT_FOLLOW_FAIL:\n    return state.setIn([action.id, action.locked ? 'requested' : 'following'], false);\n  case ACCOUNT_UNFOLLOW_REQUEST:\n    return state.setIn([action.id, 'following'], false);\n  case ACCOUNT_UNFOLLOW_FAIL:\n    return state.setIn([action.id, 'following'], true);\n  case ACCOUNT_FOLLOW_SUCCESS:\n  case ACCOUNT_UNFOLLOW_SUCCESS:\n  case ACCOUNT_BLOCK_SUCCESS:\n  case ACCOUNT_UNBLOCK_SUCCESS:\n  case ACCOUNT_MUTE_SUCCESS:\n  case ACCOUNT_UNMUTE_SUCCESS:\n  case ACCOUNT_PIN_SUCCESS:\n  case ACCOUNT_UNPIN_SUCCESS:\n  case ACCOUNT_NOTE_SUBMIT_SUCCESS:\n    return normalizeRelationship(state, action.relationship);\n  case RELATIONSHIPS_FETCH_SUCCESS:\n    return normalizeRelationships(state, action.relationships);\n  case DOMAIN_BLOCK_SUCCESS:\n    return setDomainBlocking(state, action.accounts, true);\n  case DOMAIN_UNBLOCK_SUCCESS:\n    return setDomainBlocking(state, action.accounts, false);\n  default:\n    return state;\n  }\n}\n","export default function uuid(a) {\n  return a ? (a^Math.random() * 16 >> a / 4).toString(16) : ([1e7]+-1e3+-4e3+-8e3+-1e11).replace(/[018]/g, uuid);\n}\n","import { SETTING_CHANGE, SETTING_SAVE } from '../actions/settings';\nimport { NOTIFICATIONS_FILTER_SET } from '../actions/notifications';\nimport { COLUMN_ADD, COLUMN_REMOVE, COLUMN_MOVE, COLUMN_PARAMS_CHANGE } from '../actions/columns';\nimport { STORE_HYDRATE } from '../actions/store';\nimport { EMOJI_USE } from '../actions/emojis';\nimport { LANGUAGE_USE } from '../actions/languages';\nimport { LIST_DELETE_SUCCESS, LIST_FETCH_FAIL } from '../actions/lists';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\nimport uuid from '../uuid';\n\nconst initialState = ImmutableMap({\n  saved: true,\n\n  skinTone: 1,\n\n  trends: ImmutableMap({\n    show: true,\n  }),\n\n  home: ImmutableMap({\n    shows: ImmutableMap({\n      reblog: true,\n      reply: true,\n    }),\n\n    regex: ImmutableMap({\n      body: '',\n    }),\n  }),\n\n  notifications: ImmutableMap({\n    alerts: ImmutableMap({\n      follow: false,\n      follow_request: false,\n      favourite: false,\n      reaction: false,\n      reblog: false,\n      mention: false,\n      poll: false,\n      status: false,\n      update: false,\n      'admin.sign_up': false,\n      'admin.report': false,\n    }),\n\n    quickFilter: ImmutableMap({\n      active: 'all',\n      show: true,\n      advanced: false,\n    }),\n\n    dismissPermissionBanner: false,\n    showUnread: true,\n\n    shows: ImmutableMap({\n      follow: true,\n      follow_request: false,\n      favourite: true,\n      reblog: true,\n      reaction: true,\n      mention: true,\n      poll: true,\n      status: true,\n      update: true,\n      'admin.sign_up': true,\n      'admin.report': true,\n    }),\n\n    sounds: ImmutableMap({\n      follow: true,\n      follow_request: false,\n      favourite: true,\n      reblog: true,\n      reaction: true,\n      mention: true,\n      poll: true,\n      status: true,\n      update: true,\n      'admin.sign_up': true,\n      'admin.report': true,\n    }),\n  }),\n\n  community: ImmutableMap({\n    regex: ImmutableMap({\n      body: '',\n    }),\n  }),\n\n  public: ImmutableMap({\n    regex: ImmutableMap({\n      body: '',\n    }),\n  }),\n\n  direct: ImmutableMap({\n    regex: ImmutableMap({\n      body: '',\n    }),\n  }),\n});\n\nconst defaultColumns = fromJS([\n  { id: 'COMPOSE', uuid: uuid(), params: {} },\n  { id: 'HOME', uuid: uuid(), params: {} },\n  { id: 'NOTIFICATIONS', uuid: uuid(), params: {} },\n]);\n\nconst hydrate = (state, settings) => state.mergeDeep(settings).update('columns', (val = defaultColumns) => val);\n\nconst moveColumn = (state, uuid, direction) => {\n  const columns  = state.get('columns');\n  const index    = columns.findIndex(item => item.get('uuid') === uuid);\n  const newIndex = index + direction;\n\n  let newColumns;\n\n  newColumns = columns.splice(index, 1);\n  newColumns = newColumns.splice(newIndex, 0, columns.get(index));\n\n  return state\n    .set('columns', newColumns)\n    .set('saved', false);\n};\n\nconst changeColumnParams = (state, uuid, path, value) => {\n  const columns = state.get('columns');\n  const index   = columns.findIndex(item => item.get('uuid') === uuid);\n\n  const newColumns = columns.update(index, column => column.updateIn(['params', ...path], () => value));\n\n  return state\n    .set('columns', newColumns)\n    .set('saved', false);\n};\n\nconst updateFrequentEmojis = (state, emoji) => state.update('frequentlyUsedEmojis', ImmutableMap(), map => map.update(emoji.id, 0, count => count + 1)).set('saved', false);\n\nconst updateFrequentLanguages = (state, language) => state.update('frequentlyUsedLanguages', ImmutableMap(), map => map.update(language, 0, count => count + 1)).set('saved', false);\n\nconst filterDeadListColumns = (state, listId) => state.update('columns', columns => columns.filterNot(column => column.get('id') === 'LIST' && column.get('params').get('id') === listId));\n\nexport default function settings(state = initialState, action) {\n  switch(action.type) {\n  case STORE_HYDRATE:\n    return hydrate(state, action.state.get('settings'));\n  case NOTIFICATIONS_FILTER_SET:\n  case SETTING_CHANGE:\n    return state\n      .setIn(action.path, action.value)\n      .set('saved', false);\n  case COLUMN_ADD:\n    return state\n      .update('columns', list => list.push(fromJS({ id: action.id, uuid: uuid(), params: action.params })))\n      .set('saved', false);\n  case COLUMN_REMOVE:\n    return state\n      .update('columns', list => list.filterNot(item => item.get('uuid') === action.uuid))\n      .set('saved', false);\n  case COLUMN_MOVE:\n    return moveColumn(state, action.uuid, action.direction);\n  case COLUMN_PARAMS_CHANGE:\n    return changeColumnParams(state, action.uuid, action.path, action.value);\n  case EMOJI_USE:\n    return updateFrequentEmojis(state, action.emoji);\n  case LANGUAGE_USE:\n    return updateFrequentLanguages(state, action.language);\n  case SETTING_SAVE:\n    return state.set('saved', true);\n  case LIST_FETCH_FAIL:\n    return action.error.response.status === 404 ? filterDeadListColumns(state, action.id) : state;\n  case LIST_DELETE_SUCCESS:\n    return filterDeadListColumns(state, action.id);\n  default:\n    return state;\n  }\n}\n","import { STORE_HYDRATE } from '../actions/store';\nimport { SET_BROWSER_SUPPORT, SET_SUBSCRIPTION, CLEAR_SUBSCRIPTION, SET_ALERTS } from '../actions/push_notifications';\nimport Immutable from 'immutable';\n\nconst initialState = Immutable.Map({\n  subscription: null,\n  alerts: new Immutable.Map({\n    follow: false,\n    follow_request: false,\n    favourite: false,\n    reblog: false,\n    mention: false,\n    poll: false,\n  }),\n  isSubscribed: false,\n  browserSupport: false,\n});\n\nexport default function push_subscriptions(state = initialState, action) {\n  switch(action.type) {\n  case STORE_HYDRATE: {\n    const push_subscription = action.state.get('push_subscription');\n\n    if (push_subscription) {\n      return state\n        .set('subscription', new Immutable.Map({\n          id: push_subscription.get('id'),\n          endpoint: push_subscription.get('endpoint'),\n        }))\n        .set('alerts', push_subscription.get('alerts') || initialState.get('alerts'))\n        .set('isSubscribed', true);\n    }\n\n    return state;\n  }\n  case SET_SUBSCRIPTION:\n    return state\n      .set('subscription', new Immutable.Map({\n        id: action.subscription.id,\n        endpoint: action.subscription.endpoint,\n      }))\n      .set('alerts', new Immutable.Map(action.subscription.alerts))\n      .set('isSubscribed', true);\n  case SET_BROWSER_SUPPORT:\n    return state.set('browserSupport', action.value);\n  case CLEAR_SUBSCRIPTION:\n    return initialState;\n  case SET_ALERTS:\n    return state.setIn(action.path, action.value);\n  default:\n    return state;\n  }\n}\n","import {\n  FAVOURITED_STATUSES_FETCH_REQUEST,\n  FAVOURITED_STATUSES_FETCH_SUCCESS,\n  FAVOURITED_STATUSES_FETCH_FAIL,\n  FAVOURITED_STATUSES_EXPAND_REQUEST,\n  FAVOURITED_STATUSES_EXPAND_SUCCESS,\n  FAVOURITED_STATUSES_EXPAND_FAIL,\n} from '../actions/favourites';\nimport {\n  BOOKMARKED_STATUSES_FETCH_REQUEST,\n  BOOKMARKED_STATUSES_FETCH_SUCCESS,\n  BOOKMARKED_STATUSES_FETCH_FAIL,\n  BOOKMARKED_STATUSES_EXPAND_REQUEST,\n  BOOKMARKED_STATUSES_EXPAND_SUCCESS,\n  BOOKMARKED_STATUSES_EXPAND_FAIL,\n} from '../actions/bookmarks';\nimport {\n  PINNED_STATUSES_FETCH_SUCCESS,\n} from '../actions/pin_statuses';\nimport {\n  TRENDS_STATUSES_FETCH_REQUEST,\n  TRENDS_STATUSES_FETCH_SUCCESS,\n  TRENDS_STATUSES_FETCH_FAIL,\n  TRENDS_STATUSES_EXPAND_REQUEST,\n  TRENDS_STATUSES_EXPAND_SUCCESS,\n  TRENDS_STATUSES_EXPAND_FAIL,\n} from '../actions/trends';\nimport { Map as ImmutableMap, OrderedSet as ImmutableOrderedSet } from 'immutable';\nimport {\n  FAVOURITE_SUCCESS,\n  UNFAVOURITE_SUCCESS,\n  BOOKMARK_SUCCESS,\n  UNBOOKMARK_SUCCESS,\n  PIN_SUCCESS,\n  UNPIN_SUCCESS,\n} from '../actions/interactions';\nimport {\n  ACCOUNT_BLOCK_SUCCESS,\n  ACCOUNT_MUTE_SUCCESS,\n} from '../actions/accounts';\n\nconst initialState = ImmutableMap({\n  favourites: ImmutableMap({\n    next: null,\n    loaded: false,\n    items: ImmutableOrderedSet(),\n  }),\n  bookmarks: ImmutableMap({\n    next: null,\n    loaded: false,\n    items: ImmutableOrderedSet(),\n  }),\n  pins: ImmutableMap({\n    next: null,\n    loaded: false,\n    items: ImmutableOrderedSet(),\n  }),\n  trending: ImmutableMap({\n    next: null,\n    loaded: false,\n    items: ImmutableOrderedSet(),\n  }),\n});\n\nconst normalizeList = (state, listType, statuses, next) => {\n  return state.update(listType, listMap => listMap.withMutations(map => {\n    map.set('next', next);\n    map.set('loaded', true);\n    map.set('isLoading', false);\n    map.set('items', ImmutableOrderedSet(statuses.map(item => item.id)));\n  }));\n};\n\nconst appendToList = (state, listType, statuses, next) => {\n  return state.update(listType, listMap => listMap.withMutations(map => {\n    map.set('next', next);\n    map.set('isLoading', false);\n    map.set('items', map.get('items').union(statuses.map(item => item.id)));\n  }));\n};\n\nconst prependOneToList = (state, listType, status) => {\n  return state.updateIn([listType, 'items'], (list) => {\n    if (list.includes(status.get('id'))) {\n      return list;\n    } else {\n      return ImmutableOrderedSet([status.get('id')]).union(list);\n    }\n  });\n};\n\nconst removeOneFromList = (state, listType, status) => {\n  return state.updateIn([listType, 'items'], (list) => list.delete(status.get('id')));\n};\n\nexport default function statusLists(state = initialState, action) {\n  switch(action.type) {\n  case FAVOURITED_STATUSES_FETCH_REQUEST:\n  case FAVOURITED_STATUSES_EXPAND_REQUEST:\n    return state.setIn(['favourites', 'isLoading'], true);\n  case FAVOURITED_STATUSES_FETCH_FAIL:\n  case FAVOURITED_STATUSES_EXPAND_FAIL:\n    return state.setIn(['favourites', 'isLoading'], false);\n  case FAVOURITED_STATUSES_FETCH_SUCCESS:\n    return normalizeList(state, 'favourites', action.statuses, action.next);\n  case FAVOURITED_STATUSES_EXPAND_SUCCESS:\n    return appendToList(state, 'favourites', action.statuses, action.next);\n  case BOOKMARKED_STATUSES_FETCH_REQUEST:\n  case BOOKMARKED_STATUSES_EXPAND_REQUEST:\n    return state.setIn(['bookmarks', 'isLoading'], true);\n  case BOOKMARKED_STATUSES_FETCH_FAIL:\n  case BOOKMARKED_STATUSES_EXPAND_FAIL:\n    return state.setIn(['bookmarks', 'isLoading'], false);\n  case BOOKMARKED_STATUSES_FETCH_SUCCESS:\n    return normalizeList(state, 'bookmarks', action.statuses, action.next);\n  case BOOKMARKED_STATUSES_EXPAND_SUCCESS:\n    return appendToList(state, 'bookmarks', action.statuses, action.next);\n  case TRENDS_STATUSES_FETCH_REQUEST:\n  case TRENDS_STATUSES_EXPAND_REQUEST:\n    return state.setIn(['trending', 'isLoading'], true);\n  case TRENDS_STATUSES_FETCH_FAIL:\n  case TRENDS_STATUSES_EXPAND_FAIL:\n    return state.setIn(['trending', 'isLoading'], false);\n  case TRENDS_STATUSES_FETCH_SUCCESS:\n    return normalizeList(state, 'trending', action.statuses, action.next);\n  case TRENDS_STATUSES_EXPAND_SUCCESS:\n    return appendToList(state, 'trending', action.statuses, action.next);\n  case FAVOURITE_SUCCESS:\n    return prependOneToList(state, 'favourites', action.status);\n  case UNFAVOURITE_SUCCESS:\n    return removeOneFromList(state, 'favourites', action.status);\n  case BOOKMARK_SUCCESS:\n    return prependOneToList(state, 'bookmarks', action.status);\n  case UNBOOKMARK_SUCCESS:\n    return removeOneFromList(state, 'bookmarks', action.status);\n  case PINNED_STATUSES_FETCH_SUCCESS:\n    return normalizeList(state, 'pins', action.statuses, action.next);\n  case PIN_SUCCESS:\n    return prependOneToList(state, 'pins', action.status);\n  case UNPIN_SUCCESS:\n    return removeOneFromList(state, 'pins', action.status);\n  case ACCOUNT_BLOCK_SUCCESS:\n  case ACCOUNT_MUTE_SUCCESS:\n    return state.updateIn(['trending', 'items'], ImmutableOrderedSet(), list => list.filterNot(statusId => action.statuses.getIn([statusId, 'account']) === action.relationship.id));\n  default:\n    return state;\n  }\n}\n","import Immutable from 'immutable';\n\nimport {\n  MUTES_INIT_MODAL,\n  MUTES_TOGGLE_HIDE_NOTIFICATIONS,\n  MUTES_CHANGE_DURATION,\n} from '../actions/mutes';\n\nconst initialState = Immutable.Map({\n  new: Immutable.Map({\n    account: null,\n    notifications: true,\n    duration: 0,\n  }),\n});\n\nexport default function mutes(state = initialState, action) {\n  switch (action.type) {\n  case MUTES_INIT_MODAL:\n    return state.withMutations((state) => {\n      state.setIn(['new', 'account'], action.account);\n      state.setIn(['new', 'notifications'], true);\n    });\n  case MUTES_TOGGLE_HIDE_NOTIFICATIONS:\n    return state.updateIn(['new', 'notifications'], (old) => !old);\n  case MUTES_CHANGE_DURATION:\n    return state.setIn(['new', 'duration'], Number(action.duration));\n  default:\n    return state;\n  }\n}\n","import Immutable from 'immutable';\n\nimport {\n  BLOCKS_INIT_MODAL,\n} from '../actions/blocks';\n\nconst initialState = Immutable.Map({\n  new: Immutable.Map({\n    account_id: null,\n  }),\n});\n\nexport default function mutes(state = initialState, action) {\n  switch (action.type) {\n  case BLOCKS_INIT_MODAL:\n    return state.withMutations((state) => {\n      state.setIn(['new', 'account_id'], action.account.get('id'));\n    });\n  default:\n    return state;\n  }\n}\n","import Immutable from 'immutable';\n\nimport {\n  BOOSTS_INIT_MODAL,\n  BOOSTS_CHANGE_PRIVACY,\n} from 'mastodon/actions/boosts';\n\nconst initialState = Immutable.Map({\n  new: Immutable.Map({\n    privacy: 'public',\n  }),\n});\n\nexport default function mutes(state = initialState, action) {\n  switch (action.type) {\n  case BOOSTS_INIT_MODAL:\n    return state.withMutations((state) => {\n      state.setIn(['new', 'privacy'], action.privacy);\n    });\n  case BOOSTS_CHANGE_PRIVACY:\n    return state.setIn(['new', 'privacy'], action.privacy);\n  default:\n    return state;\n  }\n}\n","import {\n  SERVER_FETCH_REQUEST,\n  SERVER_FETCH_SUCCESS,\n  SERVER_FETCH_FAIL,\n  EXTENDED_DESCRIPTION_REQUEST,\n  EXTENDED_DESCRIPTION_SUCCESS,\n  EXTENDED_DESCRIPTION_FAIL,\n  SERVER_DOMAIN_BLOCKS_FETCH_REQUEST,\n  SERVER_DOMAIN_BLOCKS_FETCH_SUCCESS,\n  SERVER_DOMAIN_BLOCKS_FETCH_FAIL,\n} from 'mastodon/actions/server';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap({\n  server: ImmutableMap({\n    isLoading: true,\n  }),\n\n  extendedDescription: ImmutableMap({\n    isLoading: true,\n  }),\n\n  domainBlocks: ImmutableMap({\n    isLoading: true,\n    isAvailable: true,\n    items: ImmutableList(),\n  }),\n});\n\nexport default function server(state = initialState, action) {\n  switch (action.type) {\n  case SERVER_FETCH_REQUEST:\n    return state.setIn(['server', 'isLoading'], true);\n  case SERVER_FETCH_SUCCESS:\n    return state.set('server', fromJS(action.server)).setIn(['server', 'isLoading'], false);\n  case SERVER_FETCH_FAIL:\n    return state.setIn(['server', 'isLoading'], false);\n  case EXTENDED_DESCRIPTION_REQUEST:\n    return state.setIn(['extendedDescription', 'isLoading'], true);\n  case EXTENDED_DESCRIPTION_SUCCESS:\n    return state.set('extendedDescription', fromJS(action.description)).setIn(['extendedDescription', 'isLoading'], false);\n  case EXTENDED_DESCRIPTION_FAIL:\n    return state.setIn(['extendedDescription', 'isLoading'], false);\n  case SERVER_DOMAIN_BLOCKS_FETCH_REQUEST:\n    return state.setIn(['domainBlocks', 'isLoading'], true);\n  case SERVER_DOMAIN_BLOCKS_FETCH_SUCCESS:\n    return state.setIn(['domainBlocks', 'items'], fromJS(action.blocks)).setIn(['domainBlocks', 'isLoading'], false).setIn(['domainBlocks', 'isAvailable'], action.isAvailable);\n  case SERVER_DOMAIN_BLOCKS_FETCH_FAIL:\n    return state.setIn(['domainBlocks', 'isLoading'], false);\n  default:\n    return state;\n  }\n}\n","import {\n  ACCOUNT_BLOCK_SUCCESS,\n  ACCOUNT_MUTE_SUCCESS,\n} from '../actions/accounts';\nimport { CONTEXT_FETCH_SUCCESS } from '../actions/statuses';\nimport { TIMELINE_DELETE, TIMELINE_UPDATE } from '../actions/timelines';\nimport { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport compareId from '../compare_id';\n\nconst initialState = ImmutableMap({\n  inReplyTos: ImmutableMap(),\n  replies: ImmutableMap(),\n});\n\nconst normalizeContext = (immutableState, id, ancestors, descendants) => immutableState.withMutations(state => {\n  state.update('inReplyTos', immutableAncestors => immutableAncestors.withMutations(inReplyTos => {\n    state.update('replies', immutableDescendants => immutableDescendants.withMutations(replies => {\n      function addReply({ id, in_reply_to_id }) {\n        if (in_reply_to_id && !inReplyTos.has(id)) {\n\n          replies.update(in_reply_to_id, ImmutableList(), siblings => {\n            const index = siblings.findLastIndex(sibling => compareId(sibling, id) < 0);\n            return siblings.insert(index + 1, id);\n          });\n\n          inReplyTos.set(id, in_reply_to_id);\n        }\n      }\n\n      // We know in_reply_to_id of statuses but `id` itself.\n      // So we assume that the status of the id replies to last ancestors.\n\n      ancestors.forEach(addReply);\n\n      if (ancestors[0]) {\n        addReply({ id, in_reply_to_id: ancestors[ancestors.length - 1].id });\n      }\n\n      descendants.forEach(addReply);\n    }));\n  }));\n});\n\nconst deleteFromContexts = (immutableState, ids) => immutableState.withMutations(state => {\n  state.update('inReplyTos', immutableAncestors => immutableAncestors.withMutations(inReplyTos => {\n    state.update('replies', immutableDescendants => immutableDescendants.withMutations(replies => {\n      ids.forEach(id => {\n        const inReplyToIdOfId = inReplyTos.get(id);\n        const repliesOfId = replies.get(id);\n        const siblings = replies.get(inReplyToIdOfId);\n\n        if (siblings) {\n          replies.set(inReplyToIdOfId, siblings.filterNot(sibling => sibling === id));\n        }\n\n\n        if (repliesOfId) {\n          repliesOfId.forEach(reply => inReplyTos.delete(reply));\n        }\n\n        inReplyTos.delete(id);\n        replies.delete(id);\n      });\n    }));\n  }));\n});\n\nconst filterContexts = (state, relationship, statuses) => {\n  const ownedStatusIds = statuses\n    .filter(status => status.get('account') === relationship.id)\n    .map(status => status.get('id'));\n\n  return deleteFromContexts(state, ownedStatusIds);\n};\n\nconst updateContext = (state, status) => {\n  if (status.in_reply_to_id) {\n    return state.withMutations(mutable => {\n      const replies = mutable.getIn(['replies', status.in_reply_to_id], ImmutableList());\n\n      mutable.setIn(['inReplyTos', status.id], status.in_reply_to_id);\n\n      if (!replies.includes(status.id)) {\n        mutable.setIn(['replies', status.in_reply_to_id], replies.push(status.id));\n      }\n    });\n  }\n\n  return state;\n};\n\nexport default function replies(state = initialState, action) {\n  switch(action.type) {\n  case ACCOUNT_BLOCK_SUCCESS:\n  case ACCOUNT_MUTE_SUCCESS:\n    return filterContexts(state, action.relationship, action.statuses);\n  case CONTEXT_FETCH_SUCCESS:\n    return normalizeContext(state, action.id, action.ancestors, action.descendants);\n  case TIMELINE_DELETE:\n    return deleteFromContexts(state, [action.id]);\n  case TIMELINE_UPDATE:\n    return updateContext(state, action.status);\n  default:\n    return state;\n  }\n}\n","import {\n  COMPOSE_MOUNT,\n  COMPOSE_UNMOUNT,\n  COMPOSE_CHANGE,\n  COMPOSE_REPLY,\n  COMPOSE_REPLY_CANCEL,\n  COMPOSE_DIRECT,\n  COMPOSE_MENTION,\n  COMPOSE_SUBMIT_REQUEST,\n  COMPOSE_SUBMIT_SUCCESS,\n  COMPOSE_SUBMIT_FAIL,\n  COMPOSE_UPLOAD_REQUEST,\n  COMPOSE_UPLOAD_SUCCESS,\n  COMPOSE_UPLOAD_FAIL,\n  COMPOSE_UPLOAD_UNDO,\n  COMPOSE_UPLOAD_PROGRESS,\n  COMPOSE_UPLOAD_PROCESSING,\n  THUMBNAIL_UPLOAD_REQUEST,\n  THUMBNAIL_UPLOAD_SUCCESS,\n  THUMBNAIL_UPLOAD_FAIL,\n  THUMBNAIL_UPLOAD_PROGRESS,\n  COMPOSE_SUGGESTIONS_CLEAR,\n  COMPOSE_SUGGESTIONS_READY,\n  COMPOSE_SUGGESTION_SELECT,\n  COMPOSE_SUGGESTION_IGNORE,\n  COMPOSE_SUGGESTION_TAGS_UPDATE,\n  COMPOSE_TAG_HISTORY_UPDATE,\n  COMPOSE_SENSITIVITY_CHANGE,\n  COMPOSE_SPOILERNESS_CHANGE,\n  COMPOSE_SPOILER_TEXT_CHANGE,\n  COMPOSE_VISIBILITY_CHANGE,\n  COMPOSE_LANGUAGE_CHANGE,\n  COMPOSE_COMPOSING_CHANGE,\n  COMPOSE_EMOJI_INSERT,\n  COMPOSE_UPLOAD_CHANGE_REQUEST,\n  COMPOSE_UPLOAD_CHANGE_SUCCESS,\n  COMPOSE_UPLOAD_CHANGE_FAIL,\n  COMPOSE_RESET,\n  COMPOSE_POLL_ADD,\n  COMPOSE_POLL_REMOVE,\n  COMPOSE_POLL_OPTION_ADD,\n  COMPOSE_POLL_OPTION_CHANGE,\n  COMPOSE_POLL_OPTION_REMOVE,\n  COMPOSE_POLL_SETTINGS_CHANGE,\n  INIT_MEDIA_EDIT_MODAL,\n  COMPOSE_CHANGE_MEDIA_DESCRIPTION,\n  COMPOSE_CHANGE_MEDIA_FOCUS,\n  COMPOSE_SET_STATUS,\n} from '../actions/compose';\nimport { TIMELINE_DELETE } from '../actions/timelines';\nimport { STORE_HYDRATE } from '../actions/store';\nimport { REDRAFT } from '../actions/statuses';\nimport { Map as ImmutableMap, List as ImmutableList, OrderedSet as ImmutableOrderedSet, fromJS } from 'immutable';\nimport uuid from '../uuid';\nimport { me } from '../initial_state';\nimport { unescapeHTML } from '../utils/html';\n\nconst initialState = ImmutableMap({\n  mounted: 0,\n  sensitive: false,\n  spoiler: false,\n  spoiler_text: '',\n  privacy: null,\n  id: null,\n  text: '',\n  focusDate: null,\n  caretPosition: null,\n  preselectDate: null,\n  in_reply_to: null,\n  is_composing: false,\n  is_submitting: false,\n  is_changing_upload: false,\n  is_uploading: false,\n  progress: 0,\n  isUploadingThumbnail: false,\n  thumbnailProgress: 0,\n  media_attachments: ImmutableList(),\n  pending_media_attachments: 0,\n  poll: null,\n  suggestion_token: null,\n  suggestions: ImmutableList(),\n  default_privacy: 'public',\n  default_sensitive: false,\n  default_language: 'en',\n  resetFileKey: Math.floor((Math.random() * 0x10000)),\n  idempotencyKey: null,\n  tagHistory: ImmutableList(),\n  media_modal: ImmutableMap({\n    id: null,\n    description: '',\n    focusX: 0,\n    focusY: 0,\n    dirty: false,\n  }),\n});\n\nconst initialPoll = ImmutableMap({\n  options: ImmutableList(['', '']),\n  expires_in: 24 * 3600,\n  multiple: false,\n});\n\nfunction statusToTextMentions(state, status) {\n  let set = ImmutableOrderedSet([]);\n\n  if (status.getIn(['account', 'id']) !== me) {\n    set = set.add(`@${status.getIn(['account', 'acct'])} `);\n  }\n\n  return set.union(status.get('mentions').filterNot(mention => mention.get('id') === me).map(mention => `@${mention.get('acct')} `)).join('');\n}\n\nfunction clearAll(state) {\n  return state.withMutations(map => {\n    map.set('id', null);\n    map.set('text', '');\n    map.set('spoiler', false);\n    map.set('spoiler_text', '');\n    map.set('is_submitting', false);\n    map.set('is_changing_upload', false);\n    map.set('in_reply_to', null);\n    map.set('privacy', state.get('default_privacy'));\n    map.set('sensitive', state.get('default_sensitive'));\n    map.set('language', state.get('default_language'));\n    map.update('media_attachments', list => list.clear());\n    map.set('poll', null);\n    map.set('idempotencyKey', uuid());\n  });\n}\n\nfunction appendMedia(state, media, file) {\n  const prevSize = state.get('media_attachments').size;\n\n  return state.withMutations(map => {\n    if (media.get('type') === 'image') {\n      media = media.set('file', file);\n    }\n    map.update('media_attachments', list => list.push(media.set('unattached', true)));\n    map.set('is_uploading', false);\n    map.set('is_processing', false);\n    map.set('resetFileKey', Math.floor((Math.random() * 0x10000)));\n    map.set('idempotencyKey', uuid());\n    map.update('pending_media_attachments', n => n - 1);\n\n    if (prevSize === 0 && (state.get('default_sensitive') || state.get('spoiler'))) {\n      map.set('sensitive', true);\n    }\n  });\n}\n\nfunction removeMedia(state, mediaId) {\n  const prevSize = state.get('media_attachments').size;\n\n  return state.withMutations(map => {\n    map.update('media_attachments', list => list.filterNot(item => item.get('id') === mediaId));\n    map.set('idempotencyKey', uuid());\n\n    if (prevSize === 1) {\n      map.set('sensitive', false);\n    }\n  });\n}\n\nconst insertSuggestion = (state, position, token, completion, path) => {\n  return state.withMutations(map => {\n    map.updateIn(path, oldText => `${oldText.slice(0, position)}${completion} ${oldText.slice(position + token.length)}`);\n    map.set('suggestion_token', null);\n    map.set('suggestions', ImmutableList());\n    if (path.length === 1 && path[0] === 'text') {\n      map.set('focusDate', new Date());\n      map.set('caretPosition', position + completion.length + 1);\n    }\n    map.set('idempotencyKey', uuid());\n  });\n};\n\nconst ignoreSuggestion = (state, position, token, completion, path) => {\n  return state.withMutations(map => {\n    map.updateIn(path, oldText => `${oldText.slice(0, position + token.length)} ${oldText.slice(position + token.length)}`);\n    map.set('suggestion_token', null);\n    map.set('suggestions', ImmutableList());\n    map.set('focusDate', new Date());\n    map.set('caretPosition', position + token.length + 1);\n    map.set('idempotencyKey', uuid());\n  });\n};\n\nconst sortHashtagsByUse = (state, tags) => {\n  const personalHistory = state.get('tagHistory').map(tag => tag.toLowerCase());\n\n  const tagsWithLowercase = tags.map(t => ({ ...t, lowerName: t.name.toLowerCase() }));\n  const sorted = tagsWithLowercase.sort((a, b) => {\n    const usedA = personalHistory.includes(a.lowerName);\n    const usedB = personalHistory.includes(b.lowerName);\n\n    if (usedA === usedB) {\n      return 0;\n    } else if (usedA && !usedB) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  sorted.forEach(tag => delete tag.lowerName);\n  return sorted;\n};\n\nconst insertEmoji = (state, position, emojiData, needsSpace) => {\n  const oldText = state.get('text');\n  const emoji = needsSpace ? ' ' + emojiData.native : emojiData.native;\n\n  return state.merge({\n    text: `${oldText.slice(0, position)}${emoji} ${oldText.slice(position)}`,\n    focusDate: new Date(),\n    caretPosition: position + emoji.length + 1,\n    idempotencyKey: uuid(),\n  });\n};\n\nconst privacyPreference = (a, b) => {\n  const order = ['public', 'unlisted', 'private', 'direct'];\n  return order[Math.max(order.indexOf(a), order.indexOf(b), 0)];\n};\n\nconst hydrate = (state, hydratedState) => {\n  state = clearAll(state.merge(hydratedState));\n\n  if (hydratedState.get('text')) {\n    state = state.set('text', hydratedState.get('text')).set('focusDate', new Date());\n  }\n\n  return state;\n};\n\nconst domParser = new DOMParser();\n\nconst expandMentions = status => {\n  const fragment = domParser.parseFromString(status.get('content'), 'text/html').documentElement;\n\n  status.get('mentions').forEach(mention => {\n    fragment.querySelector(`a[href=\"${mention.get('url')}\"]`).textContent = `@${mention.get('acct')}`;\n  });\n\n  return fragment.innerHTML;\n};\n\nconst expiresInFromExpiresAt = expires_at => {\n  if (!expires_at) return 24 * 3600;\n  const delta = (new Date(expires_at).getTime() - Date.now()) / 1000;\n  return [300, 1800, 3600, 21600, 86400, 259200, 604800].find(expires_in => expires_in >= delta) || 24 * 3600;\n};\n\nconst mergeLocalHashtagResults = (suggestions, prefix, tagHistory) => {\n  prefix = prefix.toLowerCase();\n  if (suggestions.length < 4) {\n    const localTags = tagHistory.filter(tag => tag.toLowerCase().startsWith(prefix) && !suggestions.some(suggestion => suggestion.type === 'hashtag' && suggestion.name.toLowerCase() === tag.toLowerCase()));\n    return suggestions.concat(localTags.slice(0, 4 - suggestions.length).toJS().map(tag => ({ type: 'hashtag', name: tag })));\n  } else {\n    return suggestions;\n  }\n};\n\nconst normalizeSuggestions = (state, { accounts, emojis, tags, token }) => {\n  if (accounts) {\n    return accounts.map(item => ({ id: item.id, type: 'account' }));\n  } else if (emojis) {\n    return emojis.map(item => ({ ...item, type: 'emoji' }));\n  } else {\n    return mergeLocalHashtagResults(sortHashtagsByUse(state, tags.map(item => ({ ...item, type: 'hashtag' }))), token.slice(1), state.get('tagHistory'));\n  }\n};\n\nconst updateSuggestionTags = (state, token) => {\n  const prefix = token.slice(1);\n\n  const suggestions = state.get('suggestions').toJS();\n  return state.merge({\n    suggestions: ImmutableList(mergeLocalHashtagResults(suggestions, prefix, state.get('tagHistory'))),\n    suggestion_token: token,\n  });\n};\n\nexport default function compose(state = initialState, action) {\n  switch(action.type) {\n  case STORE_HYDRATE:\n    return hydrate(state, action.state.get('compose'));\n  case COMPOSE_MOUNT:\n    return state.set('mounted', state.get('mounted') + 1);\n  case COMPOSE_UNMOUNT:\n    return state\n      .set('mounted', Math.max(state.get('mounted') - 1, 0))\n      .set('is_composing', false);\n  case COMPOSE_SENSITIVITY_CHANGE:\n    return state.withMutations(map => {\n      if (!state.get('spoiler')) {\n        map.set('sensitive', !state.get('sensitive'));\n      }\n\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_SPOILERNESS_CHANGE:\n    return state.withMutations(map => {\n      map.set('spoiler', !state.get('spoiler'));\n      map.set('idempotencyKey', uuid());\n\n      if (!state.get('sensitive') && state.get('media_attachments').size >= 1) {\n        map.set('sensitive', true);\n      }\n    });\n  case COMPOSE_SPOILER_TEXT_CHANGE:\n    if (!state.get('spoiler')) return state;\n    return state\n      .set('spoiler_text', action.text)\n      .set('idempotencyKey', uuid());\n  case COMPOSE_VISIBILITY_CHANGE:\n    return state\n      .set('privacy', action.value)\n      .set('idempotencyKey', uuid());\n  case COMPOSE_CHANGE:\n    return state\n      .set('text', action.text)\n      .set('idempotencyKey', uuid());\n  case COMPOSE_COMPOSING_CHANGE:\n    return state.set('is_composing', action.value);\n  case COMPOSE_REPLY:\n    return state.withMutations(map => {\n      map.set('id', null);\n      map.set('in_reply_to', action.status.get('id'));\n      map.set('text', statusToTextMentions(state, action.status));\n      map.set('privacy', privacyPreference(action.status.get('visibility'), state.get('default_privacy')));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('preselectDate', new Date());\n      map.set('idempotencyKey', uuid());\n\n      map.update('media_attachments', list => list.filter(media => media.get('unattached')));\n\n      if (action.status.get('language') && !action.status.has('translation')) {\n        map.set('language', action.status.get('language'));\n      } else {\n        map.set('language', state.get('default_language'));\n      }\n\n      if (action.status.get('spoiler_text').length > 0) {\n        map.set('spoiler', true);\n        map.set('spoiler_text', action.status.get('spoiler_text'));\n\n        if (map.get('media_attachments').size >= 1) {\n          map.set('sensitive', true);\n        }\n      } else {\n        map.set('spoiler', false);\n        map.set('spoiler_text', '');\n      }\n    });\n  case COMPOSE_SUBMIT_REQUEST:\n    return state.set('is_submitting', true);\n  case COMPOSE_UPLOAD_CHANGE_REQUEST:\n    return state.set('is_changing_upload', true);\n  case COMPOSE_REPLY_CANCEL:\n  case COMPOSE_RESET:\n  case COMPOSE_SUBMIT_SUCCESS:\n    return clearAll(state);\n  case COMPOSE_SUBMIT_FAIL:\n    return state.set('is_submitting', false);\n  case COMPOSE_UPLOAD_CHANGE_FAIL:\n    return state.set('is_changing_upload', false);\n  case COMPOSE_UPLOAD_REQUEST:\n    return state.set('is_uploading', true).update('pending_media_attachments', n => n + 1);\n  case COMPOSE_UPLOAD_PROCESSING:\n    return state.set('is_processing', true);\n  case COMPOSE_UPLOAD_SUCCESS:\n    return appendMedia(state, fromJS(action.media), action.file);\n  case COMPOSE_UPLOAD_FAIL:\n    return state.set('is_uploading', false).set('is_processing', false).update('pending_media_attachments', n => n - 1);\n  case COMPOSE_UPLOAD_UNDO:\n    return removeMedia(state, action.media_id);\n  case COMPOSE_UPLOAD_PROGRESS:\n    return state.set('progress', Math.round((action.loaded / action.total) * 100));\n  case THUMBNAIL_UPLOAD_REQUEST:\n    return state.set('isUploadingThumbnail', true);\n  case THUMBNAIL_UPLOAD_PROGRESS:\n    return state.set('thumbnailProgress', Math.round((action.loaded / action.total) * 100));\n  case THUMBNAIL_UPLOAD_FAIL:\n    return state.set('isUploadingThumbnail', false);\n  case THUMBNAIL_UPLOAD_SUCCESS:\n    return state\n      .set('isUploadingThumbnail', false)\n      .update('media_attachments', list => list.map(item => {\n        if (item.get('id') === action.media.id) {\n          return fromJS(action.media);\n        }\n\n        return item;\n      }));\n  case INIT_MEDIA_EDIT_MODAL:\n    const media =  state.get('media_attachments').find(item => item.get('id') === action.id);\n    return state.set('media_modal', ImmutableMap({\n      id: action.id,\n      description: media.get('description') || '',\n      focusX: media.getIn(['meta', 'focus', 'x'], 0),\n      focusY: media.getIn(['meta', 'focus', 'y'], 0),\n      dirty: false,\n    }));\n  case COMPOSE_CHANGE_MEDIA_DESCRIPTION:\n    return state.setIn(['media_modal', 'description'], action.description).setIn(['media_modal', 'dirty'], true);\n  case COMPOSE_CHANGE_MEDIA_FOCUS:\n    return state.setIn(['media_modal', 'focusX'], action.focusX).setIn(['media_modal', 'focusY'], action.focusY).setIn(['media_modal', 'dirty'], true);\n  case COMPOSE_MENTION:\n    return state.withMutations(map => {\n      map.update('text', text => [text.trim(), `@${action.account.get('acct')} `].filter((str) => str.length !== 0).join(' '));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_DIRECT:\n    return state.withMutations(map => {\n      map.update('text', text => [text.trim(), `@${action.account.get('acct')} `].filter((str) => str.length !== 0).join(' '));\n      map.set('privacy', 'direct');\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n    });\n  case COMPOSE_SUGGESTIONS_CLEAR:\n    return state.update('suggestions', ImmutableList(), list => list.clear()).set('suggestion_token', null);\n  case COMPOSE_SUGGESTIONS_READY:\n    return state.set('suggestions', ImmutableList(normalizeSuggestions(state, action))).set('suggestion_token', action.token);\n  case COMPOSE_SUGGESTION_SELECT:\n    return insertSuggestion(state, action.position, action.token, action.completion, action.path);\n  case COMPOSE_SUGGESTION_IGNORE:\n    return ignoreSuggestion(state, action.position, action.token, action.completion, action.path);\n  case COMPOSE_SUGGESTION_TAGS_UPDATE:\n    return updateSuggestionTags(state, action.token);\n  case COMPOSE_TAG_HISTORY_UPDATE:\n    return state.set('tagHistory', fromJS(action.tags));\n  case TIMELINE_DELETE:\n    if (action.id === state.get('in_reply_to')) {\n      return state.set('in_reply_to', null);\n    } else if (action.id === state.get('id')) {\n      return state.set('id', null);\n    } else {\n      return state;\n    }\n  case COMPOSE_EMOJI_INSERT:\n    return insertEmoji(state, action.position, action.emoji, action.needsSpace);\n  case COMPOSE_UPLOAD_CHANGE_SUCCESS:\n    return state\n      .set('is_changing_upload', false)\n      .setIn(['media_modal', 'dirty'], false)\n      .update('media_attachments', list => list.map(item => {\n        if (item.get('id') === action.media.id) {\n          return fromJS(action.media).set('unattached', !action.attached);\n        }\n\n        return item;\n      }));\n  case REDRAFT:\n    return state.withMutations(map => {\n      map.set('text', action.raw_text || unescapeHTML(expandMentions(action.status)));\n      map.set('in_reply_to', action.status.get('in_reply_to_id'));\n      map.set('privacy', action.status.get('visibility'));\n      map.set('media_attachments', action.status.get('media_attachments').map((media) => media.set('unattached', true)));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n      map.set('sensitive', action.status.get('sensitive'));\n      map.set('language', action.status.get('language'));\n      map.set('id', null);\n\n      if (action.status.get('spoiler_text').length > 0) {\n        map.set('spoiler', true);\n        map.set('spoiler_text', action.status.get('spoiler_text'));\n      } else {\n        map.set('spoiler', false);\n        map.set('spoiler_text', '');\n      }\n\n      if (action.status.get('poll')) {\n        map.set('poll', ImmutableMap({\n          options: action.status.getIn(['poll', 'options']).map(x => x.get('title')),\n          multiple: action.status.getIn(['poll', 'multiple']),\n          expires_in: expiresInFromExpiresAt(action.status.getIn(['poll', 'expires_at'])),\n        }));\n      }\n    });\n  case COMPOSE_SET_STATUS:\n    return state.withMutations(map => {\n      map.set('id', action.status.get('id'));\n      map.set('text', action.text);\n      map.set('in_reply_to', action.status.get('in_reply_to_id'));\n      map.set('privacy', action.status.get('visibility'));\n      map.set('media_attachments', action.status.get('media_attachments'));\n      map.set('focusDate', new Date());\n      map.set('caretPosition', null);\n      map.set('idempotencyKey', uuid());\n      map.set('sensitive', action.status.get('sensitive'));\n      map.set('language', action.status.get('language'));\n\n      if (action.spoiler_text.length > 0) {\n        map.set('spoiler', true);\n        map.set('spoiler_text', action.spoiler_text);\n      } else {\n        map.set('spoiler', false);\n        map.set('spoiler_text', '');\n      }\n\n      if (action.status.get('poll')) {\n        map.set('poll', ImmutableMap({\n          options: action.status.getIn(['poll', 'options']).map(x => x.get('title')),\n          multiple: action.status.getIn(['poll', 'multiple']),\n          expires_in: expiresInFromExpiresAt(action.status.getIn(['poll', 'expires_at'])),\n        }));\n      }\n    });\n  case COMPOSE_POLL_ADD:\n    return state.set('poll', initialPoll);\n  case COMPOSE_POLL_REMOVE:\n    return state.set('poll', null);\n  case COMPOSE_POLL_OPTION_ADD:\n    return state.updateIn(['poll', 'options'], options => options.push(action.title));\n  case COMPOSE_POLL_OPTION_CHANGE:\n    return state.setIn(['poll', 'options', action.index], action.title);\n  case COMPOSE_POLL_OPTION_REMOVE:\n    return state.updateIn(['poll', 'options'], options => options.delete(action.index));\n  case COMPOSE_POLL_SETTINGS_CHANGE:\n    return state.update('poll', poll => poll.set('expires_in', action.expiresIn).set('multiple', action.isMultiple));\n  case COMPOSE_LANGUAGE_CHANGE:\n    return state.set('language', action.language);\n  default:\n    return state;\n  }\n}\n","import {\n  SEARCH_CHANGE,\n  SEARCH_CLEAR,\n  SEARCH_FETCH_REQUEST,\n  SEARCH_FETCH_FAIL,\n  SEARCH_FETCH_SUCCESS,\n  SEARCH_SHOW,\n  SEARCH_EXPAND_SUCCESS,\n} from '../actions/search';\nimport {\n  COMPOSE_MENTION,\n  COMPOSE_REPLY,\n  COMPOSE_DIRECT,\n} from '../actions/compose';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap({\n  value: '',\n  submitted: false,\n  hidden: false,\n  results: ImmutableMap(),\n  isLoading: false,\n  searchTerm: '',\n});\n\nexport default function search(state = initialState, action) {\n  switch(action.type) {\n  case SEARCH_CHANGE:\n    return state.set('value', action.value);\n  case SEARCH_CLEAR:\n    return state.withMutations(map => {\n      map.set('value', '');\n      map.set('results', ImmutableMap());\n      map.set('submitted', false);\n      map.set('hidden', false);\n    });\n  case SEARCH_SHOW:\n    return state.set('hidden', false);\n  case COMPOSE_REPLY:\n  case COMPOSE_MENTION:\n  case COMPOSE_DIRECT:\n    return state.set('hidden', true);\n  case SEARCH_FETCH_REQUEST:\n    return state.withMutations(map => {\n      map.set('isLoading', true);\n      map.set('submitted', true);\n    });\n  case SEARCH_FETCH_FAIL:\n    return state.set('isLoading', false);\n  case SEARCH_FETCH_SUCCESS:\n    return state.withMutations(map => {\n      map.set('results', ImmutableMap({\n        accounts: ImmutableList(action.results.accounts.map(item => item.id)),\n        statuses: ImmutableList(action.results.statuses.map(item => item.id)),\n        hashtags: fromJS(action.results.hashtags),\n      }));\n\n      map.set('searchTerm', action.searchTerm);\n      map.set('isLoading', false);\n    });\n  case SEARCH_EXPAND_SUCCESS:\n    const results = action.searchType === 'hashtags' ? fromJS(action.results.hashtags) : action.results[action.searchType].map(item => item.id);\n    return state.updateIn(['results', action.searchType], list => list.concat(results));\n  default:\n    return state;\n  }\n}\n","import { STORE_HYDRATE } from '../actions/store';\nimport { Map as ImmutableMap } from 'immutable';\n\nconst initialState = ImmutableMap({\n  accept_content_types: [],\n});\n\nexport default function meta(state = initialState, action) {\n  switch(action.type) {\n  case STORE_HYDRATE:\n    return state.merge(action.state.get('media_attachments'));\n  default:\n    return state;\n  }\n}\n","import {\n  NOTIFICATIONS_UPDATE,\n  NOTIFICATIONS_EXPAND_SUCCESS,\n  NOTIFICATIONS_EXPAND_REQUEST,\n  NOTIFICATIONS_EXPAND_FAIL,\n  NOTIFICATIONS_FILTER_SET,\n  NOTIFICATIONS_CLEAR,\n  NOTIFICATIONS_SCROLL_TOP,\n  NOTIFICATIONS_LOAD_PENDING,\n  NOTIFICATIONS_MOUNT,\n  NOTIFICATIONS_UNMOUNT,\n  NOTIFICATIONS_MARK_AS_READ,\n  NOTIFICATIONS_SET_BROWSER_SUPPORT,\n  NOTIFICATIONS_SET_BROWSER_PERMISSION,\n} from '../actions/notifications';\nimport {\n  ACCOUNT_BLOCK_SUCCESS,\n  ACCOUNT_MUTE_SUCCESS,\n  FOLLOW_REQUEST_AUTHORIZE_SUCCESS,\n  FOLLOW_REQUEST_REJECT_SUCCESS,\n} from '../actions/accounts';\nimport {\n  MARKERS_FETCH_SUCCESS,\n} from '../actions/markers';\nimport {\n  APP_FOCUS,\n  APP_UNFOCUS,\n} from '../actions/app';\nimport { DOMAIN_BLOCK_SUCCESS } from 'mastodon/actions/domain_blocks';\nimport { TIMELINE_DELETE, TIMELINE_DISCONNECT } from '../actions/timelines';\nimport { fromJS, Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport compareId from '../compare_id';\n\nconst initialState = ImmutableMap({\n  pendingItems: ImmutableList(),\n  items: ImmutableList(),\n  hasMore: true,\n  top: false,\n  mounted: 0,\n  unread: 0,\n  lastReadId: '0',\n  readMarkerId: '0',\n  isTabVisible: true,\n  isLoading: 0,\n  browserSupport: false,\n  browserPermission: 'default',\n});\n\nconst notificationToMap = notification => ImmutableMap({\n  id: notification.id,\n  type: notification.type,\n  account: notification.account.id,\n  created_at: notification.created_at,\n  status: notification.status ? notification.status.id : null,\n  report: notification.report ? fromJS(notification.report) : null,\n});\n\nconst normalizeNotification = (state, notification, usePendingItems) => {\n  const top = state.get('top');\n\n  // Under currently unknown conditions, the client may receive duplicates from the server\n  if (state.get('pendingItems').some((item) => item?.get('id') === notification.id) || state.get('items').some((item) => item?.get('id') === notification.id)) {\n    return state;\n  }\n\n  if (usePendingItems || !state.get('pendingItems').isEmpty()) {\n    return state.update('pendingItems', list => list.unshift(notificationToMap(notification))).update('unread', unread => unread + 1);\n  }\n\n  if (shouldCountUnreadNotifications(state)) {\n    state = state.update('unread', unread => unread + 1);\n  } else {\n    state = state.set('lastReadId', notification.id);\n  }\n\n  return state.update('items', list => {\n    if (top && list.size > 40) {\n      list = list.take(20);\n    }\n\n    return list.unshift(notificationToMap(notification));\n  });\n};\n\nconst expandNormalizedNotifications = (state, notifications, next, isLoadingMore, isLoadingRecent, usePendingItems) => {\n  // This method is pretty tricky because:\n  // - existing notifications might be out of order\n  // - the existing notifications may have gaps, most often explicitly noted with a `null` item\n  // - ideally, we don't want it to reorder existing items\n  // - `notifications` may include items that are already included\n  // - this function can be called either to fill in a gap, or load newer items\n\n  const lastReadId = state.get('lastReadId');\n  const newItems = ImmutableList(notifications.map(notificationToMap));\n\n  return state.withMutations(mutable => {\n    if (!newItems.isEmpty()) {\n      usePendingItems = isLoadingRecent && (usePendingItems || !mutable.get('pendingItems').isEmpty());\n\n      mutable.update(usePendingItems ? 'pendingItems' : 'items', oldItems => {\n        // If called to poll *new* notifications, we just need to add them on top without duplicates\n        if (isLoadingRecent) {\n          const idsToCheck = oldItems.map(item => item?.get('id')).toSet();\n          const insertedItems = newItems.filterNot(item => idsToCheck.includes(item.get('id')));\n          return insertedItems.concat(oldItems);\n        }\n\n        // If called to expand more (presumably older than any known to the WebUI), we just have to\n        // add them to the bottom without duplicates\n        if (isLoadingMore) {\n          const idsToCheck = oldItems.map(item => item?.get('id')).toSet();\n          const insertedItems = newItems.filterNot(item => idsToCheck.includes(item.get('id')));\n          return oldItems.concat(insertedItems);\n        }\n\n        // Now this gets tricky, as we don't necessarily know for sure where the gap to fill is,\n        // and some items in the timeline may not be properly ordered.\n\n        // However, we know that `newItems.last()` is the oldest item that was requested and that\n        // there is no “hole” between `newItems.last()` and `newItems.first()`.\n\n        // First, find the furthest (if properly sorted, oldest) item in the notifications that is\n        // newer than the oldest fetched one, as it's most likely that it delimits the gap.\n        // Start the gap *after* that item.\n        const lastIndex = oldItems.findLastIndex(item => item !== null && compareId(item.get('id'), newItems.last().get('id')) >= 0) + 1;\n\n        // Then, try to find the furthest (if properly sorted, oldest) item in the notifications that\n        // is newer than the most recent fetched one, as it delimits a section comprised of only\n        // items older or within `newItems` (or that were deleted from the server, so should be removed\n        // anyway).\n        // Stop the gap *after* that item.\n        const firstIndex = oldItems.take(lastIndex).findLastIndex(item => item !== null && compareId(item.get('id'), newItems.first().get('id')) > 0) + 1;\n\n        // At this point:\n        // - no `oldItems` after `firstIndex` is newer than any of the `newItems`\n        // - all `oldItems` after `lastIndex` are older than every of the `newItems`\n        // - it is possible for items in the replaced slice to be older than every `newItems`\n        // - it is possible for items before `firstIndex` to be in the `newItems` range\n        // Therefore:\n        // - to avoid losing items, items from the replaced slice that are older than `newItems`\n        //   should be added in the back.\n        // - to avoid duplicates, `newItems` should be checked the first `firstIndex` items of\n        //   `oldItems`\n        const idsToCheck = oldItems.take(firstIndex).map(item => item?.get('id')).toSet();\n        const insertedItems = newItems.filterNot(item => idsToCheck.includes(item.get('id')));\n        const olderItems = oldItems.slice(firstIndex, lastIndex).filter(item => item !== null && compareId(item.get('id'), newItems.last().get('id')) < 0);\n\n        return oldItems.take(firstIndex).concat(\n          insertedItems,\n          olderItems,\n          oldItems.skip(lastIndex),\n        );\n      });\n    }\n\n    if (!next) {\n      mutable.set('hasMore', false);\n    }\n\n    if (shouldCountUnreadNotifications(state)) {\n      mutable.set('unread', mutable.get('pendingItems').count(item => item !== null) + mutable.get('items').count(item => item && compareId(item.get('id'), lastReadId) > 0));\n    } else {\n      const mostRecent = newItems.find(item => item !== null);\n      if (mostRecent && compareId(lastReadId, mostRecent.get('id')) < 0) {\n        mutable.set('lastReadId', mostRecent.get('id'));\n      }\n    }\n\n    mutable.update('isLoading', (nbLoading) => nbLoading - 1);\n  });\n};\n\nconst filterNotifications = (state, accountIds, type) => {\n  const helper = list => list.filterNot(item => item !== null && accountIds.includes(item.get('account')) && (type === undefined || type === item.get('type')));\n  return state.update('items', helper).update('pendingItems', helper);\n};\n\nconst clearUnread = (state) => {\n  state = state.set('unread', state.get('pendingItems').size);\n  const lastNotification = state.get('items').find(item => item !== null);\n  return state.set('lastReadId', lastNotification ? lastNotification.get('id') : '0');\n};\n\nconst updateTop = (state, top) => {\n  state = state.set('top', top);\n\n  if (!shouldCountUnreadNotifications(state)) {\n    state = clearUnread(state);\n  }\n\n  return state;\n};\n\nconst deleteByStatus = (state, statusId) => {\n  const lastReadId = state.get('lastReadId');\n\n  if (shouldCountUnreadNotifications(state)) {\n    const deletedUnread = state.get('items').filter(item => item !== null && item.get('status') === statusId && compareId(item.get('id'), lastReadId) > 0);\n    state = state.update('unread', unread => unread - deletedUnread.size);\n  }\n\n  const helper = list => list.filterNot(item => item !== null && item.get('status') === statusId);\n  const deletedUnread = state.get('pendingItems').filter(item => item !== null && item.get('status') === statusId && compareId(item.get('id'), lastReadId) > 0);\n  state = state.update('unread', unread => unread - deletedUnread.size);\n  return state.update('items', helper).update('pendingItems', helper);\n};\n\nconst updateMounted = (state) => {\n  state = state.update('mounted', count => count + 1);\n  if (!shouldCountUnreadNotifications(state, state.get('mounted') === 1)) {\n    state = state.set('readMarkerId', state.get('lastReadId'));\n    state = clearUnread(state);\n  }\n  return state;\n};\n\nconst updateVisibility = (state, visibility) => {\n  state = state.set('isTabVisible', visibility);\n  if (!shouldCountUnreadNotifications(state)) {\n    state = state.set('readMarkerId', state.get('lastReadId'));\n    state = clearUnread(state);\n  }\n  return state;\n};\n\nconst shouldCountUnreadNotifications = (state, ignoreScroll = false) => {\n  const isTabVisible   = state.get('isTabVisible');\n  const isOnTop        = state.get('top');\n  const isMounted      = state.get('mounted') > 0;\n  const lastReadId     = state.get('lastReadId');\n  const lastItem       = state.get('items').findLast(item => item !== null);\n  const lastItemReached = !state.get('hasMore') || lastReadId === '0' || (lastItem && compareId(lastItem.get('id'), lastReadId) <= 0);\n\n  return !(isTabVisible && (ignoreScroll || isOnTop) && isMounted && lastItemReached);\n};\n\nconst recountUnread = (state, last_read_id) => {\n  return state.withMutations(mutable => {\n    if (compareId(last_read_id, mutable.get('lastReadId')) > 0) {\n      mutable.set('lastReadId', last_read_id);\n    }\n\n    if (compareId(last_read_id, mutable.get('readMarkerId')) > 0) {\n      mutable.set('readMarkerId', last_read_id);\n    }\n\n    if (state.get('unread') > 0 || shouldCountUnreadNotifications(state)) {\n      mutable.set('unread', mutable.get('pendingItems').count(item => item !== null) + mutable.get('items').count(item => item && compareId(item.get('id'), last_read_id) > 0));\n    }\n  });\n};\n\nexport default function notifications(state = initialState, action) {\n  switch(action.type) {\n  case MARKERS_FETCH_SUCCESS:\n    return action.markers.notifications ? recountUnread(state, action.markers.notifications.last_read_id) : state;\n  case NOTIFICATIONS_MOUNT:\n    return updateMounted(state);\n  case NOTIFICATIONS_UNMOUNT:\n    return state.update('mounted', count => count - 1);\n  case APP_FOCUS:\n    return updateVisibility(state, true);\n  case APP_UNFOCUS:\n    return updateVisibility(state, false);\n  case NOTIFICATIONS_LOAD_PENDING:\n    return state.update('items', list => state.get('pendingItems').concat(list.take(40))).set('pendingItems', ImmutableList()).set('unread', 0);\n  case NOTIFICATIONS_EXPAND_REQUEST:\n    return state.update('isLoading', (nbLoading) => nbLoading + 1);\n  case NOTIFICATIONS_EXPAND_FAIL:\n    return state.update('isLoading', (nbLoading) => nbLoading - 1);\n  case NOTIFICATIONS_FILTER_SET:\n    return state.set('items', ImmutableList()).set('pendingItems', ImmutableList()).set('hasMore', true);\n  case NOTIFICATIONS_SCROLL_TOP:\n    return updateTop(state, action.top);\n  case NOTIFICATIONS_UPDATE:\n    return normalizeNotification(state, action.notification, action.usePendingItems);\n  case NOTIFICATIONS_EXPAND_SUCCESS:\n    return expandNormalizedNotifications(state, action.notifications, action.next, action.isLoadingMore, action.isLoadingRecent, action.usePendingItems);\n  case ACCOUNT_BLOCK_SUCCESS:\n    return filterNotifications(state, [action.relationship.id]);\n  case ACCOUNT_MUTE_SUCCESS:\n    return action.relationship.muting_notifications ? filterNotifications(state, [action.relationship.id]) : state;\n  case DOMAIN_BLOCK_SUCCESS:\n    return filterNotifications(state, action.accounts);\n  case FOLLOW_REQUEST_AUTHORIZE_SUCCESS:\n  case FOLLOW_REQUEST_REJECT_SUCCESS:\n    return filterNotifications(state, [action.id], 'follow_request');\n  case NOTIFICATIONS_CLEAR:\n    return state.set('items', ImmutableList()).set('pendingItems', ImmutableList()).set('hasMore', false);\n  case TIMELINE_DELETE:\n    return deleteByStatus(state, action.id);\n  case TIMELINE_DISCONNECT:\n    return action.timeline === 'home' ?\n      state.update(action.usePendingItems ? 'pendingItems' : 'items', items => items.first() ? items.unshift(null) : items) :\n      state;\n  case NOTIFICATIONS_MARK_AS_READ:\n    const lastNotification = state.get('items').find(item => item !== null);\n    return lastNotification ? recountUnread(state, lastNotification.get('id')) : state;\n  case NOTIFICATIONS_SET_BROWSER_SUPPORT:\n    return state.set('browserSupport', action.value);\n  case NOTIFICATIONS_SET_BROWSER_PERMISSION:\n    return state.set('browserPermission', action.value);\n  default:\n    return state;\n  }\n}\n","import { Map as ImmutableMap } from 'immutable';\nimport { HEIGHT_CACHE_SET, HEIGHT_CACHE_CLEAR } from '../actions/height_cache';\n\nconst initialState = ImmutableMap();\n\nconst setHeight = (state, key, id, height) => {\n  return state.update(key, ImmutableMap(), map => map.set(id, height));\n};\n\nconst clearHeights = () => {\n  return ImmutableMap();\n};\n\nexport default function statuses(state = initialState, action) {\n  switch(action.type) {\n  case HEIGHT_CACHE_SET:\n    return setHeight(state, action.key, action.id, action.height);\n  case HEIGHT_CACHE_CLEAR:\n    return clearHeights();\n  default:\n    return state;\n  }\n}\n","import { List as ImmutableList, fromJS as ConvertToImmutable } from 'immutable';\nimport { CUSTOM_EMOJIS_FETCH_SUCCESS } from '../actions/custom_emojis';\nimport { search as emojiSearch } from '../features/emoji/emoji_mart_search_light';\nimport { buildCustomEmojis } from '../features/emoji/emoji';\n\nconst initialState = ImmutableList([]);\n\nexport default function custom_emojis(state = initialState, action) {\n  if(action.type === CUSTOM_EMOJIS_FETCH_SUCCESS) {\n    state = ConvertToImmutable(action.custom_emojis);\n    emojiSearch('', { custom: buildCustomEmojis(state) });\n  }\n\n  return state;\n}\n","import {\n  LIST_FETCH_SUCCESS,\n  LIST_FETCH_FAIL,\n  LISTS_FETCH_SUCCESS,\n  LIST_CREATE_SUCCESS,\n  LIST_UPDATE_SUCCESS,\n  LIST_DELETE_SUCCESS,\n} from '../actions/lists';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap();\n\nconst normalizeList = (state, list) => state.set(list.id, fromJS(list));\n\nconst normalizeLists = (state, lists) => {\n  lists.forEach(list => {\n    state = normalizeList(state, list);\n  });\n\n  return state;\n};\n\nexport default function lists(state = initialState, action) {\n  switch(action.type) {\n  case LIST_FETCH_SUCCESS:\n  case LIST_CREATE_SUCCESS:\n  case LIST_UPDATE_SUCCESS:\n    return normalizeList(state, action.list);\n  case LISTS_FETCH_SUCCESS:\n    return normalizeLists(state, action.lists);\n  case LIST_DELETE_SUCCESS:\n  case LIST_FETCH_FAIL:\n    return state.set(action.id, false);\n  default:\n    return state;\n  }\n}\n","import { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport {\n  LIST_CREATE_REQUEST,\n  LIST_CREATE_FAIL,\n  LIST_CREATE_SUCCESS,\n  LIST_UPDATE_REQUEST,\n  LIST_UPDATE_FAIL,\n  LIST_UPDATE_SUCCESS,\n  LIST_EDITOR_RESET,\n  LIST_EDITOR_SETUP,\n  LIST_EDITOR_TITLE_CHANGE,\n  LIST_ACCOUNTS_FETCH_REQUEST,\n  LIST_ACCOUNTS_FETCH_SUCCESS,\n  LIST_ACCOUNTS_FETCH_FAIL,\n  LIST_EDITOR_SUGGESTIONS_READY,\n  LIST_EDITOR_SUGGESTIONS_CLEAR,\n  LIST_EDITOR_SUGGESTIONS_CHANGE,\n  LIST_EDITOR_ADD_SUCCESS,\n  LIST_EDITOR_REMOVE_SUCCESS,\n} from '../actions/lists';\n\nconst initialState = ImmutableMap({\n  listId: null,\n  isSubmitting: false,\n  isChanged: false,\n  title: '',\n\n  accounts: ImmutableMap({\n    items: ImmutableList(),\n    loaded: false,\n    isLoading: false,\n  }),\n\n  suggestions: ImmutableMap({\n    value: '',\n    items: ImmutableList(),\n  }),\n});\n\nexport default function listEditorReducer(state = initialState, action) {\n  switch(action.type) {\n  case LIST_EDITOR_RESET:\n    return initialState;\n  case LIST_EDITOR_SETUP:\n    return state.withMutations(map => {\n      map.set('listId', action.list.get('id'));\n      map.set('title', action.list.get('title'));\n      map.set('isSubmitting', false);\n    });\n  case LIST_EDITOR_TITLE_CHANGE:\n    return state.withMutations(map => {\n      map.set('title', action.value);\n      map.set('isChanged', true);\n    });\n  case LIST_CREATE_REQUEST:\n  case LIST_UPDATE_REQUEST:\n    return state.withMutations(map => {\n      map.set('isSubmitting', true);\n      map.set('isChanged', false);\n    });\n  case LIST_CREATE_FAIL:\n  case LIST_UPDATE_FAIL:\n    return state.set('isSubmitting', false);\n  case LIST_CREATE_SUCCESS:\n  case LIST_UPDATE_SUCCESS:\n    return state.withMutations(map => {\n      map.set('isSubmitting', false);\n      map.set('listId', action.list.id);\n    });\n  case LIST_ACCOUNTS_FETCH_REQUEST:\n    return state.setIn(['accounts', 'isLoading'], true);\n  case LIST_ACCOUNTS_FETCH_FAIL:\n    return state.setIn(['accounts', 'isLoading'], false);\n  case LIST_ACCOUNTS_FETCH_SUCCESS:\n    return state.update('accounts', accounts => accounts.withMutations(map => {\n      map.set('isLoading', false);\n      map.set('loaded', true);\n      map.set('items', ImmutableList(action.accounts.map(item => item.id)));\n    }));\n  case LIST_EDITOR_SUGGESTIONS_CHANGE:\n    return state.setIn(['suggestions', 'value'], action.value);\n  case LIST_EDITOR_SUGGESTIONS_READY:\n    return state.setIn(['suggestions', 'items'], ImmutableList(action.accounts.map(item => item.id)));\n  case LIST_EDITOR_SUGGESTIONS_CLEAR:\n    return state.update('suggestions', suggestions => suggestions.withMutations(map => {\n      map.set('items', ImmutableList());\n      map.set('value', '');\n    }));\n  case LIST_EDITOR_ADD_SUCCESS:\n    return state.updateIn(['accounts', 'items'], list => list.unshift(action.accountId));\n  case LIST_EDITOR_REMOVE_SUCCESS:\n    return state.updateIn(['accounts', 'items'], list => list.filterNot(item => item === action.accountId));\n  default:\n    return state;\n  }\n}\n","import { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport {\n  LIST_ADDER_RESET,\n  LIST_ADDER_SETUP,\n  LIST_ADDER_LISTS_FETCH_REQUEST,\n  LIST_ADDER_LISTS_FETCH_SUCCESS,\n  LIST_ADDER_LISTS_FETCH_FAIL,\n  LIST_EDITOR_ADD_SUCCESS,\n  LIST_EDITOR_REMOVE_SUCCESS,\n} from '../actions/lists';\n\nconst initialState = ImmutableMap({\n  accountId: null,\n\n  lists: ImmutableMap({\n    items: ImmutableList(),\n    loaded: false,\n    isLoading: false,\n  }),\n});\n\nexport default function listAdderReducer(state = initialState, action) {\n  switch(action.type) {\n  case LIST_ADDER_RESET:\n    return initialState;\n  case LIST_ADDER_SETUP:\n    return state.withMutations(map => {\n      map.set('accountId', action.account.get('id'));\n    });\n  case LIST_ADDER_LISTS_FETCH_REQUEST:\n    return state.setIn(['lists', 'isLoading'], true);\n  case LIST_ADDER_LISTS_FETCH_FAIL:\n    return state.setIn(['lists', 'isLoading'], false);\n  case LIST_ADDER_LISTS_FETCH_SUCCESS:\n    return state.update('lists', lists => lists.withMutations(map => {\n      map.set('isLoading', false);\n      map.set('loaded', true);\n      map.set('items', ImmutableList(action.lists.map(item => item.id)));\n    }));\n  case LIST_EDITOR_ADD_SUCCESS:\n    return state.updateIn(['lists', 'items'], list => list.unshift(action.listId));\n  case LIST_EDITOR_REMOVE_SUCCESS:\n    return state.updateIn(['lists', 'items'], list => list.filterNot(item => item === action.listId));\n  default:\n    return state;\n  }\n}\n","import { FILTERS_IMPORT } from '../actions/importer';\nimport { FILTERS_FETCH_SUCCESS, FILTERS_CREATE_SUCCESS } from '../actions/filters';\nimport { Map as ImmutableMap, is, fromJS } from 'immutable';\n\nconst normalizeFilter = (state, filter) => {\n  const normalizedFilter = fromJS({\n    id: filter.id,\n    title: filter.title,\n    context: filter.context,\n    filter_action: filter.filter_action,\n    keywords: filter.keywords,\n    expires_at: filter.expires_at ? Date.parse(filter.expires_at) : null,\n  });\n\n  if (is(state.get(filter.id), normalizedFilter)) {\n    return state;\n  } else {\n    // Do not overwrite keywords when receiving a partial filter\n    return state.update(filter.id, ImmutableMap(), (old) => (\n      old.mergeWith(((old_value, new_value) => (new_value === undefined ? old_value : new_value)), normalizedFilter)\n    ));\n  }\n};\n\nconst normalizeFilters = (state, filters) => {\n  filters.forEach(filter => {\n    state = normalizeFilter(state, filter);\n  });\n\n  return state;\n};\n\nexport default function filters(state = ImmutableMap(), action) {\n  switch(action.type) {\n  case FILTERS_CREATE_SUCCESS:\n    return normalizeFilter(state, action.filter);\n  case FILTERS_FETCH_SUCCESS:\n    return normalizeFilters(ImmutableMap(), action.filters);\n  case FILTERS_IMPORT:\n    return normalizeFilters(state, action.filters);\n  default:\n    return state;\n  }\n}\n","import { Map as ImmutableMap, List as ImmutableList } from 'immutable';\nimport {\n  CONVERSATIONS_MOUNT,\n  CONVERSATIONS_UNMOUNT,\n  CONVERSATIONS_FETCH_REQUEST,\n  CONVERSATIONS_FETCH_SUCCESS,\n  CONVERSATIONS_FETCH_FAIL,\n  CONVERSATIONS_UPDATE,\n  CONVERSATIONS_READ,\n  CONVERSATIONS_DELETE_SUCCESS,\n} from '../actions/conversations';\nimport { ACCOUNT_BLOCK_SUCCESS, ACCOUNT_MUTE_SUCCESS } from 'mastodon/actions/accounts';\nimport { DOMAIN_BLOCK_SUCCESS } from 'mastodon/actions/domain_blocks';\nimport compareId from '../compare_id';\n\nconst initialState = ImmutableMap({\n  items: ImmutableList(),\n  isLoading: false,\n  hasMore: true,\n  mounted: false,\n});\n\nconst conversationToMap = item => ImmutableMap({\n  id: item.id,\n  unread: item.unread,\n  accounts: ImmutableList(item.accounts.map(a => a.id)),\n  last_status: item.last_status ? item.last_status.id : null,\n});\n\nconst updateConversation = (state, item) => state.update('items', list => {\n  const index   = list.findIndex(x => x.get('id') === item.id);\n  const newItem = conversationToMap(item);\n\n  if (index === -1) {\n    return list.unshift(newItem);\n  } else {\n    return list.set(index, newItem);\n  }\n});\n\nconst expandNormalizedConversations = (state, conversations, next, isLoadingRecent) => {\n  let items = ImmutableList(conversations.map(conversationToMap));\n\n  return state.withMutations(mutable => {\n    if (!items.isEmpty()) {\n      mutable.update('items', list => {\n        list = list.map(oldItem => {\n          const newItemIndex = items.findIndex(x => x.get('id') === oldItem.get('id'));\n\n          if (newItemIndex === -1) {\n            return oldItem;\n          }\n\n          const newItem = items.get(newItemIndex);\n          items = items.delete(newItemIndex);\n\n          return newItem;\n        });\n\n        list = list.concat(items);\n\n        return list.sortBy(x => x.get('last_status'), (a, b) => {\n          if(a === null || b === null) {\n            return -1;\n          }\n\n          return compareId(a, b) * -1;\n        });\n      });\n    }\n\n    if (!next && !isLoadingRecent) {\n      mutable.set('hasMore', false);\n    }\n\n    mutable.set('isLoading', false);\n  });\n};\n\nconst filterConversations = (state, accountIds) => {\n  return state.update('items', list => list.filterNot(item => item.get('accounts').some(accountId => accountIds.includes(accountId))));\n};\n\nexport default function conversations(state = initialState, action) {\n  switch (action.type) {\n  case CONVERSATIONS_FETCH_REQUEST:\n    return state.set('isLoading', true);\n  case CONVERSATIONS_FETCH_FAIL:\n    return state.set('isLoading', false);\n  case CONVERSATIONS_FETCH_SUCCESS:\n    return expandNormalizedConversations(state, action.conversations, action.next, action.isLoadingRecent);\n  case CONVERSATIONS_UPDATE:\n    return updateConversation(state, action.conversation);\n  case CONVERSATIONS_MOUNT:\n    return state.update('mounted', count => count + 1);\n  case CONVERSATIONS_UNMOUNT:\n    return state.update('mounted', count => count - 1);\n  case CONVERSATIONS_READ:\n    return state.update('items', list => list.map(item => {\n      if (item.get('id') === action.id) {\n        return item.set('unread', false);\n      }\n\n      return item;\n    }));\n  case ACCOUNT_BLOCK_SUCCESS:\n  case ACCOUNT_MUTE_SUCCESS:\n    return filterConversations(state, [action.relationship.id]);\n  case DOMAIN_BLOCK_SUCCESS:\n    return filterConversations(state, action.accounts);\n  case CONVERSATIONS_DELETE_SUCCESS:\n    return state.update('items', list => list.filterNot(item => item.get('id') === action.id));\n  default:\n    return state;\n  }\n}\n","import {\n  SUGGESTIONS_FETCH_REQUEST,\n  SUGGESTIONS_FETCH_SUCCESS,\n  SUGGESTIONS_FETCH_FAIL,\n  SUGGESTIONS_DISMISS,\n} from '../actions/suggestions';\nimport { ACCOUNT_BLOCK_SUCCESS, ACCOUNT_MUTE_SUCCESS } from 'mastodon/actions/accounts';\nimport { DOMAIN_BLOCK_SUCCESS } from 'mastodon/actions/domain_blocks';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap({\n  items: ImmutableList(),\n  isLoading: false,\n});\n\nexport default function suggestionsReducer(state = initialState, action) {\n  switch(action.type) {\n  case SUGGESTIONS_FETCH_REQUEST:\n    return state.set('isLoading', true);\n  case SUGGESTIONS_FETCH_SUCCESS:\n    return state.withMutations(map => {\n      map.set('items', fromJS(action.suggestions.map(x => ({ ...x, account: x.account.id }))));\n      map.set('isLoading', false);\n    });\n  case SUGGESTIONS_FETCH_FAIL:\n    return state.set('isLoading', false);\n  case SUGGESTIONS_DISMISS:\n    return state.update('items', list => list.filterNot(x => x.account === action.id));\n  case ACCOUNT_BLOCK_SUCCESS:\n  case ACCOUNT_MUTE_SUCCESS:\n    return state.update('items', list => list.filterNot(x => x.account === action.relationship.id));\n  case DOMAIN_BLOCK_SUCCESS:\n    return state.update('items', list => list.filterNot(x => action.accounts.includes(x.account)));\n  default:\n    return state;\n  }\n}\n","import { POLLS_IMPORT } from 'mastodon/actions/importer';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst importPolls = (state, polls) => state.withMutations(map => polls.forEach(poll => map.set(poll.id, fromJS(poll))));\n\nconst initialState = ImmutableMap();\n\nexport default function polls(state = initialState, action) {\n  switch(action.type) {\n  case POLLS_IMPORT:\n    return importPolls(state, action.polls);\n  default:\n    return state;\n  }\n}\n","import {\n  TRENDS_TAGS_FETCH_REQUEST,\n  TRENDS_TAGS_FETCH_SUCCESS,\n  TRENDS_TAGS_FETCH_FAIL,\n  TRENDS_LINKS_FETCH_REQUEST,\n  TRENDS_LINKS_FETCH_SUCCESS,\n  TRENDS_LINKS_FETCH_FAIL,\n} from 'mastodon/actions/trends';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap({\n  tags: ImmutableMap({\n    items: ImmutableList(),\n    isLoading: false,\n  }),\n\n  links: ImmutableMap({\n    items: ImmutableList(),\n    isLoading: false,\n  }),\n});\n\nexport default function trendsReducer(state = initialState, action) {\n  switch(action.type) {\n  case TRENDS_TAGS_FETCH_REQUEST:\n    return state.setIn(['tags', 'isLoading'], true);\n  case TRENDS_TAGS_FETCH_SUCCESS:\n    return state.withMutations(map => {\n      map.setIn(['tags', 'items'], fromJS(action.trends));\n      map.setIn(['tags', 'isLoading'], false);\n    });\n  case TRENDS_TAGS_FETCH_FAIL:\n    return state.setIn(['tags', 'isLoading'], false);\n  case TRENDS_LINKS_FETCH_REQUEST:\n    return state.setIn(['links', 'isLoading'], true);\n  case TRENDS_LINKS_FETCH_SUCCESS:\n    return state.withMutations(map => {\n      map.setIn(['links', 'items'], fromJS(action.trends));\n      map.setIn(['links', 'isLoading'], false);\n    });\n  case TRENDS_LINKS_FETCH_FAIL:\n    return state.setIn(['links', 'isLoading'], false);\n  default:\n    return state;\n  }\n}\n","import { Map as ImmutableMap } from 'immutable';\nimport { NOTIFICATIONS_UPDATE } from 'mastodon/actions/notifications';\nimport { APP_FOCUS, APP_UNFOCUS } from 'mastodon/actions/app';\n\nconst initialState = ImmutableMap({\n  focused: true,\n  unread: 0,\n});\n\nexport default function missed_updates(state = initialState, action) {\n  switch(action.type) {\n  case APP_FOCUS:\n    return state.set('focused', true).set('unread', 0);\n  case APP_UNFOCUS:\n    return state.set('focused', false);\n  case NOTIFICATIONS_UPDATE:\n    return state.get('focused') ? state : state.update('unread', x => x + 1);\n  default:\n    return state;\n  }\n}\n","import {\n  ANNOUNCEMENTS_FETCH_REQUEST,\n  ANNOUNCEMENTS_FETCH_SUCCESS,\n  ANNOUNCEMENTS_FETCH_FAIL,\n  ANNOUNCEMENTS_UPDATE,\n  ANNOUNCEMENTS_REACTION_UPDATE,\n  ANNOUNCEMENTS_REACTION_ADD_REQUEST,\n  ANNOUNCEMENTS_REACTION_ADD_FAIL,\n  ANNOUNCEMENTS_REACTION_REMOVE_REQUEST,\n  ANNOUNCEMENTS_REACTION_REMOVE_FAIL,\n  ANNOUNCEMENTS_TOGGLE_SHOW,\n  ANNOUNCEMENTS_DELETE,\n  ANNOUNCEMENTS_DISMISS_SUCCESS,\n} from '../actions/announcements';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap({\n  items: ImmutableList(),\n  isLoading: false,\n  show: false,\n});\n\nconst updateReaction = (state, id, name, updater) => state.update('items', list => list.map(announcement => {\n  if (announcement.get('id') === id) {\n    return announcement.update('reactions', reactions => {\n      const idx = reactions.findIndex(reaction => reaction.get('name') === name);\n\n      if (idx > -1) {\n        return reactions.update(idx, reaction => updater(reaction));\n      }\n\n      return reactions.push(updater(fromJS({ name, count: 0 })));\n    });\n  }\n\n  return announcement;\n}));\n\nconst updateReactionCount = (state, reaction) => updateReaction(state, reaction.announcement_id, reaction.name, x => x.set('count', reaction.count));\n\nconst addReaction = (state, id, name) => updateReaction(state, id, name, x => x.set('me', true).update('count', y => y + 1));\n\nconst removeReaction = (state, id, name) => updateReaction(state, id, name, x => x.set('me', false).update('count', y => y - 1));\n\nconst sortAnnouncements = list => list.sortBy(x => x.get('starts_at') || x.get('published_at'));\n\nconst updateAnnouncement = (state, announcement) => {\n  const idx = state.get('items').findIndex(x => x.get('id') === announcement.get('id'));\n\n  if (idx > -1) {\n    // Deep merge is used because announcements from the streaming API do not contain\n    // personalized data about which reactions have been selected by the given user,\n    // and that is information we want to preserve\n    return state.update('items', list => sortAnnouncements(list.update(idx, x => x.mergeDeep(announcement))));\n  }\n\n  return state.update('items', list => sortAnnouncements(list.unshift(announcement)));\n};\n\nexport default function announcementsReducer(state = initialState, action) {\n  switch(action.type) {\n  case ANNOUNCEMENTS_TOGGLE_SHOW:\n    return state.withMutations(map => {\n      map.set('show', !map.get('show'));\n    });\n  case ANNOUNCEMENTS_FETCH_REQUEST:\n    return state.set('isLoading', true);\n  case ANNOUNCEMENTS_FETCH_SUCCESS:\n    return state.withMutations(map => {\n      const items = fromJS(action.announcements);\n\n      map.set('items', items);\n      map.set('isLoading', false);\n    });\n  case ANNOUNCEMENTS_FETCH_FAIL:\n    return state.set('isLoading', false);\n  case ANNOUNCEMENTS_UPDATE:\n    return updateAnnouncement(state, fromJS(action.announcement));\n  case ANNOUNCEMENTS_REACTION_UPDATE:\n    return updateReactionCount(state, action.reaction);\n  case ANNOUNCEMENTS_REACTION_ADD_REQUEST:\n  case ANNOUNCEMENTS_REACTION_REMOVE_FAIL:\n    return addReaction(state, action.id, action.name);\n  case ANNOUNCEMENTS_REACTION_REMOVE_REQUEST:\n  case ANNOUNCEMENTS_REACTION_ADD_FAIL:\n    return removeReaction(state, action.id, action.name);\n  case ANNOUNCEMENTS_DISMISS_SUCCESS:\n    return updateAnnouncement(state, fromJS({ 'id': action.id, 'read': true }));\n  case ANNOUNCEMENTS_DELETE:\n    return state.update('items', list => {\n      const idx = list.findIndex(x => x.get('id') === action.id);\n\n      if (idx > -1) {\n        return list.delete(idx);\n      }\n\n      return list;\n    });\n  default:\n    return state;\n  }\n}\n","import {\n  MARKERS_SUBMIT_SUCCESS,\n} from '../actions/markers';\n\nconst initialState = ImmutableMap({\n  home: '0',\n  notifications: '0',\n});\n\nimport { Map as ImmutableMap } from 'immutable';\n\nexport default function markers(state = initialState, action) {\n  switch(action.type) {\n  case MARKERS_SUBMIT_SUCCESS:\n    if (action.home) {\n      state = state.set('home', action.home);\n    }\n    if (action.notifications) {\n      state = state.set('notifications', action.notifications);\n    }\n    return state;\n  default:\n    return state;\n  }\n}\n","import { PICTURE_IN_PICTURE_DEPLOY, PICTURE_IN_PICTURE_REMOVE } from 'mastodon/actions/picture_in_picture';\nimport { TIMELINE_DELETE } from '../actions/timelines';\n\nconst initialState = {\n  statusId: null,\n  accountId: null,\n  type: null,\n  src: null,\n  muted: false,\n  volume: 0,\n  currentTime: 0,\n};\n\nexport default function pictureInPicture(state = initialState, action) {\n  switch(action.type) {\n  case PICTURE_IN_PICTURE_DEPLOY:\n    return { statusId: action.statusId, accountId: action.accountId, type: action.playerType, ...action.props };\n  case PICTURE_IN_PICTURE_REMOVE:\n    return { ...initialState };\n  case TIMELINE_DELETE:\n    return (state.statusId === action.id) ? { ...initialState } : state;\n  default:\n    return state;\n  }\n}\n","import { HISTORY_FETCH_REQUEST, HISTORY_FETCH_SUCCESS, HISTORY_FETCH_FAIL } from 'mastodon/actions/history';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialHistory = ImmutableMap({\n  loading: false,\n  items: ImmutableList(),\n});\n\nconst initialState = ImmutableMap();\n\nexport default function history(state = initialState, action) {\n  switch(action.type) {\n  case HISTORY_FETCH_REQUEST:\n    return state.update(action.statusId, initialHistory, history => history.withMutations(map => {\n      map.set('loading', true);\n      map.set('items', ImmutableList());\n    }));\n  case HISTORY_FETCH_SUCCESS:\n    return state.update(action.statusId, initialHistory, history => history.withMutations(map => {\n      map.set('loading', false);\n      map.set('items', fromJS(action.history.map((x, i) => ({ ...x, account: x.account.id, original: i === 0 })).reverse()));\n    }));\n  case HISTORY_FETCH_FAIL:\n    return state.update(action.statusId, initialHistory, history => history.set('loading', false));\n  default:\n    return state;\n  }\n}\n","import {\n  HASHTAG_FETCH_SUCCESS,\n  HASHTAG_FOLLOW_REQUEST,\n  HASHTAG_FOLLOW_FAIL,\n  HASHTAG_UNFOLLOW_REQUEST,\n  HASHTAG_UNFOLLOW_FAIL,\n} from 'mastodon/actions/tags';\nimport { Map as ImmutableMap, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap();\n\nexport default function tags(state = initialState, action) {\n  switch(action.type) {\n  case HASHTAG_FETCH_SUCCESS:\n    return state.set(action.name, fromJS(action.tag));\n  case HASHTAG_FOLLOW_REQUEST:\n  case HASHTAG_UNFOLLOW_FAIL:\n    return state.setIn([action.name, 'following'], true);\n  case HASHTAG_FOLLOW_FAIL:\n  case HASHTAG_UNFOLLOW_REQUEST:\n    return state.setIn([action.name, 'following'], false);\n  default:\n    return state;\n  }\n}\n","import {\n  FOLLOWED_HASHTAGS_FETCH_REQUEST,\n  FOLLOWED_HASHTAGS_FETCH_SUCCESS,\n  FOLLOWED_HASHTAGS_FETCH_FAIL,\n  FOLLOWED_HASHTAGS_EXPAND_REQUEST,\n  FOLLOWED_HASHTAGS_EXPAND_SUCCESS,\n  FOLLOWED_HASHTAGS_EXPAND_FAIL,\n} from 'mastodon/actions/tags';\nimport { Map as ImmutableMap, List as ImmutableList, fromJS } from 'immutable';\n\nconst initialState = ImmutableMap({\n  items: ImmutableList(),\n  isLoading: false,\n  next: null,\n});\n\nexport default function followed_tags(state = initialState, action) {\n  switch(action.type) {\n  case FOLLOWED_HASHTAGS_FETCH_REQUEST:\n    return state.set('isLoading', true);\n  case FOLLOWED_HASHTAGS_FETCH_SUCCESS:\n    return state.withMutations(map => {\n      map.set('items', fromJS(action.followed_tags));\n      map.set('isLoading', false);\n      map.set('next', action.next);\n    });\n  case FOLLOWED_HASHTAGS_FETCH_FAIL:\n    return state.set('isLoading', false);\n  case FOLLOWED_HASHTAGS_EXPAND_REQUEST:\n    return state.set('isLoading', true);\n  case FOLLOWED_HASHTAGS_EXPAND_SUCCESS:\n    return state.withMutations(map => {\n      map.update('items', set => set.concat(fromJS(action.followed_tags)));\n      map.set('isLoading', false);\n      map.set('next', action.next);\n    });\n  case FOLLOWED_HASHTAGS_EXPAND_FAIL:\n    return state.set('isLoading', false);\n  default:\n    return state;\n  }\n}\n","import { combineReducers } from 'redux-immutable';\nimport dropdown_menu from './dropdown_menu';\nimport timelines from './timelines';\nimport meta from './meta';\nimport alerts from './alerts';\nimport { loadingBarReducer } from 'react-redux-loading-bar';\nimport modal from './modal';\nimport user_lists from './user_lists';\nimport domain_lists from './domain_lists';\nimport accounts from './accounts';\nimport accounts_counters from './accounts_counters';\nimport statuses from './statuses';\nimport relationships from './relationships';\nimport settings from './settings';\nimport push_notifications from './push_notifications';\nimport status_lists from './status_lists';\nimport mutes from './mutes';\nimport blocks from './blocks';\nimport boosts from './boosts';\nimport server from './server';\nimport contexts from './contexts';\nimport compose from './compose';\nimport search from './search';\nimport media_attachments from './media_attachments';\nimport notifications from './notifications';\nimport height_cache from './height_cache';\nimport custom_emojis from './custom_emojis';\nimport lists from './lists';\nimport listEditor from './list_editor';\nimport listAdder from './list_adder';\nimport filters from './filters';\nimport conversations from './conversations';\nimport suggestions from './suggestions';\nimport polls from './polls';\nimport trends from './trends';\nimport missed_updates from './missed_updates';\nimport announcements from './announcements';\nimport markers from './markers';\nimport picture_in_picture from './picture_in_picture';\nimport accounts_map from './accounts_map';\nimport history from './history';\nimport tags from './tags';\nimport followed_tags from './followed_tags';\n\nconst reducers = {\n  announcements,\n  dropdown_menu,\n  timelines,\n  meta,\n  alerts,\n  loadingBar: loadingBarReducer,\n  modal,\n  user_lists,\n  domain_lists,\n  status_lists,\n  accounts,\n  accounts_counters,\n  accounts_map,\n  statuses,\n  relationships,\n  settings,\n  push_notifications,\n  mutes,\n  blocks,\n  boosts,\n  server,\n  contexts,\n  compose,\n  search,\n  media_attachments,\n  notifications,\n  height_cache,\n  custom_emojis,\n  lists,\n  listEditor,\n  listAdder,\n  filters,\n  conversations,\n  suggestions,\n  polls,\n  trends,\n  missed_updates,\n  markers,\n  picture_in_picture,\n  history,\n  tags,\n  followed_tags,\n};\n\nexport default combineReducers(reducers);\n","import { showLoading, hideLoading } from 'react-redux-loading-bar';\n\nconst defaultTypeSuffixes = ['PENDING', 'FULFILLED', 'REJECTED'];\n\nexport default function loadingBarMiddleware(config = {}) {\n  const promiseTypeSuffixes = config.promiseTypeSuffixes || defaultTypeSuffixes;\n\n  return ({ dispatch }) => next => (action) => {\n    if (action.type && !action.skipLoading) {\n      const [PENDING, FULFILLED, REJECTED] = promiseTypeSuffixes;\n\n      const isPending = new RegExp(`${PENDING}$`, 'g');\n      const isFulfilled = new RegExp(`${FULFILLED}$`, 'g');\n      const isRejected = new RegExp(`${REJECTED}$`, 'g');\n\n      if (action.type.match(isPending)) {\n        dispatch(showLoading());\n      } else if (action.type.match(isFulfilled) || action.type.match(isRejected)) {\n        dispatch(hideLoading());\n      }\n    }\n\n    return next(action);\n  };\n}\n","const createAudio = sources => {\n  const audio = new Audio();\n  sources.forEach(({ type, src }) => {\n    const source = document.createElement('source');\n    source.type = type;\n    source.src = src;\n    audio.appendChild(source);\n  });\n  return audio;\n};\n\nconst play = audio => {\n  if (!audio.paused) {\n    audio.pause();\n    if (typeof audio.fastSeek === 'function') {\n      audio.fastSeek(0);\n    } else {\n      audio.currentTime = 0;\n    }\n  }\n\n  audio.play();\n};\n\nexport default function soundsMiddleware() {\n  const soundCache = {\n    boop: createAudio([\n      {\n        src: '/sounds/boop.ogg',\n        type: 'audio/ogg',\n      },\n      {\n        src: '/sounds/boop.mp3',\n        type: 'audio/mpeg',\n      },\n    ]),\n  };\n\n  return () => next => action => {\n    if (action.meta && action.meta.sound && soundCache[action.meta.sound]) {\n      play(soundCache[action.meta.sound]);\n    }\n\n    return next(action);\n  };\n}\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport appReducer from '../reducers';\nimport loadingBarMiddleware from '../middleware/loading_bar';\nimport errorsMiddleware from '../middleware/errors';\nimport soundsMiddleware from '../middleware/sounds';\n\nexport default function configureStore() {\n  return createStore(appReducer, compose(applyMiddleware(\n    thunk,\n    loadingBarMiddleware({ promiseTypeSuffixes: ['REQUEST', 'SUCCESS', 'FAIL'] }),\n    errorsMiddleware(),\n    soundsMiddleware(),\n  ), window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f));\n}\n","import { showAlertForError } from '../actions/alerts';\n\nconst defaultFailSuffix = 'FAIL';\n\nexport default function errorsMiddleware() {\n  return ({ dispatch }) => next => action => {\n    if (action.type && !action.skipAlert) {\n      const isFail = new RegExp(`${defaultFailSuffix}$`, 'g');\n\n      if (action.type.match(isFail)) {\n        dispatch(showAlertForError(action.error, action.skipNotFound));\n      }\n    }\n\n    return next(action);\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport IconButton from '../../../components/icon_button';\n\nconst messages = defineMessages({\n  error: { id: 'bundle_modal_error.message', defaultMessage: 'Something went wrong while loading this component.' },\n  retry: { id: 'bundle_modal_error.retry', defaultMessage: 'Try again' },\n  close: { id: 'bundle_modal_error.close', defaultMessage: 'Close' },\n});\n\nclass BundleModalError extends React.PureComponent {\n\n  static propTypes = {\n    onRetry: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  handleRetry = () => {\n    this.props.onRetry();\n  };\n\n  render () {\n    const { onClose, intl: { formatMessage } } = this.props;\n\n    // Keep the markup in sync with <ModalLoading />\n    // (make sure they have the same dimensions)\n    return (\n      <div className='modal-root__modal error-modal'>\n        <div className='error-modal__body'>\n          <IconButton title={formatMessage(messages.retry)} icon='refresh' onClick={this.handleRetry} size={64} />\n          {formatMessage(messages.error)}\n        </div>\n\n        <div className='error-modal__footer'>\n          <div>\n            <button\n              onClick={onClose}\n              className='error-modal__nav onboarding-modal__skip'\n            >\n              {formatMessage(messages.close)}\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(BundleModalError);\n","import React from 'react';\n\nimport LoadingIndicator from '../../../components/loading_indicator';\n\n// Keep the markup in sync with <BundleModalError />\n// (make sure they have the same dimensions)\nconst ModalLoading = () => (\n  <div className='modal-root__modal error-modal'>\n    <div className='error-modal__body'>\n      <LoadingIndicator />\n    </div>\n    <div className='error-modal__footer'>\n      <div>\n        <button className='error-modal__nav onboarding-modal__skip' />\n      </div>\n    </div>\n  </div>\n);\n\nexport default ModalLoading;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport IconButton from '../../../components/icon_button';\nimport classNames from 'classnames';\n\nexport default class ActionsModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    status: ImmutablePropTypes.map,\n    actions: PropTypes.array,\n    onClick: PropTypes.func,\n  };\n\n  renderAction = (action, i) => {\n    if (action === null) {\n      return <li key={`sep-${i}`} className='dropdown-menu__separator' />;\n    }\n\n    const { icon = null, text, meta = null, active = false, href = '#' } = action;\n\n    return (\n      <li key={`${text}-${i}`}>\n        <a href={href} target='_blank' rel='noopener noreferrer' onClick={this.props.onClick} data-index={i} className={classNames({ active })}>\n          {icon && <IconButton title={text} icon={icon} role='presentation' tabIndex='-1' inverted />}\n          <div>\n            <div className={classNames({ 'actions-modal__item-label': !!meta })}>{text}</div>\n            <div>{meta}</div>\n          </div>\n        </a>\n      </li>\n    );\n  };\n\n  render () {\n    return (\n      <div className='modal-root__modal actions-modal'>\n        <ul className={classNames({ 'with-status': !!status })}>\n          {this.props.actions.map(this.renderAction)}\n        </ul>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Video from 'mastodon/features/video';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Footer from 'mastodon/features/picture_in_picture/components/footer';\nimport { getAverageFromBlurhash } from 'mastodon/blurhash';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  language: state.getIn(['statuses', statusId, 'language']),\n});\n\nexport default @connect(mapStateToProps, null, null, { forwardRef: true })\nclass VideoModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    statusId: PropTypes.string,\n    language: PropTypes.string,\n    options: PropTypes.shape({\n      startTime: PropTypes.number,\n      autoPlay: PropTypes.bool,\n      defaultVolume: PropTypes.number,\n    }),\n    onClose: PropTypes.func.isRequired,\n    onChangeBackgroundColor: PropTypes.func.isRequired,\n  };\n\n  componentDidMount () {\n    const { media, onChangeBackgroundColor } = this.props;\n\n    const backgroundColor = getAverageFromBlurhash(media.get('blurhash'));\n\n    if (backgroundColor) {\n      onChangeBackgroundColor(backgroundColor);\n    }\n  }\n\n  render () {\n    const { media, statusId, language, onClose } = this.props;\n    const options = this.props.options || {};\n\n    return (\n      <div className='modal-root__modal video-modal'>\n        <div className='video-modal__container'>\n          <Video\n            preview={media.get('preview_url')}\n            frameRate={media.getIn(['meta', 'original', 'frame_rate'])}\n            blurhash={media.get('blurhash')}\n            src={media.get('url')}\n            currentTime={options.startTime}\n            autoPlay={options.autoPlay}\n            volume={options.defaultVolume}\n            onCloseVideo={onClose}\n            autoFocus\n            detailed\n            alt={media.get('description')}\n            lang={language}\n          />\n        </div>\n\n        <div className='media-modal__overlay'>\n          {statusId && <Footer statusId={statusId} withOpenButton onClose={onClose} />}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '../../../components/button';\nimport StatusContent from '../../../components/status_content';\nimport Avatar from '../../../components/avatar';\nimport RelativeTimestamp from '../../../components/relative_timestamp';\nimport DisplayName from '../../../components/display_name';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Icon from 'mastodon/components/icon';\nimport AttachmentList from 'mastodon/components/attachment_list';\nimport PrivacyDropdown from 'mastodon/features/compose/components/privacy_dropdown';\nimport classNames from 'classnames';\nimport { changeBoostPrivacy } from 'mastodon/actions/boosts';\n\nconst messages = defineMessages({\n  cancel_reblog: { id: 'status.cancel_reblog_private', defaultMessage: 'Unboost' },\n  reblog: { id: 'status.reblog', defaultMessage: 'Boost' },\n  public_short: { id: 'privacy.public.short', defaultMessage: 'Public' },\n  unlisted_short: { id: 'privacy.unlisted.short', defaultMessage: 'Unlisted' },\n  private_short: { id: 'privacy.private.short', defaultMessage: 'Followers-only' },\n  direct_short: { id: 'privacy.direct.short', defaultMessage: 'Direct' },\n});\n\nconst mapStateToProps = state => {\n  return {\n    privacy: state.getIn(['boosts', 'new', 'privacy']),\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onChangeBoostPrivacy(value) {\n      dispatch(changeBoostPrivacy(value));\n    },\n  };\n};\n\nexport default @connect(mapStateToProps, mapDispatchToProps)\n@injectIntl\nclass BoostModal extends ImmutablePureComponent {\n\n  static contextTypes = {\n    router: PropTypes.object,\n  };\n\n  static propTypes = {\n    status: ImmutablePropTypes.map.isRequired,\n    onReblog: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onChangeBoostPrivacy: PropTypes.func.isRequired,\n    privacy: PropTypes.string.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleReblog = () => {\n    this.props.onReblog(this.props.status, this.props.privacy);\n    this.props.onClose();\n  };\n\n  handleAccountClick = (e) => {\n    if (e.button === 0 && !(e.ctrlKey || e.metaKey)) {\n      e.preventDefault();\n      this.props.onClose();\n      this.context.router.history.push(`/@${this.props.status.getIn(['account', 'acct'])}`);\n    }\n  };\n\n  _findContainer = () => {\n    return document.getElementsByClassName('modal-root__container')[0];\n  };\n\n  setRef = (c) => {\n    this.button = c;\n  };\n\n  render () {\n    const { status, privacy, intl } = this.props;\n    const buttonText = status.get('reblogged') ? messages.cancel_reblog : messages.reblog;\n\n    const visibilityIconInfo = {\n      'public': { icon: 'globe', text: intl.formatMessage(messages.public_short) },\n      'unlisted': { icon: 'unlock', text: intl.formatMessage(messages.unlisted_short) },\n      'private': { icon: 'lock', text: intl.formatMessage(messages.private_short) },\n      'direct': { icon: 'at', text: intl.formatMessage(messages.direct_short) },\n    };\n\n    const visibilityIcon = visibilityIconInfo[status.get('visibility')];\n\n    return (\n      <div className='modal-root__modal boost-modal'>\n        <div className='boost-modal__container'>\n          <div className={classNames('status', `status-${status.get('visibility')}`, 'light')}>\n            <div className='status__info'>\n              <a href={`/@${status.getIn(['account', 'acct'])}/${status.get('id')}`} className='status__relative-time' target='_blank' rel='noopener noreferrer'>\n                <span className='status__visibility-icon'><Icon id={visibilityIcon.icon} title={visibilityIcon.text} /></span>\n                <RelativeTimestamp timestamp={status.get('created_at')} />\n              </a>\n\n              <a onClick={this.handleAccountClick} href={`/@${status.getIn(['account', 'acct'])}`} className='status__display-name'>\n                <div className='status__avatar'>\n                  <Avatar account={status.get('account')} size={48} />\n                </div>\n\n                <DisplayName account={status.get('account')} />\n              </a>\n            </div>\n\n            <StatusContent status={status} />\n\n            {status.get('media_attachments').size > 0 && (\n              <AttachmentList\n                compact\n                media={status.get('media_attachments')}\n              />\n            )}\n          </div>\n        </div>\n\n        <div className='boost-modal__action-bar'>\n          <div><FormattedMessage id='boost_modal.combo' defaultMessage='You can press {combo} to skip this next time' values={{ combo: <span>Shift + <Icon id='retweet' /></span> }} /></div>\n          {status.get('visibility') !== 'private' && !status.get('reblogged') && (\n            <PrivacyDropdown\n              noDirect\n              value={privacy}\n              container={this._findContainer}\n              onChange={this.props.onChangeBoostPrivacy}\n            />\n          )}\n          <Button text={intl.formatMessage(buttonText)} onClick={this.handleReblog} ref={this.setRef} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport Audio from 'mastodon/features/audio';\nimport { connect } from 'react-redux';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport Footer from 'mastodon/features/picture_in_picture/components/footer';\n\nconst mapStateToProps = (state, { statusId }) => ({\n  language: state.getIn(['statuses', statusId, 'language']),\n  accountStaticAvatar: state.getIn(['accounts', state.getIn(['statuses', statusId, 'account']), 'avatar_static']),\n});\n\nexport default @connect(mapStateToProps, null, null, { forwardRef: true })\nclass AudioModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    statusId: PropTypes.string.isRequired,\n    language: PropTypes.string,\n    accountStaticAvatar: PropTypes.string.isRequired,\n    options: PropTypes.shape({\n      autoPlay: PropTypes.bool,\n    }),\n    onClose: PropTypes.func.isRequired,\n    onChangeBackgroundColor: PropTypes.func.isRequired,\n  };\n\n  render () {\n    const { media, language, accountStaticAvatar, statusId, onClose } = this.props;\n    const options = this.props.options || {};\n\n    return (\n      <div className='modal-root__modal audio-modal'>\n        <div className='audio-modal__container'>\n          <Audio\n            src={media.get('url')}\n            alt={media.get('description')}\n            lang={language}\n            duration={media.getIn(['meta', 'original', 'duration'], 0)}\n            height={150}\n            poster={media.get('preview_url') || accountStaticAvatar}\n            backgroundColor={media.getIn(['meta', 'colors', 'background'])}\n            foregroundColor={media.getIn(['meta', 'colors', 'foreground'])}\n            accentColor={media.getIn(['meta', 'colors', 'accent'])}\n            autoPlay={options.autoPlay}\n          />\n        </div>\n\n        <div className='media-modal__overlay'>\n          {statusId && <Footer statusId={statusId} withOpenButton onClose={onClose} />}\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport Button from '../../../components/button';\n\nexport default @injectIntl\nclass ConfirmationModal extends React.PureComponent {\n\n  static propTypes = {\n    message: PropTypes.node.isRequired,\n    confirm: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    secondary: PropTypes.string,\n    onSecondary: PropTypes.func,\n    closeWhenConfirm: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  static defaultProps = {\n    closeWhenConfirm: true,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleClick = () => {\n    if (this.props.closeWhenConfirm) {\n      this.props.onClose();\n    }\n    this.props.onConfirm();\n  };\n\n  handleSecondary = () => {\n    this.props.onClose();\n    this.props.onSecondary();\n  };\n\n  handleCancel = () => {\n    this.props.onClose();\n  };\n\n  setRef = (c) => {\n    this.button = c;\n  };\n\n  render () {\n    const { message, confirm, secondary } = this.props;\n\n    return (\n      <div className='modal-root__modal confirmation-modal'>\n        <div className='confirmation-modal__container'>\n          {message}\n        </div>\n\n        <div className='confirmation-modal__action-bar'>\n          <Button onClick={this.handleCancel} className='confirmation-modal__cancel-button'>\n            <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n          </Button>\n          {secondary !== undefined && (\n            <Button text={secondary} onClick={this.handleSecondary} className='confirmation-modal__secondary-button' />\n          )}\n          <Button text={confirm} onClick={this.handleClick} ref={this.setRef} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport PropTypes from 'prop-types';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\nimport classNames from 'classnames';\nimport { changeUploadCompose, uploadThumbnail, onChangeMediaDescription, onChangeMediaFocus } from '../../../actions/compose';\nimport { getPointerPosition } from '../../video';\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport Button from 'mastodon/components/button';\nimport Video from 'mastodon/features/video';\nimport Audio from 'mastodon/features/audio';\nimport Textarea from 'react-textarea-autosize';\nimport UploadProgress from 'mastodon/features/compose/components/upload_progress';\nimport CharacterCounter from 'mastodon/features/compose/components/character_counter';\nimport { length } from 'stringz';\nimport { Tesseract as fetchTesseract } from 'mastodon/features/ui/util/async-components';\nimport GIFV from 'mastodon/components/gifv';\nimport { me } from 'mastodon/initial_state';\n// eslint-disable-next-line import/no-extraneous-dependencies\nimport tesseractCorePath from 'tesseract.js-core/tesseract-core.wasm.js';\n// eslint-disable-next-line import/extensions\nimport tesseractWorkerPath from 'tesseract.js/dist/worker.min.js';\nimport { assetHost } from 'mastodon/utils/config';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n  apply: { id: 'upload_modal.apply', defaultMessage: 'Apply' },\n  applying: { id: 'upload_modal.applying', defaultMessage: 'Applying…' },\n  placeholder: { id: 'upload_modal.description_placeholder', defaultMessage: 'A quick brown fox jumps over the lazy dog' },\n  chooseImage: { id: 'upload_modal.choose_image', defaultMessage: 'Choose image' },\n  discardMessage: { id: 'confirmations.discard_edit_media.message', defaultMessage: 'You have unsaved changes to the media description or preview, discard them anyway?' },\n  discardConfirm: { id: 'confirmations.discard_edit_media.confirm', defaultMessage: 'Discard' },\n});\n\nconst mapStateToProps = (state, { id }) => ({\n  media: state.getIn(['compose', 'media_attachments']).find(item => item.get('id') === id),\n  account: state.getIn(['accounts', me]),\n  isUploadingThumbnail: state.getIn(['compose', 'isUploadingThumbnail']),\n  description: state.getIn(['compose', 'media_modal', 'description']),\n  lang: state.getIn(['compose', 'language']),\n  focusX: state.getIn(['compose', 'media_modal', 'focusX']),\n  focusY: state.getIn(['compose', 'media_modal', 'focusY']),\n  dirty: state.getIn(['compose', 'media_modal', 'dirty']),\n  is_changing_upload: state.getIn(['compose', 'is_changing_upload']),\n});\n\nconst mapDispatchToProps = (dispatch, { id }) => ({\n\n  onSave: (description, x, y) => {\n    dispatch(changeUploadCompose(id, { description, focus: `${x.toFixed(2)},${y.toFixed(2)}` }));\n  },\n\n  onChangeDescription: (description) => {\n    dispatch(onChangeMediaDescription(description));\n  },\n\n  onChangeFocus: (focusX, focusY) => {\n    dispatch(onChangeMediaFocus(focusX, focusY));\n  },\n\n  onSelectThumbnail: files => {\n    dispatch(uploadThumbnail(id, files[0]));\n  },\n\n});\n\nconst removeExtraLineBreaks = str => str.replace(/\\n\\n/g, '******')\n  .replace(/\\n/g, ' ')\n  .replace(/\\*\\*\\*\\*\\*\\*/g, '\\n\\n');\n\nclass ImageLoader extends React.PureComponent {\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    width: PropTypes.number,\n    height: PropTypes.number,\n  };\n\n  state = {\n    loading: true,\n  };\n\n  componentDidMount() {\n    const image = new Image();\n    image.addEventListener('load', () => this.setState({ loading: false }));\n    image.src = this.props.src;\n  }\n\n  render () {\n    const { loading } = this.state;\n\n    if (loading) {\n      return <canvas width={this.props.width} height={this.props.height} />;\n    } else {\n      return <img {...this.props} alt='' />;\n    }\n  }\n\n}\n\nexport default @connect(mapStateToProps, mapDispatchToProps, null, { forwardRef: true })\n@(component => injectIntl(component, { withRef: true }))\nclass FocalPointModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    media: ImmutablePropTypes.map.isRequired,\n    account: ImmutablePropTypes.map.isRequired,\n    isUploadingThumbnail: PropTypes.bool,\n    onSave: PropTypes.func.isRequired,\n    onChangeDescription: PropTypes.func.isRequired,\n    onChangeFocus: PropTypes.func.isRequired,\n    onSelectThumbnail: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    dragging: false,\n    dirty: false,\n    progress: 0,\n    loading: true,\n    ocrStatus: '',\n  };\n\n  componentWillUnmount () {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n  }\n\n  handleMouseDown = e => {\n    document.addEventListener('mousemove', this.handleMouseMove);\n    document.addEventListener('mouseup', this.handleMouseUp);\n\n    this.updatePosition(e);\n    this.setState({ dragging: true });\n  };\n\n  handleTouchStart = e => {\n    document.addEventListener('touchmove', this.handleMouseMove);\n    document.addEventListener('touchend', this.handleTouchEnd);\n\n    this.updatePosition(e);\n    this.setState({ dragging: true });\n  };\n\n  handleMouseMove = e => {\n    this.updatePosition(e);\n  };\n\n  handleMouseUp = () => {\n    document.removeEventListener('mousemove', this.handleMouseMove);\n    document.removeEventListener('mouseup', this.handleMouseUp);\n\n    this.setState({ dragging: false });\n  };\n\n  handleTouchEnd = () => {\n    document.removeEventListener('touchmove', this.handleMouseMove);\n    document.removeEventListener('touchend', this.handleTouchEnd);\n\n    this.setState({ dragging: false });\n  };\n\n  updatePosition = e => {\n    const { x, y } = getPointerPosition(this.node, e);\n    const focusX   = (x - .5) *  2;\n    const focusY   = (y - .5) * -2;\n\n    this.props.onChangeFocus(focusX, focusY);\n  };\n\n  handleChange = e => {\n    this.props.onChangeDescription(e.target.value);\n  };\n\n  handleKeyDown = (e) => {\n    if (e.keyCode === 13 && (e.ctrlKey || e.metaKey)) {\n      this.props.onChangeDescription(e.target.value);\n      this.handleSubmit(e);\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    this.props.onSave(this.props.description, this.props.focusX, this.props.focusY);\n  };\n\n  getCloseConfirmationMessage = () => {\n    const { intl, dirty } = this.props;\n\n    if (dirty) {\n      return {\n        message: intl.formatMessage(messages.discardMessage),\n        confirm: intl.formatMessage(messages.discardConfirm),\n      };\n    } else {\n      return null;\n    }\n  };\n\n  setRef = c => {\n    this.node = c;\n  };\n\n  handleTextDetection = () => {\n    this._detectText();\n  };\n\n  _detectText = (refreshCache = false) => {\n    const { media } = this.props;\n\n    this.setState({ detecting: true });\n\n    fetchTesseract().then(({ createWorker }) => {\n      const worker = createWorker({\n        workerPath: tesseractWorkerPath,\n        corePath: tesseractCorePath,\n        langPath: `${assetHost}/ocr/lang-data/`,\n        logger: ({ status, progress }) => {\n          if (status === 'recognizing text') {\n            this.setState({ ocrStatus: 'detecting', progress });\n          } else {\n            this.setState({ ocrStatus: 'preparing', progress });\n          }\n        },\n        cacheMethod: refreshCache ? 'refresh' : 'write',\n      });\n\n      let media_url = media.get('url');\n\n      if (window.URL && URL.createObjectURL) {\n        try {\n          media_url = URL.createObjectURL(media.get('file'));\n        } catch (error) {\n          console.error(error);\n        }\n      }\n\n      return (async () => {\n        await worker.load();\n        await worker.loadLanguage('eng');\n        await worker.initialize('eng');\n        const { data: { text } } = await worker.recognize(media_url);\n        this.setState({ detecting: false });\n        this.props.onChangeDescription(removeExtraLineBreaks(text));\n        await worker.terminate();\n      })().catch((e) => {\n        if (refreshCache) {\n          throw e;\n        } else {\n          this._detectText(true);\n        }\n      });\n    }).catch((e) => {\n      console.error(e);\n      this.setState({ detecting: false });\n    });\n  };\n\n  handleThumbnailChange = e => {\n    if (e.target.files.length > 0) {\n      this.props.onSelectThumbnail(e.target.files);\n    }\n  };\n\n  setFileInputRef = c => {\n    this.fileInput = c;\n  };\n\n  handleFileInputClick = () => {\n    this.fileInput.click();\n  };\n\n  render () {\n    const { media, intl, account, onClose, isUploadingThumbnail, description, lang, focusX, focusY, dirty, is_changing_upload } = this.props;\n    const { dragging, detecting, progress, ocrStatus } = this.state;\n    const x = (focusX /  2) + .5;\n    const y = (focusY / -2) + .5;\n\n    const width  = media.getIn(['meta', 'original', 'width']) || null;\n    const height = media.getIn(['meta', 'original', 'height']) || null;\n    const focals = ['image', 'gifv'].includes(media.get('type'));\n    const thumbnailable = ['audio', 'video'].includes(media.get('type'));\n\n    const previewRatio  = 16/9;\n    const previewWidth  = 200;\n    const previewHeight = previewWidth / previewRatio;\n\n    let descriptionLabel = null;\n\n    if (media.get('type') === 'audio') {\n      descriptionLabel = <FormattedMessage id='upload_form.audio_description' defaultMessage='Describe for people who are hard of hearing' />;\n    } else if (media.get('type') === 'video') {\n      descriptionLabel = <FormattedMessage id='upload_form.video_description' defaultMessage='Describe for people who are deaf, hard of hearing, blind or have low vision' />;\n    } else {\n      descriptionLabel = <FormattedMessage id='upload_form.description' defaultMessage='Describe for people who are blind or have low vision' />;\n    }\n\n    let ocrMessage = '';\n    if (ocrStatus === 'detecting') {\n      ocrMessage = <FormattedMessage id='upload_modal.analyzing_picture' defaultMessage='Analyzing picture…' />;\n    } else {\n      ocrMessage = <FormattedMessage id='upload_modal.preparing_ocr' defaultMessage='Preparing OCR…' />;\n    }\n\n    return (\n      <div className='modal-root__modal report-modal' style={{ maxWidth: 960 }}>\n        <div className='report-modal__target'>\n          <IconButton className='report-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={20} />\n          <FormattedMessage id='upload_modal.edit_media' defaultMessage='Edit media' />\n        </div>\n\n        <div className='report-modal__container'>\n          <form className='report-modal__comment' onSubmit={this.handleSubmit} >\n            {focals && <p><FormattedMessage id='upload_modal.hint' defaultMessage='Click or drag the circle on the preview to choose the focal point which will always be in view on all thumbnails.' /></p>}\n\n            {thumbnailable && (\n              <React.Fragment>\n                <label className='setting-text-label' htmlFor='upload-modal__thumbnail'><FormattedMessage id='upload_form.thumbnail' defaultMessage='Change thumbnail' /></label>\n\n                <Button disabled={isUploadingThumbnail || !media.get('unattached')} text={intl.formatMessage(messages.chooseImage)} onClick={this.handleFileInputClick} />\n\n                <label>\n                  <span style={{ display: 'none' }}>{intl.formatMessage(messages.chooseImage)}</span>\n\n                  <input\n                    id='upload-modal__thumbnail'\n                    ref={this.setFileInputRef}\n                    type='file'\n                    accept='image/png,image/jpeg'\n                    onChange={this.handleThumbnailChange}\n                    style={{ display: 'none' }}\n                    disabled={isUploadingThumbnail || is_changing_upload}\n                  />\n                </label>\n\n                <hr className='setting-divider' />\n              </React.Fragment>\n            )}\n\n            <label className='setting-text-label' htmlFor='upload-modal__description'>\n              {descriptionLabel}\n            </label>\n\n            <div className='setting-text__wrapper'>\n              <Textarea\n                id='upload-modal__description'\n                className='setting-text light'\n                value={detecting ? '…' : description}\n                lang={lang}\n                onChange={this.handleChange}\n                onKeyDown={this.handleKeyDown}\n                disabled={detecting || is_changing_upload}\n                autoFocus\n              />\n\n              <div className='setting-text__modifiers'>\n                <UploadProgress progress={progress * 100} active={detecting} icon='file-text-o' message={ocrMessage} />\n              </div>\n            </div>\n\n            <div className='setting-text__toolbar'>\n              <button\n                type='button'\n                disabled={detecting || media.get('type') !== 'image' || is_changing_upload}\n                className='link-button'\n                onClick={this.handleTextDetection}\n              >\n                <FormattedMessage id='upload_modal.detect_text' defaultMessage='Detect text from picture' />\n              </button>\n              <CharacterCounter max={1500} text={detecting ? '' : description} />\n            </div>\n\n            <Button\n              type='submit'\n              disabled={!dirty || detecting || isUploadingThumbnail || length(description) > 1500 || is_changing_upload}\n              text={intl.formatMessage(is_changing_upload ? messages.applying : messages.apply)}\n            />\n          </form>\n\n          <div className='focal-point-modal__content'>\n            {focals && (\n              <div className={classNames('focal-point', { dragging })} ref={this.setRef} onMouseDown={this.handleMouseDown} onTouchStart={this.handleTouchStart}>\n                {media.get('type') === 'image' && <ImageLoader src={media.get('url')} width={width} height={height} alt='' />}\n                {media.get('type') === 'gifv' && <GIFV src={media.get('url')} width={width} height={height} />}\n\n                <div className='focal-point__preview'>\n                  <strong><FormattedMessage id='upload_modal.preview_label' defaultMessage='Preview ({ratio})' values={{ ratio: '16:9' }} /></strong>\n                  <div style={{ width: previewWidth, height: previewHeight, backgroundImage: `url(${media.get('preview_url')})`, backgroundSize: 'cover', backgroundPosition: `${x * 100}% ${y * 100}%` }} />\n                </div>\n\n                <div className='focal-point__reticle' style={{ top: `${y * 100}%`, left: `${x * 100}%` }} />\n                <div className='focal-point__overlay' />\n              </div>\n            )}\n\n            {media.get('type') === 'video' && (\n              <Video\n                preview={media.get('preview_url')}\n                frameRate={media.getIn(['meta', 'original', 'frame_rate'])}\n                blurhash={media.get('blurhash')}\n                src={media.get('url')}\n                detailed\n                inline\n                editable\n              />\n            )}\n\n            {media.get('type') === 'audio' && (\n              <Audio\n                src={media.get('url')}\n                duration={media.getIn(['meta', 'original', 'duration'], 0)}\n                height={150}\n                poster={media.get('preview_url') || account.get('avatar_static')}\n                backgroundColor={media.getIn(['meta', 'colors', 'background'])}\n                foregroundColor={media.getIn(['meta', 'colors', 'foreground'])}\n                accentColor={media.getIn(['meta', 'colors', 'accent'])}\n                editable\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { defineMessages, injectIntl } from 'react-intl';\nimport IconButton from 'mastodon/components/icon_button';\nimport ImageLoader from './image_loader';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nexport default @injectIntl\nclass ImageModal extends React.PureComponent {\n\n  static propTypes = {\n    src: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    navigationHidden: false,\n  };\n\n  toggleNavigation = () => {\n    this.setState(prevState => ({\n      navigationHidden: !prevState.navigationHidden,\n    }));\n  };\n\n  render () {\n    const { intl, src, alt, onClose } = this.props;\n    const { navigationHidden } = this.state;\n\n    const navigationClassName = classNames('media-modal__navigation', {\n      'media-modal__navigation--hidden': navigationHidden,\n    });\n\n    return (\n      <div className='modal-root__modal media-modal'>\n        <div className='media-modal__closer' role='presentation' onClick={onClose} >\n          <ImageLoader\n            src={src}\n            width={400}\n            height={400}\n            alt={alt}\n            onClick={this.toggleNavigation}\n          />\n        </div>\n\n        <div className={navigationClassName}>\n          <IconButton className='media-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={40} />\n        </div>\n      </div>\n    );\n  }\n\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getScrollbarWidth } from 'mastodon/utils/scrollbar';\nimport Base from 'mastodon/components/modal_root';\nimport BundleContainer from '../containers/bundle_container';\nimport BundleModalError from './bundle_modal_error';\nimport ModalLoading from './modal_loading';\nimport ActionsModal from './actions_modal';\nimport MediaModal from './media_modal';\nimport VideoModal from './video_modal';\nimport BoostModal from './boost_modal';\nimport AudioModal from './audio_modal';\nimport ConfirmationModal from './confirmation_modal';\nimport FocalPointModal from './focal_point_modal';\nimport ImageModal from './image_modal';\nimport {\n  MuteModal,\n  BlockModal,\n  ReportModal,\n  EmbedModal,\n  ListEditor,\n  ListAdder,\n  CompareHistoryModal,\n  FilterModal,\n  InteractionModal,\n  SubscribedLanguagesModal,\n  ClosedRegistrationsModal,\n} from 'mastodon/features/ui/util/async-components';\nimport { Helmet } from 'react-helmet';\n\nconst MODAL_COMPONENTS = {\n  'MEDIA': () => Promise.resolve({ default: MediaModal }),\n  'VIDEO': () => Promise.resolve({ default: VideoModal }),\n  'AUDIO': () => Promise.resolve({ default: AudioModal }),\n  'IMAGE': () => Promise.resolve({ default: ImageModal }),\n  'BOOST': () => Promise.resolve({ default: BoostModal }),\n  'CONFIRM': () => Promise.resolve({ default: ConfirmationModal }),\n  'MUTE': MuteModal,\n  'BLOCK': BlockModal,\n  'REPORT': ReportModal,\n  'ACTIONS': () => Promise.resolve({ default: ActionsModal }),\n  'EMBED': EmbedModal,\n  'LIST_EDITOR': ListEditor,\n  'FOCAL_POINT': () => Promise.resolve({ default: FocalPointModal }),\n  'LIST_ADDER': ListAdder,\n  'COMPARE_HISTORY': CompareHistoryModal,\n  'FILTER': FilterModal,\n  'SUBSCRIBED_LANGUAGES': SubscribedLanguagesModal,\n  'INTERACTION': InteractionModal,\n  'CLOSED_REGISTRATIONS': ClosedRegistrationsModal,\n};\n\nexport default class ModalRoot extends React.PureComponent {\n\n  static propTypes = {\n    type: PropTypes.string,\n    props: PropTypes.object,\n    onClose: PropTypes.func.isRequired,\n    ignoreFocus: PropTypes.bool,\n  };\n\n  state = {\n    backgroundColor: null,\n  };\n\n  getSnapshotBeforeUpdate () {\n    return { visible: !!this.props.type };\n  }\n\n  componentDidUpdate (prevProps, prevState, { visible }) {\n    if (visible) {\n      document.body.classList.add('with-modals--active');\n      document.documentElement.style.marginRight = `${getScrollbarWidth()}px`;\n    } else {\n      document.body.classList.remove('with-modals--active');\n      document.documentElement.style.marginRight = 0;\n    }\n  }\n\n  setBackgroundColor = color => {\n    this.setState({ backgroundColor: color });\n  };\n\n  renderLoading = modalId => () => {\n    return ['MEDIA', 'VIDEO', 'BOOST', 'CONFIRM', 'ACTIONS'].indexOf(modalId) === -1 ? <ModalLoading /> : null;\n  };\n\n  renderError = (props) => {\n    const { onClose } = this.props;\n\n    return <BundleModalError {...props} onClose={onClose} />;\n  };\n\n  handleClose = (ignoreFocus = false) => {\n    const { onClose } = this.props;\n    let message = null;\n    try {\n      message = this._modal?.getWrappedInstance?.().getCloseConfirmationMessage?.();\n    } catch (_) {\n      // injectIntl defines `getWrappedInstance` but errors out if `withRef`\n      // isn't set.\n      // This would be much smoother with react-intl 3+ and `forwardRef`.\n    }\n    onClose(message, ignoreFocus);\n  };\n\n  setModalRef = (c) => {\n    this._modal = c;\n  };\n\n  render () {\n    const { type, props, ignoreFocus } = this.props;\n    const { backgroundColor } = this.state;\n    const visible = !!type;\n\n    return (\n      <Base backgroundColor={backgroundColor} onClose={this.handleClose} ignoreFocus={ignoreFocus}>\n        {visible && (\n          <>\n            <BundleContainer fetchComponent={MODAL_COMPONENTS[type]} loading={this.renderLoading(type)} error={this.renderError} renderDelay={200}>\n              {(SpecificComponent) => <SpecificComponent {...props} onChangeBackgroundColor={this.setBackgroundColor} onClose={this.handleClose} ref={this.setModalRef} />}\n            </BundleContainer>\n\n            <Helmet>\n              <meta name='robots' content='noindex' />\n            </Helmet>\n          </>\n        )}\n      </Base>\n    );\n  }\n\n}\n","import { connect } from 'react-redux';\nimport { openModal, closeModal } from '../../../actions/modal';\nimport ModalRoot from '../components/modal_root';\n\nconst mapStateToProps = state => ({\n  ignoreFocus: state.getIn(['modal', 'ignoreFocus']),\n  type: state.getIn(['modal', 'stack', 0, 'modalType'], null),\n  props: state.getIn(['modal', 'stack', 0, 'modalProps'], {}),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onClose (confirmationMessage, ignoreFocus = false) {\n    if (confirmationMessage) {\n      dispatch(\n        openModal('CONFIRM', {\n          message: confirmationMessage.message,\n          confirm: confirmationMessage.confirm,\n          onConfirm: () => dispatch(closeModal(undefined, { ignoreFocus })),\n        }),\n      );\n    } else {\n      dispatch(closeModal(undefined, { ignoreFocus }));\n    }\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalRoot);\n"],"sourceRoot":""}